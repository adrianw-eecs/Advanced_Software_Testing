<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:40:43 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-69/HBASE-69.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-69] [hbase] Make cache flush triggering less simplistic</title>
                <link>https://issues.apache.org/jira/browse/HBASE-69</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;When flusher runs &amp;#8211; its triggered when the sum of all Stores in a Region &amp;gt; a configurable max size &amp;#8211; we flush all Stores though a Store memcache might have but a few bytes.&lt;/p&gt;

&lt;p&gt;I would think Stores should only dump their memcache disk if they have some substance.&lt;/p&gt;

&lt;p&gt;The problem becomes more acute, the more families you have in a Region.&lt;/p&gt;

&lt;p&gt;Possible behaviors would be to dump the biggest Store only, or only those Stores &amp;gt; 50% of max memcache size.  Behavior would vary dependent on the prompt that provoked the flush.  Would also log why the flush is running: optional or &amp;gt; max size.&lt;/p&gt;

&lt;p&gt;This issue comes out of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-192&quot; title=&quot;Memcache flush flushing every 60 secs with out considering the max memcache size&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-192&quot;&gt;&lt;del&gt;HADOOP-2621&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12386455">HBASE-69</key>
            <summary>[hbase] Make cache flush triggering less simplistic</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="jimk">Jim Kellerman</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Thu, 17 Jan 2008 06:35:11 +0000</created>
                <updated>Fri, 22 Aug 2008 21:13:05 +0000</updated>
                            <resolved>Fri, 22 Feb 2008 17:17:11 +0000</resolved>
                                                    <fixVersion>0.2.0</fixVersion>
                                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12559938" author="jimk" created="Thu, 17 Jan 2008 14:15:00 +0000"  >&lt;p&gt;Better yet, move triggering of cache flush to the store level instead of the region level. Same for compactions.&lt;/p&gt;

&lt;p&gt;Split still has to happen at the region level because it is the region that embodies the concept of row range. However the split could be triggered by a single store reaching the split threshold.&lt;/p&gt;</comment>
                            <comment id="12560016" author="stack" created="Thu, 17 Jan 2008 18:11:05 +0000"  >&lt;p&gt;+1 on doing things at store level.&lt;/p&gt;

&lt;p&gt;Hard part is keeping account of all the memcaches in all the Stores on all the Regions on an HRS, but thats another issue (smile).&lt;/p&gt;</comment>
                            <comment id="12560054" author="viper799" created="Thu, 17 Jan 2008 19:47:53 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="12561369" author="stack" created="Tue, 22 Jan 2008 16:09:10 +0000"  >&lt;p&gt;.bg &lt;span class=&quot;error&quot;&gt;&amp;#91;Copied from HADOOP-2674&amp;#93;&lt;/span&gt; Optional cache flushing and zero length flushes will be removed in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-69&quot; title=&quot;[hbase] Make cache flush triggering less simplistic&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-69&quot;&gt;&lt;del&gt;HADOOP-2636&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Why will optional cache flushing be removed?  Will anything be done in its place?&lt;/p&gt;</comment>
                            <comment id="12561371" author="stack" created="Tue, 22 Jan 2008 16:11:22 +0000"  >&lt;p&gt;.bq &lt;span class=&quot;error&quot;&gt;&amp;#91;Copied from HADOOP-2674&amp;#93;&lt;/span&gt; ... size reported is the mapfile size.  In &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-69&quot; title=&quot;[hbase] Make cache flush triggering less simplistic&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-69&quot;&gt;&lt;del&gt;HADOOP-2636&lt;/del&gt;&lt;/a&gt;, it will be the size of the memcache.&lt;/p&gt;

&lt;p&gt;For kicks, you might log both memcache size &amp;#8211; in bytes and count &amp;#8211; and resultant log file size.&lt;/p&gt;</comment>
                            <comment id="12561385" author="jimk" created="Tue, 22 Jan 2008 17:26:49 +0000"  >&lt;p&gt;&amp;gt; Why will optional cache flushing be removed? Will anything be done in its place?&lt;/p&gt;

&lt;p&gt;Optional cache flushing will be removed as it will no longer be necessary. Cache flushes will happen when the cache fills or when the region is closed. All the information is in the HLog anyway.&lt;/p&gt;

&lt;p&gt;&amp;gt; For kicks, you might log both memcache size - in bytes and count - and resultant log file size.&lt;/p&gt;

&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="12562949" author="jimk" created="Sun, 27 Jan 2008 02:07:45 +0000"  >&lt;p&gt;This is the first patch that works locally. Not submitting, because there will undoubtedly be more updates checked in for the 0.16 release before 0.17 opens up.&lt;/p&gt;</comment>
                            <comment id="12562954" author="viper799" created="Sun, 27 Jan 2008 04:47:26 +0000"  >&lt;p&gt;I tried your patch out above and it only flushing one column for me I have three getting data and I only see one flushing and its flushing back to back over and over.&lt;/p&gt;

&lt;p&gt;Example this is a flush on the same column 4 times with in one sec&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2008-01-26 22:40:14,137 DEBUG org.apache.hadoop.hbase.HRegion: Started memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region webdata,,1201405676281 store 332212182/in_rank
2008-01-26 22:40:14,418 DEBUG org.apache.hadoop.hbase.HStore: Added 332212182/in_rank/1595847912559744983 with 70 entries, sequence id 1877650, and size 6.6k &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; 332212182/in_rank
2008-01-26 22:40:14,418 DEBUG org.apache.hadoop.hbase.HRegion: Finished memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; store 332212182/in_rank in 281ms, sequenceid=1877650
2008-01-26 22:40:14,436 DEBUG org.apache.hadoop.hbase.HRegion: Started memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region webdata,,1201405676281 store 332212182/in_rank
2008-01-26 22:40:14,650 DEBUG org.apache.hadoop.hbase.HStore: Added 332212182/in_rank/3253290776281930479 with 6 entries, sequence id 1877667, and size 621.0 &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; 332212182/in_rank
2008-01-26 22:40:14,650 DEBUG org.apache.hadoop.hbase.HRegion: Finished memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; store 332212182/in_rank in 214ms, sequenceid=1877667
2008-01-26 22:40:14,682 DEBUG org.apache.hadoop.hbase.HRegion: Started memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region webdata,,1201405676281 store 332212182/in_rank
2008-01-26 22:40:14,893 DEBUG org.apache.hadoop.hbase.HStore: Added 332212182/in_rank/6244850576092789885 with 5 entries, sequence id 1877683, and size 497.0 &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; 332212182/in_rank
2008-01-26 22:40:14,894 DEBUG org.apache.hadoop.hbase.HRegion: Finished memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; store 332212182/in_rank in 212ms, sequenceid=1877683
2008-01-26 22:40:14,941 DEBUG org.apache.hadoop.hbase.HRegion: Started memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region webdata,,1201405676281 store 332212182/in_rank
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12562969" author="jimk" created="Sun, 27 Jan 2008 08:46:17 +0000"  >&lt;p&gt;Thanks for trying this out Billy, as it turned out, the HStore could queue several requests to flush itself before the flusher could act on it. I have modified this so that if an HStore is in the flush queue, it won&apos;t get entered a second time.&lt;/p&gt;

&lt;p&gt;The latest patch contains this fix.&lt;/p&gt;

&lt;p&gt;Additionally, I have re-written Leases to be event-driven rather than a polling model.&lt;/p&gt;

&lt;p&gt;If you get a chance, try it out. &lt;/p&gt;</comment>
                            <comment id="12562973" author="jimk" created="Sun, 27 Jan 2008 09:48:33 +0000"  >&lt;p&gt;This patch does not requeue flushes, compactions or splits if they are already in the queue.&lt;/p&gt;</comment>
                            <comment id="12563012" author="viper799" created="Sun, 27 Jan 2008 19:26:25 +0000"  >&lt;p&gt;works ok until the first flush then they flush back to back.&lt;br/&gt;
I got my flush size set to 64MB and you see below the flush is on the columns are in the low KB&apos;s and they are flushed several times a min&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2008-01-27 13:23:12,428 DEBUG org.apache.hadoop.hbase.HStore: Added 673880687/anchor/3002468228224142295 with 2198 entries, sequence id 2169440, and size 250.1k &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; 673880687/anchor
2008-01-27 13:23:12,428 DEBUG org.apache.hadoop.hbase.HRegion: Finished memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; store 673880687/anchor in 503ms, sequenceid=2169440
2008-01-27 13:23:12,429 DEBUG org.apache.hadoop.hbase.HRegion: Started memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region webdata,,1201461077996 store 673880687/in_rank
2008-01-27 13:23:13,009 DEBUG org.apache.hadoop.hbase.HStore: Added 673880687/in_rank/8574408391914465288 with 1428 entries, sequence id 2171549, and size 158.0k &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; 673880687/in_rank
2008-01-27 13:23:13,010 DEBUG org.apache.hadoop.hbase.HRegion: Finished memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; store 673880687/in_rank in 581ms, sequenceid=2171549
2008-01-27 13:23:13,011 DEBUG org.apache.hadoop.hbase.HRegion: Started memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region webdata,,1201461077996 store 673880687/last_seen
2008-01-27 13:23:13,603 DEBUG org.apache.hadoop.hbase.HStore: Added 673880687/last_seen/1870135185038371518 with 2736 entries, sequence id 2173487, and size 295.4k &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; 673880687/last_seen
2008-01-27 13:23:13,603 DEBUG org.apache.hadoop.hbase.HRegion: Finished memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; store 673880687/last_seen in 592ms, sequenceid=2173487
2008-01-27 13:23:13,609 DEBUG org.apache.hadoop.hbase.HRegion: Started memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region webdata,,1201461077996 store 673880687/anchor
2008-01-27 13:23:14,179 DEBUG org.apache.hadoop.hbase.HStore: Added 673880687/anchor/580140819100995513 with 1989 entries, sequence id 2175620, and size 216.4k &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; 673880687/anchor
2008-01-27 13:23:14,180 DEBUG org.apache.hadoop.hbase.HRegion: Finished memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; store 673880687/anchor in 572ms, sequenceid=2175620
2008-01-27 13:23:14,181 DEBUG org.apache.hadoop.hbase.HRegion: Started memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region webdata,,1201461077996 store 673880687/in_rank
2008-01-27 13:23:14,693 DEBUG org.apache.hadoop.hbase.HStore: Added 673880687/in_rank/5202798596377303202 with 1896 entries, sequence id 2177448, and size 213.7k &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; 673880687/in_rank
2008-01-27 13:23:14,693 DEBUG org.apache.hadoop.hbase.HRegion: Finished memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; store 673880687/in_rank in 512ms, sequenceid=2177448
2008-01-27 13:23:14,696 DEBUG org.apache.hadoop.hbase.HRegion: Started memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region webdata,,1201461077996 store 673880687/last_seen
2008-01-27 13:23:15,260 DEBUG org.apache.hadoop.hbase.HStore: Added 673880687/last_seen/8482135742832457522 with 1940 entries, sequence id 2179528, and size 206.2k &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; 673880687/last_seen
2008-01-27 13:23:15,260 DEBUG org.apache.hadoop.hbase.HRegion: Finished memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; store 673880687/last_seen in 564ms, sequenceid=2179528
2008-01-27 13:23:15,276 DEBUG org.apache.hadoop.hbase.HRegion: Started memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region webdata,,1201461077996 store 673880687/anchor
2008-01-27 13:23:15,839 DEBUG org.apache.hadoop.hbase.HStore: Added 673880687/anchor/7980708509699803761 with 1991 entries, sequence id 2181788, and size 204.6k &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; 673880687/anchor
2008-01-27 13:23:15,839 DEBUG org.apache.hadoop.hbase.HRegion: Finished memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; store 673880687/anchor in 564ms, sequenceid=2181788
2008-01-27 13:23:15,840 DEBUG org.apache.hadoop.hbase.HRegion: Started memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region webdata,,1201461077996 store 673880687/in_rank
2008-01-27 13:23:16,423 DEBUG org.apache.hadoop.hbase.HStore: Added 673880687/in_rank/1305487102801331533 with 2150 entries, sequence id 2184079, and size 221.0k &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; 673880687/in_rank
2008-01-27 13:23:16,423 DEBUG org.apache.hadoop.hbase.HRegion: Finished memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; store 673880687/in_rank in 583ms, sequenceid=2184079
2008-01-27 13:23:16,425 DEBUG org.apache.hadoop.hbase.HRegion: Started memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region webdata,,1201461077996 store 673880687/last_seen
2008-01-27 13:23:17,138 DEBUG org.apache.hadoop.hbase.HStore: Added 673880687/last_seen/1135861004256783910 with 2258 entries, sequence id 2186492, and size 221.2k &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; 673880687/last_seen
2008-01-27 13:23:17,138 DEBUG org.apache.hadoop.hbase.HRegion: Finished memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; store 673880687/last_seen in 713ms, sequenceid=2186492
2008-01-27 13:23:17,139 DEBUG org.apache.hadoop.hbase.HRegion: Started memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region webdata,,1201461077996 store 673880687/anchor
2008-01-27 13:23:17,366 INFO org.apache.hadoop.hbase.HRegionServer: Rolling hlog. &lt;span class=&quot;code-object&quot;&gt;Number&lt;/span&gt; of entries: 30003
2008-01-27 13:23:17,738 DEBUG org.apache.hadoop.hbase.HStore: Added 673880687/anchor/5010915044698800730 with 2232 entries, sequence id 2188716, and size 236.5k &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; 673880687/anchor
2008-01-27 13:23:17,738 DEBUG org.apache.hadoop.hbase.HRegion: Finished memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; store 673880687/anchor in 599ms, sequenceid=2188716
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12563645" author="stack" created="Tue, 29 Jan 2008 20:11:05 +0000"  >&lt;p&gt;In HLogKey, was it just a case of a misnamed data member?  All along it was a store but we were calling it region?  See below:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-  Text regionName = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Text();
+  Text storeName = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Text();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Can this string creation be avoided in HStore; e.g. can storeName be Text?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+            || (key.getStoreName().toString().compareTo(storeName) != 0)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Logging below at INFO level seems inappropriate:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;Not flushing cache &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; &quot;&lt;/span&gt; + storeName +
+          &lt;span class=&quot;code-quote&quot;&gt;&quot; because it has 0 entries&quot;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This kind of logging doesn&apos;t help (though I think this log is just a line moved from elsewhere):&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+            LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;nothing to compact &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; &quot;&lt;/span&gt; + &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.storeName);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Should say why there is nothing to compact &amp;#8211; e.g. only one file present or holds references.&lt;/p&gt;

&lt;p&gt;Just remove rather than comment out?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-      HStoreKey rowKey = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HStoreKey(row, timestamp);
+/*      HStoreKey rowKey = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HStoreKey(row, timestamp); */
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;HStoreSize inner class is no longer needed because the check is local to HStore where before it was higher up in HRegion?  The info HStoreSize carried is now all availble in the context where the check is being done?&lt;/p&gt;

&lt;p&gt;Nice how you cleaned up lease-making/updating.&lt;/p&gt;

&lt;p&gt;Why make RowMap non-private?  Its used by inner classes?&lt;/p&gt;

&lt;p&gt;The below no longer makes use of TextSequences?  Any reason for that?  (TS was means of cutting down on object creations. Profiling, using TSs made a big difference).&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-      Text qualifier = HStoreKey.extractQualifier(col);
+      Text member = HStoreKey.extractMember(col);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</comment>
                            <comment id="12563761" author="jimk" created="Wed, 30 Jan 2008 00:47:01 +0000"  >&lt;p&gt;&amp;gt; stack commented on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-69&quot; title=&quot;[hbase] Make cache flush triggering less simplistic&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-69&quot;&gt;&lt;del&gt;HADOOP-2636&lt;/del&gt;&lt;/a&gt;:&lt;br/&gt;
&amp;gt; -------------------------------&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; In HLogKey, was it just a case of a misnamed data member?  &lt;br/&gt;
&amp;gt; All along it was a store but we were calling it region?  See below:&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&amp;gt; -  Text regionName = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Text();
&amp;gt; +  Text storeName = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Text();
&amp;gt; &lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;No. Before flushes happened at the region level and we wrote the region name into the log.&lt;br/&gt;
Moving flushes to the store level required writing the store name instead of the region name&lt;br/&gt;
into the log so that log rolling and garbage collection would work properly.&lt;/p&gt;

&lt;p&gt;Note, however that this is an incompatible change, so before upgrading, all region servers&lt;br/&gt;
should be shut down cleanly so that there are no logs to recover.&lt;/p&gt;

&lt;p&gt;&amp;gt; Can this string creation be avoided in HStore; e.g. can &lt;br/&gt;
&amp;gt; storeName be Text?&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&amp;gt; +            || 
&amp;gt; (key.getStoreName().toString().compareTo(storeName) != 
&amp;gt; + 0)
&amp;gt; &lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Done.&lt;/p&gt;

&lt;p&gt;&amp;gt; Logging below at INFO level seems inappropriate:&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&amp;gt; +      LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;Not flushing cache &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; &quot;&lt;/span&gt; + storeName +
&amp;gt; +          &lt;span class=&quot;code-quote&quot;&gt;&quot; because it has 0 entries&quot;&lt;/span&gt;);
&amp;gt; &lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Changed to debug level.&lt;/p&gt;

&lt;p&gt;&amp;gt; This kind of logging doesn&apos;t help (though I think this log is &lt;br/&gt;
&amp;gt; just a line moved from elsewhere):&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&amp;gt; +            LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;nothing to compact &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; &quot;&lt;/span&gt; + &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.storeName);
&amp;gt; &lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&amp;gt;&lt;br/&gt;
&amp;gt; Should say why there is nothing to compact &amp;#8211; e.g. only one &lt;br/&gt;
&amp;gt; file present or holds references.&lt;/p&gt;

&lt;p&gt;Fixed.&lt;/p&gt;

&lt;p&gt;&amp;gt; Just remove rather than comment out?&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&amp;gt; -      HStoreKey rowKey = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HStoreKey(row, timestamp);
&amp;gt; +/*      HStoreKey rowKey = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HStoreKey(row, timestamp); */
&amp;gt; &lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;No. This line is a part of other code that needs to be enabled when MapFile.Reader.getClosest before is implemented.&lt;/p&gt;

&lt;p&gt;&amp;gt; HStoreSize inner class is no longer needed because the check &lt;br/&gt;
&amp;gt; is local to HStore where before it was higher up in HRegion?  &lt;br/&gt;
&amp;gt; The info HStoreSize carried is now all availble in the &lt;br/&gt;
&amp;gt; context where the check is being done?&lt;/p&gt;

&lt;p&gt;Yes.&lt;/p&gt;

&lt;p&gt;&amp;gt; Nice how you cleaned up lease-making/updating.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;

&lt;p&gt;&amp;gt; Why make RowMap non-private?  Its used by inner classes?&lt;/p&gt;

&lt;p&gt;Synthetic accessors showed up in eclipse.&lt;/p&gt;

&lt;p&gt;&amp;gt; The below no longer makes use of TextSequences?  Any reason &lt;br/&gt;
&amp;gt; for that?  (TS was means of cutting down on object creations. &lt;br/&gt;
&amp;gt; Profiling, using TSs made a big difference).&lt;br/&gt;
&amp;gt; &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&amp;gt; -      Text qualifier = HStoreKey.extractQualifier(col);
&amp;gt; +      Text member = HStoreKey.extractMember(col);
&amp;gt; &lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I just ran into too many instances where things broke because TextSequence is not a Text.&lt;br/&gt;
Text should either use accessors to access members of another Text or it should just be&lt;br/&gt;
declared as final because it cannot be subclassed as it stands now.&lt;/p&gt;
</comment>
                            <comment id="12563763" author="jimk" created="Wed, 30 Jan 2008 00:54:43 +0000"  >&lt;p&gt;RE: TextSequence. The ultimate solution is to either fix Text so that it is subclassable or to change HStoreKey so that the column family and column member are stored separately. The latter would require a massive upgrade as HStoreKeys are in all the MapFiles.&lt;/p&gt;

&lt;p&gt;I would prefer the former solution but doubt the community would support it because Text is used so heavily.&lt;/p&gt;

&lt;p&gt;Or I suppose a third solution would be to make our own Text that supports what Text does and adds TextSequence capability.&lt;/p&gt;</comment>
                            <comment id="12563834" author="jimk" created="Wed, 30 Jan 2008 04:54:52 +0000"  >&lt;p&gt;Addresses Stack&apos;s issues.&lt;/p&gt;</comment>
                            <comment id="12564274" author="viper799" created="Thu, 31 Jan 2008 02:47:42 +0000"  >&lt;p&gt;I checked the 4th patch above just to see if it fixed my problems but it did not here a little update on what i am seeing&lt;/p&gt;

&lt;p&gt;The flushing happens correctly the first flush of the server once it started.&lt;br/&gt;
then it flushes as fast as it can over and over.&lt;br/&gt;
but if I stop the job the flushes stop at the same time with in a sec&lt;/p&gt;

&lt;p&gt;But once a job starts again the flushes start almost at the same time its like the flush size has been reset to 0 or something after the first flush.&lt;/p&gt;</comment>
                            <comment id="12564568" author="viper799" created="Fri, 1 Feb 2008 00:28:43 +0000"  >&lt;p&gt;latest patch #5&lt;/p&gt;

&lt;p&gt;I get a ton of these per sec after the first flush starts&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2008-01-31 18:01:09,961 DEBUG org.apache.hadoop.hbase.HRegionServer: not queuing flush request because one is already in progress
2008-01-31 18:01:09,961 DEBUG org.apache.hadoop.hbase.HRegionServer: not queuing compaction request because one is already in progress
2008-01-31 18:01:09,961 DEBUG org.apache.hadoop.hbase.HRegionServer: not queuing flush request because one is already in queue
2008-01-31 18:01:09,961 DEBUG org.apache.hadoop.hbase.HRegionServer: not queuing compaction because one is already in the queue
2008-01-31 18:01:09,961 DEBUG org.apache.hadoop.hbase.HRegionServer: not queuing flush request because one is already in queue
2008-01-31 18:01:09,962 DEBUG org.apache.hadoop.hbase.HRegionServer: not queuing compaction because one is already in the queue
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;but still flushing lots of small flushes back top back &lt;br/&gt;
flush size set to 16MB (16777216)&lt;br/&gt;
I comment out the above logs from the code so I could get this part&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2008-01-31 18:26:09,314 DEBUG org.apache.hadoop.hbase.HStore: Added 51984898/in_rank/7445623251870888179 with 151286 entries, sequence id 468191, and size 16.0m &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; 51984898/in_rank
2008-01-31 18:26:09,315 DEBUG org.apache.hadoop.hbase.HRegion: Finished memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; store 51984898/in_rank in 5918ms, sequenceid=468191
2008-01-31 18:26:09,368 DEBUG org.apache.hadoop.hbase.HLog: Closing current log writer hdfs:&lt;span class=&quot;code-comment&quot;&gt;//10.0.0.1:9000/gfs_storage/hadoop-root/hbase/log_10.0.0.2_1201825376852_60020/hlog.dat.015 to get a &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; one
&lt;/span&gt;2008-01-31 18:26:09,374 INFO org.apache.hadoop.hbase.HLog: &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; log writer created at hdfs:&lt;span class=&quot;code-comment&quot;&gt;//10.0.0.1:9000/gfs_storage/hadoop-root/hbase/log_10.0.0.2_1201825376852_60020/hlog.dat.016
&lt;/span&gt;2008-01-31 18:26:09,374 DEBUG org.apache.hadoop.hbase.HLog: Found 0 logs to remove using oldest outstanding seqnum of 0 from HStore 51984898/size
2008-01-31 18:26:09,408 DEBUG org.apache.hadoop.hbase.HRegion: Started memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region webdata,,1201825394888 store 51984898/anchor
2008-01-31 18:26:16,574 DEBUG org.apache.hadoop.hbase.HStore: Added 51984898/anchor/5033243542266094285 with 159021 entries, sequence id 492132, and size 16.4m &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; 51984898/anchor
2008-01-31 18:26:16,574 DEBUG org.apache.hadoop.hbase.HRegion: Finished memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; store 51984898/anchor in 7166ms, sequenceid=492132
2008-01-31 18:26:16,611 DEBUG org.apache.hadoop.hbase.HRegion: Started memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region webdata,,1201825394888 store 51984898/last_seen
2008-01-31 18:26:17,223 INFO org.apache.hadoop.hbase.HRegionServer: Rolling hlog. &lt;span class=&quot;code-object&quot;&gt;Number&lt;/span&gt; of entries: 30018
2008-01-31 18:26:22,469 DEBUG org.apache.hadoop.hbase.HStore: Added 51984898/last_seen/789487054095285345 with 167871 entries, sequence id 519368, and size 17.2m &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; 51984898/last_seen
2008-01-31 18:26:22,470 DEBUG org.apache.hadoop.hbase.HRegion: Finished memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; store 51984898/last_seen in 5859ms, sequenceid=519368
2008-01-31 18:26:22,520 DEBUG org.apache.hadoop.hbase.HLog: Closing current log writer hdfs:&lt;span class=&quot;code-comment&quot;&gt;//10.0.0.1:9000/gfs_storage/hadoop-root/hbase/log_10.0.0.2_1201825376852_60020/hlog.dat.016 to get a &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; one
&lt;/span&gt;2008-01-31 18:26:22,526 INFO org.apache.hadoop.hbase.HLog: &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; log writer created at hdfs:&lt;span class=&quot;code-comment&quot;&gt;//10.0.0.1:9000/gfs_storage/hadoop-root/hbase/log_10.0.0.2_1201825376852_60020/hlog.dat.017
&lt;/span&gt;2008-01-31 18:26:22,526 DEBUG org.apache.hadoop.hbase.HLog: Found 0 logs to remove using oldest outstanding seqnum of 0 from HStore 51984898/size
2008-01-31 18:26:22,532 DEBUG org.apache.hadoop.hbase.HRegion: Started memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region webdata,,1201825394888 store 51984898/in_rank
2008-01-31 18:26:23,643 DEBUG org.apache.hadoop.hbase.HStore: Added 51984898/in_rank/6607743928392488812 with 24913 entries, sequence id 545013, and size 2.7m &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; 51984898/in_rank
2008-01-31 18:26:23,643 DEBUG org.apache.hadoop.hbase.HRegion: Finished memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; store 51984898/in_rank in 1111ms, sequenceid=545013
2008-01-31 18:26:23,648 DEBUG org.apache.hadoop.hbase.HRegion: Started memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region webdata,,1201825394888 store 51984898/anchor
2008-01-31 18:26:24,707 DEBUG org.apache.hadoop.hbase.HStore: Added 51984898/anchor/3932738492736374231 with 18919 entries, sequence id 550311, and size 1.9m &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; 51984898/anchor
2008-01-31 18:26:24,707 DEBUG org.apache.hadoop.hbase.HRegion: Finished memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; store 51984898/anchor in 1059ms, sequenceid=550311
2008-01-31 18:26:24,710 DEBUG org.apache.hadoop.hbase.HRegion: Started memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region webdata,,1201825394888 store 51984898/last_seen
2008-01-31 18:26:25,352 DEBUG org.apache.hadoop.hbase.HStore: Added 51984898/last_seen/5324440789419095782 with 11724 entries, sequence id 555402, and size 1.1m &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; 51984898/last_seen
2008-01-31 18:26:25,352 DEBUG org.apache.hadoop.hbase.HRegion: Finished memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; store 51984898/last_seen in 642ms, sequenceid=555402
2008-01-31 18:26:25,355 DEBUG org.apache.hadoop.hbase.HRegion: Started memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region webdata,,1201825394888 store 51984898/in_rank
2008-01-31 18:26:25,869 DEBUG org.apache.hadoop.hbase.HStore: Added 51984898/in_rank/2378178173153292440 with 4425 entries, sequence id 558549, and size 491.2k &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; 51984898/in_rank
2008-01-31 18:26:25,870 DEBUG org.apache.hadoop.hbase.HRegion: Finished memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; store 51984898/in_rank in 515ms, sequenceid=558549
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Flushes are still way smaller after the first flush then the set size.&lt;/p&gt;

&lt;p&gt;I thank we should be looking at the process that calls the flush its seams the be the part thats going crazy after the first flush maybe some loop we are not getting out of or something along those lines.&lt;/p&gt;</comment>
                            <comment id="12564569" author="viper799" created="Fri, 1 Feb 2008 00:32:32 +0000"  >&lt;p&gt;maybe adding some logging in all the spots that a flush would be called and why its being called would help also spot the problem.&lt;/p&gt;</comment>
                            <comment id="12564571" author="jimk" created="Fri, 1 Feb 2008 00:43:01 +0000"  >&lt;p&gt;Billy,&lt;/p&gt;

&lt;p&gt;This was really useful input. Thank you! I am not sure why this is happening, but your log input gives me some clues as to where to look.&lt;/p&gt;

&lt;p&gt;-Jim&lt;/p&gt;</comment>
                            <comment id="12564572" author="jimk" created="Fri, 1 Feb 2008 00:48:07 +0000"  >&lt;p&gt;The first 3 flushes look right on. but then the go nuts as you noted. Gives me a place to look. Thanks!&lt;/p&gt;</comment>
                            <comment id="12564575" author="jimk" created="Fri, 1 Feb 2008 00:51:58 +0000"  >&lt;p&gt;Hmmm...  the last few cache flushes are real small. Looks like the region was about to split. Did the region split after these log entries?&lt;/p&gt;</comment>
                            <comment id="12564599" author="viper799" created="Fri, 1 Feb 2008 03:13:32 +0000"  >&lt;p&gt;No the table is all new no data so the split would not come for quite a while&lt;br/&gt;
Also sense I been testing this issue patches I have not has a successfully first split while under load but I figured that I would wait until we get the flushes worked out and see what was happening then.&lt;/p&gt;</comment>
                            <comment id="12564607" author="viper799" created="Fri, 1 Feb 2008 03:22:02 +0000"  >&lt;p&gt;all flushes after the above lines of log are around ~100K in size and happened as fast as the flush in front of it can finish.&lt;/p&gt;</comment>
                            <comment id="12564825" author="stack" created="Fri, 1 Feb 2008 16:55:43 +0000"  >&lt;p&gt;On migration, one suggestion would be to up the version number on disk and then have the script check for log files.  If any found, warn user they need to revert their software to clean up log files.  If none found, just up the version number.&lt;/p&gt;

&lt;p&gt;Also, regards my comment above where I punt the acounting of Store-level memcaches to another issue &amp;#8211; i.e. &quot;Hard part is keeping account of all the memcaches in all the Stores on all the Regions on an HRS, but thats another issue.&quot; &amp;#8211; I&apos;m now thinking thats a mistake.  My thinking is that Store-level memcaches will have us reporting a regionserver overloaded &amp;#8211; that is, that its memory is occupited &amp;#8211; when it fact its not.&lt;/p&gt;

&lt;p&gt;When memcaches are at the Region level, a single memcache is used by all Stores, no matter how many families.  Making an accounting of allocated memory is just a case of summing Region memcaches.&lt;/p&gt;

&lt;p&gt;When memcaches are at the Store level, accounting becomes summing of the memcache size times all families in the region, only in general usage, many of the Store memcaches won&apos;t be used at all (Presumption is that it will be unusual that we&apos;ll be updating all Stores during an upload outside of the initial upload).&lt;/p&gt;

&lt;p&gt;A lesser, related issue is that Store-level caches will inevitably be smaller.  A Store that is being hammered will flush lots of small files.  Lots of small files instead of a few big files seems to be harder on the compactor.&lt;/p&gt;</comment>
                            <comment id="12564841" author="jimk" created="Fri, 1 Feb 2008 17:44:25 +0000"  >&lt;p&gt;Latest revision of patch. Fixes some really dumb bugs.&lt;/p&gt;</comment>
                            <comment id="12564894" author="viper799" created="Fri, 1 Feb 2008 19:23:27 +0000"  >&lt;p&gt;latest patch looks good on my end &lt;br/&gt;
+1&lt;br/&gt;
all flushes &amp;gt;= max_flush_size!&lt;/p&gt;</comment>
                            <comment id="12564931" author="jimk" created="Fri, 1 Feb 2008 20:56:29 +0000"  >&lt;p&gt;This patch adds a compaction request when an HStore starts up if there are too many files or if the store has references.&lt;/p&gt;</comment>
                            <comment id="12564956" author="jimk" created="Fri, 1 Feb 2008 22:09:05 +0000"  >&lt;p&gt;Fixes NPE in loadHStoreFiles&lt;/p&gt;</comment>
                            <comment id="12565210" author="viper799" created="Sun, 3 Feb 2008 20:29:49 +0000"  >&lt;p&gt;sense &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-138&quot; title=&quot;[hbase] Under load, regions become extremely large and eventually cause region servers to become unresponsive&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-138&quot;&gt;&lt;del&gt;HADOOP-2731&lt;/del&gt;&lt;/a&gt; was committed hbase has been much more stable on my test. flushes are working correctly now. if we could build off that and set flusher to only flush columns that need to be flushed (have data to flush). &lt;/p&gt;

&lt;p&gt;I been thanking about the option flusher and we might need to leave it in there to help keep memory usage lower on a region server if we left it we would be able to remove the regions from memory that have got updates but have not got the amount needed for a flush. This would be useful for users with 32bit cpus and are limited by the 2000MB memory usage and users with limited memory. maybe just leave it in there at 30 mins or 60 mins so it will clean up memory usage once an hour per region if needed. Setting to 30-60 mins would not impact the compactor as much if we are only flushing regions columns that have got updates.&lt;/p&gt;


</comment>
                            <comment id="12565216" author="viper799" created="Sun, 3 Feb 2008 20:46:10 +0000"  >&lt;p&gt;Copied from &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-64&quot; title=&quot;Add max number of mapfiles to compact at one time giveing us a minor &amp;amp; major compaction&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-64&quot;&gt;&lt;del&gt;HADOOP-2615&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I got a second ideal on this to help with hot spots&lt;/p&gt;

&lt;p&gt;If we could add a way to set a priority for compaction&apos;s this would help with the hot spots regions building up to many map files flushes.&lt;/p&gt;

&lt;p&gt;Example if we have a region with 25 map files and one with 10&lt;/p&gt;

&lt;p&gt;Region with 25 map files would have a priority of 25&lt;br/&gt;
and the one with 10 map files have a priority of 10 we would compact the region with 25 before 10&lt;/p&gt;

&lt;p&gt;If we could add/update the priority when we do a flush then the compactor could work on region that need it the most in order.&lt;/p&gt;</comment>
                            <comment id="12565237" author="jimk" created="Mon, 4 Feb 2008 00:00:14 +0000"  >&lt;p&gt;Integrates &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-138&quot; title=&quot;[hbase] Under load, regions become extremely large and eventually cause region servers to become unresponsive&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-138&quot;&gt;&lt;del&gt;HADOOP-2731&lt;/del&gt;&lt;/a&gt; with the changes for this issue.&lt;/p&gt;

&lt;p&gt;Will not submit to hudson until we have feedback from others who have tried this patch.&lt;/p&gt;</comment>
                            <comment id="12565276" author="viper799" created="Mon, 4 Feb 2008 05:56:09 +0000"  >&lt;p&gt;are we loseing the hbase.hregion.memcache.block.multiplier option in this patch?&lt;/p&gt;

&lt;p&gt;Before I applied the patch I was seeing blocking messages logged while flushes where happening but not after I applied the patch.&lt;/p&gt;</comment>
                            <comment id="12565417" author="jimk" created="Mon, 4 Feb 2008 16:43:36 +0000"  >&lt;p&gt;Billy Pearson - 03/Feb/08 09:56 PM:&lt;br/&gt;
&amp;gt; are we loseing the hbase.hregion.memcache.block.multiplier option in this patch? Before I applied the&lt;br/&gt;
&amp;gt; patch I was seeing blocking messages logged while flushes where happening but not after I applied&lt;br/&gt;
&amp;gt; the patch.&lt;/p&gt;

&lt;p&gt;Yes, in this version of the patch, blocking of updates was removed because all the memcache size accounting is done at the store level rather than the region level.&lt;/p&gt;

&lt;p&gt;What needs to be done is to bubble up store memcache size to the region level so that we can implement blocking based on the largest store memcache and not just the sum of the size of all the updates to the region.&lt;/p&gt;

&lt;p&gt;The question is, does this patch work without the blocking or does it need to be put back?&lt;/p&gt;
</comment>
                            <comment id="12565594" author="viper799" created="Mon, 4 Feb 2008 23:14:49 +0000"  >&lt;p&gt;Currently flushes and compaction&apos;s work good from what I can tell on my setup and test.&lt;/p&gt;

&lt;p&gt;There are two area I have concerns in and have not got a chance to test.&lt;/p&gt;

&lt;p&gt;1. hlogs: If I have a column family that does not get updates but say 1 out 100-250 updates then is that region going to hold up the removal of old hlogs waiting for a flush from this column. If this is so on column family could make a recovery take a long time if the region server fails. This is one of the reason besides memory usage I thank we need to leave/add back the option flusher to flush every 30-60 mins.&lt;/p&gt;

&lt;p&gt;2. Splits: If I have a large region split in to two the compaction starts on the reload of the new splits. But say the columns take 50 mins to compact in that 50 min. If I get updates to cause a split again will this fail if the region has not finished compacting all the regions reference files from the original split.&lt;/p&gt;

&lt;p&gt;Out side of the above concerns I have not noticed any bugs in the patch while flushing or compaction&apos;s all seams ok in that area.&lt;/p&gt;</comment>
                            <comment id="12565596" author="viper799" created="Mon, 4 Feb 2008 23:16:50 +0000"  >&lt;p&gt;Answer above yes it works with out the blocking.&lt;/p&gt;
</comment>
                            <comment id="12565624" author="viper799" created="Tue, 5 Feb 2008 01:54:23 +0000"  >&lt;p&gt;example of hlog above&lt;/p&gt;

&lt;p&gt;Region server log&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2008-02-04 19:36:50,813 FATAL org.apache.hadoop.hbase.HRegionServer: unable to report to master &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; 34439 milliseconds - aborting server
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Master Server Log&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2008-02-04 19:47:45,456 DEBUG org.apache.hadoop.hbase.HLog: Applied 15820000 edits
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The file for the region&lt;br/&gt;
oldlogfile.log = 3.46GB&lt;/p&gt;</comment>
                            <comment id="12566252" author="viper799" created="Wed, 6 Feb 2008 18:22:37 +0000"  >&lt;p&gt;Might check out the compaction queue I had 1 out or 2 regions on one server split and reload the splits on the different server and my job finished with in a few mins after the split&lt;br/&gt;
Only two more columns compacted after the split and the job finished. I now have column family&apos;s that have more then 3 map files and no compaction happening.&lt;/p&gt;

&lt;p&gt;Not sure if the stop of updates coming in or the split mess up the compaction queue or the split cleared it out.&lt;br/&gt;
Before the split happened there was several requested for compaction for the region that did not split.&lt;/p&gt;

</comment>
                            <comment id="12566384" author="viper799" created="Wed, 6 Feb 2008 22:44:15 +0000"  >&lt;p&gt;I thank what is happening is while the compaction is working on a column any request to add a compaction to the queue is rejected but after the compaction starts new mapfiles may exceed the threshold of 3 map files. This leaves extra map files waiting for the next memcache flush to add a new compaction to the queue after the compaction completes on the region. &lt;/p&gt;

&lt;p&gt;I do not thank this is much of a problem there will be a memcache flush some time down the road starting a new compaction. &lt;/p&gt;</comment>
                            <comment id="12567478" author="jimk" created="Sun, 10 Feb 2008 21:58:26 +0000"  >&lt;p&gt;A new version of this patch that builds on, rather than ignores &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-138&quot; title=&quot;[hbase] Under load, regions become extremely large and eventually cause region servers to become unresponsive&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-138&quot;&gt;&lt;del&gt;HBASE-138&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;What I&apos;d like to see is:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;a code review from stack&lt;/li&gt;
	&lt;li&gt;Billy Pearson, Bryan Duxbury and Stack run this patch through their bulk load tests to ensure that this patch is better than the current code.&lt;/li&gt;
&lt;/ul&gt;

</comment>
                            <comment id="12567487" author="viper799" created="Sun, 10 Feb 2008 22:53:58 +0000"  >&lt;p&gt;latest patch only the first column family is getting flushed, I got 3 heave inserted columns and only one is getting flushed and the region memory usage is rising fast.&lt;/p&gt;</comment>
                            <comment id="12567489" author="viper799" created="Sun, 10 Feb 2008 23:01:23 +0000"  >&lt;p&gt;shut down region server before it could crash and the flushes of 2 other columns where in the 200MB range and flush size was set at 64MB&lt;/p&gt;</comment>
                            <comment id="12567713" author="jimk" created="Mon, 11 Feb 2008 17:14:07 +0000"  >&lt;p&gt;Billy,&lt;/p&gt;

&lt;p&gt;Thanks for the feedback. Clearly there is a bug here.&lt;/p&gt;</comment>
                            <comment id="12567714" author="jimk" created="Mon, 11 Feb 2008 17:16:05 +0000"  >&lt;p&gt;Other things to do for this issue:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;HStores need to inform region about cache sizes, etc so we can do region level memory usage accounting&lt;/li&gt;
	&lt;li&gt;Update migration tool so that it will check for unrecovered region server logs&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12567800" author="jimk" created="Mon, 11 Feb 2008 20:19:01 +0000"  >&lt;p&gt;This patch should address the issue with only store being flushed.&lt;/p&gt;

&lt;p&gt;It contains fixes for TTMR and TTI&lt;/p&gt;

&lt;p&gt;It speeds up TestLogRolling by a factor of 3&lt;/p&gt;

&lt;p&gt;Cache sizes bubble up from HStore to HRegion, but aside from blocking updates, no other memory accounting is done.&lt;/p&gt;

&lt;p&gt;Please review and test.&lt;/p&gt;</comment>
                            <comment id="12567836" author="viper799" created="Mon, 11 Feb 2008 22:00:25 +0000"  >&lt;p&gt;I get  Blocking updates messages but no flushing happens so everything gos on hold and no new transaction happen all my threads get blocked&lt;/p&gt;</comment>
                            <comment id="12567846" author="jimk" created="Mon, 11 Feb 2008 22:19:53 +0000"  >&lt;p&gt;&amp;gt; Billy Pearson - 11/Feb/08 02:00 PM&lt;br/&gt;
&amp;gt; I get Blocking updates messages but no flushing happens so everything gos on hold and no new&lt;br/&gt;
&amp;gt; transaction happen all my threads get blocked&lt;/p&gt;

&lt;p&gt;This logic is currently very unsophisticated. I&apos;ll try to come up with something better in the next patch. In the mean time, setting hbase.hregion.memcache.block.multiplier to (at least) the number of families should make things work.&lt;/p&gt;</comment>
                            <comment id="12567957" author="viper799" created="Tue, 12 Feb 2008 04:59:31 +0000"  >&lt;p&gt;I am still seeing a hlog build up problem&lt;/p&gt;

&lt;p&gt;example I see these a lot after a job is done and the server are idle&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2008-02-11 22:46:44,032 INFO org.apache.hadoop.hbase.HStore: Not flushing cache &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; 519281761/anchor because it has 0 entries
2008-02-11 22:46:44,032 DEBUG org.apache.hadoop.hbase.HRegion: Finished memcache flush &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; store 519281761/anchor in 1ms, sequenceid=131598230
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I assume this is a optional flush which is good to have but if there is no entries can we update the columns current sequence id for that column to our current max sequence id so we can remove the old logs after the next hlog ?&lt;/p&gt;

&lt;p&gt;What I am seeing is low to no updated columns never get a memcache flush so there sequence id never changes (unless there is a split) and the old hlogs never get removed.&lt;/p&gt;</comment>
                            <comment id="12567968" author="jimk" created="Tue, 12 Feb 2008 05:44:54 +0000"  >&lt;p&gt;&amp;gt; Billy Pearson - 11/Feb/08 08:59 PM&lt;br/&gt;
&amp;gt; I am still seeing a hlog build up problem&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; example I see these a lot after a job is done and the server are idle&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; 2008-02-11 22:46:44,032 INFO org.apache.hadoop.hbase.HStore: Not flushing cache for&lt;br/&gt;
&amp;gt; 519281761/anchor because it has 0 entries&lt;br/&gt;
&amp;gt; 2008-02-11 22:46:44,032 DEBUG org.apache.hadoop.hbase.HRegion: Finished memcache&lt;br/&gt;
&amp;gt;  flush for store 519281761/anchor in 1ms, sequenceid=131598230&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; I assume this is a optional flush which is good to have but if there is no entries can we update the&lt;br/&gt;
&amp;gt; columns current sequence id for that column to our current max sequence id so we can remove the&lt;br/&gt;
&amp;gt; old logs after the next hlog ?&lt;/p&gt;

&lt;p&gt;Yes, this is an optional cache flush. The column&apos;s max sequence id is updated after a cache flush:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; sequenceId = log.startCacheFlush();
...
    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.log.completeCacheFlush(store.storeName, getTableDesc().getName(),
        sequenceId);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&amp;gt; What I am seeing is low to no updated columns never get a memcache flush so there sequence id&lt;br/&gt;
&amp;gt; never changes (unless there is a split) and the old hlogs never get removed.&lt;/p&gt;

&lt;p&gt;Low to no updated columns will only get an optional cache flush, which will set their sequence&lt;br/&gt;
number. However log files are not garbage collected until the log fills up and is rolled, which&lt;br/&gt;
is not happening if the region server is idle. The only other time log files are cleaned up is when&lt;br/&gt;
the region server shuts down.&lt;/p&gt;

&lt;p&gt;I have created issue &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-440&quot; title=&quot;Add optional log roll interval so that log files are garbage collected&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-440&quot;&gt;&lt;del&gt;HBASE-440&lt;/del&gt;&lt;/a&gt; to add optional log rolling so that idle region servers will garbage collect old log files.&lt;/p&gt;
</comment>
                            <comment id="12567977" author="jimk" created="Tue, 12 Feb 2008 06:07:46 +0000"  >&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Update migration tool and change file system version number&lt;/li&gt;
	&lt;li&gt;FSUtils.checkVersion now returns the version string&lt;/li&gt;
	&lt;li&gt;Less simplistic update blocking mechanism is based on the number of stores and how many have requested cache flushes. Block if the number of stores that have requested flushes &amp;gt;= number of stores - 1, unless there is only one store. If only one store no blocking is done. A more sophisticated memory management system will be part of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-70&quot; title=&quot;Improve region server memory management&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-70&quot;&gt;&lt;del&gt;HBASE-70&lt;/del&gt;&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;HRegion now implements HStoreListener so it can intercept and count cache flush requests&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12568027" author="viper799" created="Tue, 12 Feb 2008 09:56:21 +0000"  >&lt;p&gt;have not tried newest patch yet for this problem.&lt;br/&gt;
I thank we are still missing something when I talk about hlog build up I mean there is never a removal of the hlogs unless there is a split or a shutdown.&lt;/p&gt;

&lt;p&gt;I have over 106 hlog on one server&lt;br/&gt;
hbase.regionserver.maxlogentries = 250000&lt;br/&gt;
The modification time of the oldest to the newest logs files are much greater then the 30 min option flush time set in hbase-default.xml&lt;/p&gt;</comment>
                            <comment id="12568140" author="jimk" created="Tue, 12 Feb 2008 14:24:44 +0000"  >&lt;p&gt;&amp;gt; Billy Pearson - 12/Feb/08 01:56 AM&lt;br/&gt;
&amp;gt; I thank we are still missing something when I talk about hlog build up I mean there is never a removal of &lt;br/&gt;
&amp;gt; the hlogs unless there is a split or a shutdown.&lt;/p&gt;

&lt;p&gt;As I explained previously, the only time that HLogs are garbage collected, is when either the log fills, or&lt;br/&gt;
when the region server shuts down. Since there are not many updates coming in in the situation you&lt;br/&gt;
described, the log will not fill and consequently old logs will not be garbage collected.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-440&quot; title=&quot;Add optional log roll interval so that log files are garbage collected&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-440&quot;&gt;&lt;del&gt;HBASE-440&lt;/del&gt;&lt;/a&gt;, will add optional log rolling, and log rolling when a region is closed in addition to the current&lt;br/&gt;
log rolling when the log fills. Both of these new events will cause logs to be garbage collected. Region&lt;br/&gt;
server shutdown will delete all the old logs.&lt;/p&gt;</comment>
                            <comment id="12568200" author="viper799" created="Tue, 12 Feb 2008 16:32:47 +0000"  >&lt;p&gt;sorry my last post I am talking about while the cluster is busy. The hlogs have &amp;gt; 4 hours between them that would mean that I am rolling the hlog many times after several optional memcash flushes while jobs are running.&lt;/p&gt;

&lt;p&gt;Might check to make sure the option flush is updating the sequence id even if there is 0 entries and the flush is skipped. &lt;br/&gt;
The problem could be from the code that removed the code before I used to see 0 logs removed while having debug turned on and hlog rolling but I do not see these messages after this patches.&lt;/p&gt;</comment>
                            <comment id="12568219" author="stack" created="Tue, 12 Feb 2008 17:07:12 +0000"  >&lt;p&gt;Why when only one store, blocking is disabled? (Whats to stop update rate from overwhelming flusher in one-store case?)&lt;/p&gt;</comment>
                            <comment id="12568264" author="viper799" created="Tue, 12 Feb 2008 18:12:14 +0000"  >&lt;p&gt;ok I am seeing the rolling messages now and old logs are getting removed. going to update to latest patch and try again&lt;/p&gt;</comment>
                            <comment id="12568270" author="jimk" created="Tue, 12 Feb 2008 18:22:29 +0000"  >&lt;p&gt;&amp;gt; Billy Pearson - 12/Feb/08 08:32 AM&lt;br/&gt;
&amp;gt; sorry my last post I am talking about while the cluster is busy. The hlogs have &amp;gt; 4 hours between them&lt;br/&gt;
&amp;gt; that would mean that I am rolling the hlog many times after several optional memcash flushes while&lt;br/&gt;
&amp;gt; jobs are running. &lt;/p&gt;

&lt;p&gt;If the hlogs have &amp;gt; 4 hours between them then you can only expect a garbage collection once every&lt;br/&gt;
4 hours.&lt;/p&gt;

&lt;p&gt;&amp;gt; Might check to make sure the option flush is updating the sequence id even if there&lt;br/&gt;
&amp;gt; is 0 entries and the flush is skipped. The problem could be from the code that removed the code before&lt;br/&gt;
&amp;gt; I used to see 0 logs removed while having debug turned on and hlog rolling but I do not see these&lt;br/&gt;
&amp;gt;  messages after this patches.&lt;/p&gt;

&lt;p&gt;I can assure you that the sequence id is getting updated and flushed to the log with an optional cache&lt;br/&gt;
fllush even with no entries.&lt;/p&gt;

&lt;p&gt;In this patch and in trunk, optional flushes are put on the flush queue just like requested flushes.&lt;br/&gt;
(See HRegionServer$Flusher.run)&lt;/p&gt;

&lt;p&gt;When their queue entry triggers,&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;in trunk: HRegion.flushCache() is called.&lt;/li&gt;
	&lt;li&gt;in the patch HRegion.flushCache(HStore) is called&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;They both end up in HRegion.internalFlushcache, which:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;first obtains a sequence Id for the log.&lt;/li&gt;
	&lt;li&gt;calls HStore.flushCache(sequenceId)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Even if the cache is not flushed, in HRegion.internalFlushcache, both trunk and the patch call&lt;br/&gt;
HLog.completeCacheFlush which writes the new sequence id (for the region in the case of trunk&lt;br/&gt;
or for the store in the case of the patch).&lt;/p&gt;

&lt;p&gt;However no log files are removed until the current log is rolled (closed and a new one opened).&lt;/p&gt;</comment>
                            <comment id="12568275" author="jimk" created="Tue, 12 Feb 2008 18:33:39 +0000"  >&lt;p&gt;&amp;gt; stack - 12/Feb/08 09:07 AM&lt;br/&gt;
&amp;gt; Why when only one store, blocking is disabled? (Whats to stop update rate from overwhelming flusher&lt;br/&gt;
&amp;gt; in one-store case?)&lt;/p&gt;

&lt;p&gt;If we block based on the number of outstanding cache flush requests (which is currently how it works for&lt;br/&gt;
more than one store), then we cannot take updates while that single store is flushed, which didn&apos;t seem&lt;br/&gt;
like a good idea.&lt;/p&gt;

&lt;p&gt;What I wanted to do was to put a policy in place for this patch that was &quot;good enough&quot; until more &lt;br/&gt;
sophisticated policies (which balance the memory in the region server) were done in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-70&quot; title=&quot;Improve region server memory management&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-70&quot;&gt;&lt;del&gt;HBASE-70&lt;/del&gt;&lt;/a&gt;,&lt;br/&gt;
which is going to address region server memory management.&lt;/p&gt;</comment>
                            <comment id="12568283" author="stack" created="Tue, 12 Feb 2008 18:49:38 +0000"  >&lt;p&gt;If memcache(s) are full, we should block updates.  Otherwise, this patch is a step backward.&lt;/p&gt;</comment>
                            <comment id="12568440" author="viper799" created="Wed, 13 Feb 2008 06:00:44 +0000"  >&lt;p&gt;I get these&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
INFO org.apache.hadoop.hbase.HRegion: Blocking updates &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; &apos;IPC Server handler 21 on 60020&apos;: cache flushes requested 8 is &amp;gt;= max flush request count 8
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;then everything stops not long after a job starts an no more processing everything is blocked I waited 3 hours to see if the option flush would unblock but it does not seam to be happening&lt;br/&gt;
might take a look at the memcache blocker again&lt;/p&gt;</comment>
                            <comment id="12568651" author="jimk" created="Wed, 13 Feb 2008 18:06:52 +0000"  >&lt;p&gt;Billy,&lt;/p&gt;

&lt;p&gt;Clearly there is a problem. Can you post a bit more of that region server&apos;s log (before the blocking message)? Maybe that will point me in the right direction.&lt;/p&gt;</comment>
                            <comment id="12568849" author="viper799" created="Thu, 14 Feb 2008 09:57:51 +0000"  >&lt;p&gt;I will have to run the test again with the patch I remove logs often as the debug takes up a lots of GB when running large jobs.&lt;/p&gt;</comment>
                            <comment id="12570930" author="jimk" created="Thu, 21 Feb 2008 03:13:41 +0000"  >&lt;p&gt;Ok, I finally have a patch for this issue that works !&lt;/p&gt;

&lt;p&gt;It started at:&lt;br/&gt;
2008-02-21 01:17:22,401 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;regionserver/0:0:0:0:0:0:0:0:8020&amp;#93;&lt;/span&gt; hbase.HRegionServer(1070): Done telling master we are up&lt;/p&gt;

&lt;p&gt;and ended with:&lt;/p&gt;

&lt;p&gt;2008-02-21 02:50:45,783 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;Thread-8&amp;#93;&lt;/span&gt; hbase.HRegionServer$ShutdownThread(158): Starting shutdown thread.&lt;br/&gt;
2008-02-21 02:50:45,783 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;Thread-8&amp;#93;&lt;/span&gt; hbase.HRegionServer$ShutdownThread(163): Shutdown thread complete&lt;/p&gt;</comment>
                            <comment id="12570933" author="jimk" created="Thu, 21 Feb 2008 03:30:06 +0000"  >&lt;p&gt;Seems to actually work. Your milage may vary.&lt;/p&gt;</comment>
                            <comment id="12571472" author="jimk" created="Fri, 22 Feb 2008 17:10:46 +0000"  >&lt;p&gt;Latest patch. OOMEs during PerformanceEvaluation sequential write test, which doesn&apos;t make sense since sequential write should have at most two regions open and cached ~128MB of data in memory. Since this patch cannot handle this simple case,I don&apos;t think it should be committed.&lt;/p&gt;

&lt;p&gt;We can salvage the changes to HMaster and Migrate since those are needed, but otherwise, I think this effort should be shut down and tossed.&lt;/p&gt;

&lt;p&gt;I have spent too much time on it and it does not bring enough to the table to be considered for inclusion.&lt;/p&gt;</comment>
                            <comment id="12571475" author="jimk" created="Fri, 22 Feb 2008 17:17:11 +0000"  >&lt;p&gt;Unfortunately this patch did not yield the expected results. It still OOMe&apos;s during a sequential write test (which I don&apos;t understand), and really isn&apos;t an improvement over trunk.&lt;/p&gt;

&lt;p&gt;Closing as &quot;won&apos;t fix&quot;&lt;/p&gt;</comment>
                            <comment id="12571574" author="stack" created="Fri, 22 Feb 2008 20:15:44 +0000"  >&lt;p&gt;I&apos;d suggest making a new patch that has in it the improvements that are contained in this patch and lets commit that (probably in a new issue).  Here&apos;s some comments:&lt;/p&gt;

&lt;p&gt;+ +1 on FSUtils changes.&lt;br/&gt;
+ On migrations, would suggest that you emit logging of what step you are currently in: e.g. &quot;moving to version 2&quot;.  Will help should a step fail.&lt;br/&gt;
+ This is not a change made by you in Migrate but I wonder if the making fully qualified works w/ our new hbase.rootdir format where you need to specify the filesystem to use:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-      Path rootdir =
-        fs.makeQualified(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Path(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.conf.get(HConstants.HBASE_DIR)));
+      rootdir = fs.makeQualified(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Path(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.conf.get(HConstants.HBASE_DIR)));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;+ +1 on new names of methods in Migrate.java&lt;br/&gt;
+ +1 on IdentityTableReduce.java changes&lt;br/&gt;
+ What about the HSK changes?  Should we add them?  They get rid of TextSequence.  Do you think this change for the better?&lt;br/&gt;
+ Whats going on here?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-  &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; AtomicInteger activeScanners = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; AtomicInteger(0);
+  &lt;span class=&quot;code-keyword&quot;&gt;volatile&lt;/span&gt; AtomicInteger activeScanners = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; AtomicInteger(0);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Why make reference to &apos;activeScanners&apos; volatile rather than final?  Once created as part of class creation, its not going to change?  Volatile doesn&apos;t effect the content of the AtomicInteger, does it?&lt;br/&gt;
+ +1 on change to TestMigrate.java.  Fixes currently broken migration scripts (They are failing on hudson).&lt;/p&gt;

&lt;p&gt;Rest of the patch seems like all or nothing.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12388005">HBASE-419</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12386826">HBASE-248</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12385524">HBASE-395</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12386311">HBASE-64</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12386905">HBASE-75</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12386339">HBASE-192</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12376244" name="patch.txt" size="187808" author="jimk" created="Fri, 22 Feb 2008 17:10:46 +0000"/>
                            <attachment id="12376082" name="patch.txt" size="187006" author="jimk" created="Thu, 21 Feb 2008 03:30:06 +0000"/>
                            <attachment id="12375309" name="patch.txt" size="172412" author="jimk" created="Tue, 12 Feb 2008 06:07:46 +0000"/>
                            <attachment id="12375268" name="patch.txt" size="149067" author="jimk" created="Mon, 11 Feb 2008 20:18:59 +0000"/>
                            <attachment id="12375194" name="patch.txt" size="147526" author="jimk" created="Sun, 10 Feb 2008 21:58:26 +0000"/>
                            <attachment id="12374652" name="patch.txt" size="184906" author="jimk" created="Mon, 4 Feb 2008 00:00:12 +0000"/>
                            <attachment id="12374588" name="patch.txt" size="184274" author="jimk" created="Fri, 1 Feb 2008 22:09:03 +0000"/>
                            <attachment id="12374582" name="patch.txt" size="184277" author="jimk" created="Fri, 1 Feb 2008 20:56:29 +0000"/>
                            <attachment id="12374568" name="patch.txt" size="183662" author="jimk" created="Fri, 1 Feb 2008 17:44:25 +0000"/>
                            <attachment id="12374508" name="patch.txt" size="179740" author="jimk" created="Thu, 31 Jan 2008 22:30:42 +0000"/>
                            <attachment id="12374330" name="patch.txt" size="175316" author="jimk" created="Wed, 30 Jan 2008 04:54:51 +0000"/>
                            <attachment id="12374143" name="patch.txt" size="171783" author="jimk" created="Sun, 27 Jan 2008 09:48:33 +0000"/>
                            <attachment id="12374142" name="patch.txt" size="173121" author="jimk" created="Sun, 27 Jan 2008 08:43:31 +0000"/>
                            <attachment id="12374139" name="patch.txt" size="148216" author="jimk" created="Sun, 27 Jan 2008 02:07:45 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>14.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 17 Jan 2008 14:15:00 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31665</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            8 years, 43 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0h40v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>97914</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>