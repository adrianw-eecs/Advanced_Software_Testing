<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:40:49 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-80/HBASE-80.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-80] [hbase] Add a cache of &apos;hot&apos; cells</title>
                <link>https://issues.apache.org/jira/browse/HBASE-80</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description></description>
                <environment></environment>
        <key id="12386393">HBASE-80</key>
            <summary>[hbase] Add a cache of &apos;hot&apos; cells</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Wed, 16 Jan 2008 16:03:31 +0000</created>
                <updated>Sun, 8 Jun 2014 21:50:34 +0000</updated>
                            <resolved>Sun, 8 Jun 2014 21:50:34 +0000</resolved>
                                                                    <component>regionserver</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="12559551" author="stack" created="Wed, 16 Jan 2008 16:05:24 +0000"  >&lt;p&gt;Linking to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-288&quot; title=&quot;Add in-memory caching of data&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-288&quot;&gt;&lt;del&gt;HADOOP-1398&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Chatting w/ Tom White, should probably be size-based or made of References.&lt;/p&gt;</comment>
                            <comment id="12559805" author="stack" created="Thu, 17 Jan 2008 04:56:24 +0000"  >&lt;p&gt;Very basic LRU cell cache.  Caches configurable count of latest version.  No accounting of cache size.  Not for production use.&lt;/p&gt;

&lt;p&gt;One thing learned is that cell caching is awkward; cells generally don&apos;t specify their timestamp yet cell keys, HStoreKey, have an explicit timestamp.&lt;/p&gt;</comment>
                            <comment id="12665290" author="streamy" created="Tue, 20 Jan 2009 00:25:20 +0000"  >&lt;p&gt;Erik has been working on this for a couple weeks already, patches and numbers coming soon&lt;/p&gt;</comment>
                            <comment id="12665964" author="erikholstad@gmail.com" created="Wed, 21 Jan 2009 21:02:01 +0000"  >&lt;p&gt;Sorry for not posting on this issue, even thought I have been assigned and everything &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
So the basic idea that I have been working on is to make a key/value cache to speed up random&lt;br/&gt;
reads.&lt;/p&gt;

&lt;p&gt;Test setup:&lt;br/&gt;
Used the same test parameters that are used in the BT paper so it would be easy to compare and &lt;br/&gt;
test have currently only been done on a single machine cluster with one HRegionServer. That setup&lt;br/&gt;
includes 1column/family and every value is 1000B.&lt;/p&gt;

&lt;p&gt;Some numbers for testing this extremely simple cache are:&lt;br/&gt;
Tests done over 10000 reads&lt;br/&gt;
Random reads without cache: 481 r/s&lt;br/&gt;
                                                        481 KB/s&lt;br/&gt;
Random reads with cache: 4019 r/s&lt;br/&gt;
                                                  4019 KB/s&lt;/p&gt;


&lt;p&gt;Some other test to compare the difference when using multiple columns/family turned out to give the&lt;br/&gt;
following numbers:&lt;br/&gt;
5 columns/family everything else the same as above.&lt;br/&gt;
Random reads without cache: 445 r/s&lt;br/&gt;
                                                        2223 KB/s&lt;br/&gt;
Random reads with cache: 3588 r/s&lt;br/&gt;
                                                  17940 KB/s&lt;/p&gt;

&lt;p&gt;10 columns/family everything else the same as above.&lt;br/&gt;
Random reads without cache: 24 r/s&lt;br/&gt;
                                                        240 KB/s&lt;br/&gt;
Random reads with cache: 25 r/s&lt;br/&gt;
                                                  250 KB/s &lt;/p&gt;

&lt;p&gt;For the rest of the test only 100 rows where used to avoid out of memory errors.&lt;br/&gt;
Like first test but fewer rows:&lt;br/&gt;
Random reads without cache: 284 r/s&lt;br/&gt;
                                                        284 KB/s&lt;br/&gt;
Random reads with cache: 2083 r/s&lt;br/&gt;
                                                  2083 KB/s&lt;/p&gt;

&lt;p&gt;Same as above but with 1000 columns/family&lt;br/&gt;
Random reads without cache: 23 r/s&lt;br/&gt;
                                                        23000 KB/s&lt;br/&gt;
Random reads with cache: 76 r/s&lt;br/&gt;
                                                  76000 KB/s&lt;/p&gt;</comment>
                            <comment id="12665966" author="erikholstad@gmail.com" created="Wed, 21 Jan 2009 21:08:59 +0000"  >&lt;p&gt;The planned layout for the cache is to keep the cache at the HRegionServer&lt;br/&gt;
level so that you set the amount of memory that you for each HRS.&lt;/p&gt;

&lt;p&gt;Are planning to use a special HashMap that is memory sensitive and keeps track&lt;br/&gt;
of the used memory for the cache at every point and kicks entries whenever needed.&lt;/p&gt;

&lt;p&gt;The harder thing to discuss and talk about is how and what kind of data that would be&lt;br/&gt;
best to store. For example if we want to store a query-&amp;gt;result or if a HStoreKey -&amp;gt;&lt;br/&gt;
Cell schema will make better use of the memory.&lt;/p&gt;

&lt;p&gt;All thought and comments are welcome!&lt;/p&gt;</comment>
                            <comment id="12665980" author="streamy" created="Wed, 21 Jan 2009 21:54:06 +0000"  >&lt;p&gt;Very odd result...&lt;/p&gt;

&lt;p&gt;Random writes: Timer for 10000 and cols 7 = 4062 ms&lt;br/&gt;
Random reads: Timer for 100 and size 7 = 105 ms&lt;/p&gt;

&lt;p&gt;Random writes: Timer for 10000 and cols 8 = 3995 ms&lt;br/&gt;
Random reads: Timer for 100 and size 8 = 4024 ms&lt;/p&gt;

&lt;p&gt;Going from 7 columns in the family to 8 columns leads to 40x slowdown.  Rebalancing of some sortedmap or hashmap or something on the way out?&lt;/p&gt;</comment>
                            <comment id="12666000" author="streamy" created="Wed, 21 Jan 2009 23:05:16 +0000"  >&lt;p&gt;Above issue from 7 to 8 cols appears to only happen with caching code in place.  Does not seem to occur with 0.19 release.  Investigating further... patch will be posted shortly&lt;/p&gt;</comment>
                            <comment id="12666001" author="erikholstad@gmail.com" created="Wed, 21 Jan 2009 23:05:55 +0000"  >&lt;p&gt;The patch and the tester used for the test. &lt;br/&gt;
Test file will be further investigated as Jonathan said.&lt;/p&gt;</comment>
                            <comment id="12669122" author="erikholstad@gmail.com" created="Sat, 31 Jan 2009 01:55:17 +0000"  >&lt;p&gt;So it turns out that the weird issues that we have seen for random reads only applies&lt;br/&gt;
when the client is on the same machine as the master and the HRS. So leaving this&lt;br/&gt;
weird side issue for now and focusing on other issues.&lt;/p&gt;</comment>
                            <comment id="12669246" author="erikholstad@gmail.com" created="Sat, 31 Jan 2009 21:15:00 +0000"  >&lt;p&gt;Ran tests for the current Implementation of the memory sensitive LruHashMap and compared them to HashMap and LinkedHashMap:&lt;/p&gt;

&lt;p&gt;Adding to LruHashMap&lt;br/&gt;
timer 83 for 100000 adds&lt;br/&gt;
Size for map 100000&lt;br/&gt;
Reading from LRU&lt;br/&gt;
timer 133 for 100000 reads&lt;br/&gt;
Deleting from LRU&lt;br/&gt;
timer 112 for 100000 deletes&lt;/p&gt;

&lt;p&gt;Adding to HashMap&lt;br/&gt;
timer 39 for 100000 adds&lt;br/&gt;
Size for map 100000&lt;br/&gt;
Reading from Hash&lt;br/&gt;
timer 110 for 100000 reads&lt;br/&gt;
Deleting from Hash&lt;br/&gt;
timer 79 for 100000 deletes&lt;/p&gt;

&lt;p&gt;Adding to LinkedHashMap&lt;br/&gt;
timer 55 for 100000 adds&lt;br/&gt;
Size for map 100000&lt;br/&gt;
Reading from LinkedHash&lt;br/&gt;
timer 148 for 100000 reads&lt;br/&gt;
Deleting from LinkedHash&lt;br/&gt;
timer 102 for 100000 deletes&lt;/p&gt;

&lt;p&gt;I think that the number for reads and deletes looks ok, but there seems to be something weird going on for puts.&lt;br/&gt;
Will dig deeper, to find out what.&lt;/p&gt;</comment>
                            <comment id="12669289" author="erikholstad@gmail.com" created="Sat, 31 Jan 2009 23:46:36 +0000"  >&lt;p&gt;Did some small changes to the test program to get a more equal test and the new numbers look like:&lt;/p&gt;

&lt;p&gt;Adding to LRU, timer 79 for 100000 adds&lt;br/&gt;
Reading from LRU, timer 135 for 100000 reads&lt;br/&gt;
Deleting from LRU, timer 123 for 100000 deletes&lt;/p&gt;

&lt;p&gt;Adding to LinkedHash, timer 61 for 100000 adds&lt;br/&gt;
Reading from LinkedHash, timer 119 for 100000 reads&lt;br/&gt;
Deleting from LinkedHash, timer 87 for 100000 deletes&lt;/p&gt;

&lt;p&gt;Adding to Hash, timer 49 for 100000 adds&lt;br/&gt;
Reading from Hash, timer 105 for 100000 reads&lt;br/&gt;
Deleting from Hash, timer 77 for 100000 deletes&lt;/p&gt;

&lt;p&gt;So the big difference between the LHM and the LRU from the previous test are smaller now and looks reasonable. &lt;/p&gt;</comment>
                            <comment id="12670847" author="erikholstad@gmail.com" created="Thu, 5 Feb 2009 18:33:43 +0000"  >&lt;p&gt;The memory sensitive Lru and the tester class, still working on some details about the&lt;br/&gt;
size of the memory used for different classes and will update as soon as I&apos;m done.&lt;/p&gt;</comment>
                            <comment id="12671336" author="erikholstad@gmail.com" created="Fri, 6 Feb 2009 21:36:54 +0000"  >&lt;p&gt;Updated the HeapSIze interface with some global constants that will be used by classes that&lt;br/&gt;
implement that interface.&lt;br/&gt;
Also updated Cell.java so that it calculates the correct Heapsize value.&lt;/p&gt;</comment>
                            <comment id="12674043" author="erikholstad@gmail.com" created="Mon, 16 Feb 2009 19:45:04 +0000"  >&lt;p&gt;Adding the memory usage tester, the class that is used to find out the sizes&lt;br/&gt;
of other classes.&lt;/p&gt;</comment>
                            <comment id="12674294" author="erikholstad@gmail.com" created="Tue, 17 Feb 2009 18:43:01 +0000"  >&lt;p&gt;Was thinking that it is not really clear to me how the new setup where a Class is aware of it size,&lt;br/&gt;
implementing HeapSize, is going to be used for the rest of the project. So I propose that for now&lt;br/&gt;
have 2 different versions of Cell and HbaseMapWritable, one that keeps track of the size and one&lt;br/&gt;
that doesn&apos;t, so the overhead of keeping the size doesn&apos;t slow down other use cases. &lt;br/&gt;
Another question is also where and when to do the calculation of the size, I have chosen to put&lt;br/&gt;
it in the puts, adds and removes because I think that it is going to be read many scenario for these&lt;br/&gt;
object.&lt;/p&gt;</comment>
                            <comment id="12703729" author="stack" created="Tue, 28 Apr 2009 16:55:25 +0000"  >&lt;p&gt;After chatting w/ Jon and Erik, moving out of 0.20.0.  Blockcache will be what we have in 0.20.0.&lt;/p&gt;</comment>
                            <comment id="12866971" author="stack" created="Thu, 13 May 2010 04:40:49 +0000"  >&lt;p&gt;Moved from 0.21 to 0.22 just after merge of old 0.20 branch into TRUNK.&lt;/p&gt;</comment>
                            <comment id="13047718" author="stack" created="Fri, 10 Jun 2011 22:58:26 +0000"  >&lt;p&gt;Moving out of 0.92.  Move it back in if you think differently.&lt;/p&gt;</comment>
                            <comment id="13047729" author="stack" created="Fri, 10 Jun 2011 22:58:28 +0000"  >&lt;p&gt;Moving out of 0.92.  Move it back in if you think differently.&lt;/p&gt;</comment>
                            <comment id="14021407" author="apurtell" created="Sun, 8 Jun 2014 21:50:34 +0000"  >&lt;p&gt;Wow, one from the Streamy days. Stale. Reopen if actual progress&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="12369866">HBASE-288</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                            <outwardlinks description="depends upon">
                                        <issuelink>
            <issuekey id="12414124">HBASE-1186</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12414263">HBASE-1188</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12399688" name="Cell.java" size="6567" author="erikholstad@gmail.com" created="Fri, 6 Feb 2009 21:36:54 +0000"/>
                            <attachment id="12399687" name="HeapSize.java" size="2134" author="erikholstad@gmail.com" created="Fri, 6 Feb 2009 21:36:54 +0000"/>
                            <attachment id="12399580" name="LruHashMap.java" size="39753" author="erikholstad@gmail.com" created="Thu, 5 Feb 2009 18:33:42 +0000"/>
                            <attachment id="12399581" name="LruHashMapTester.java" size="10473" author="erikholstad@gmail.com" created="Thu, 5 Feb 2009 18:33:43 +0000"/>
                            <attachment id="12400298" name="MemoryTester.java" size="6534" author="erikholstad@gmail.com" created="Mon, 16 Feb 2009 19:45:04 +0000"/>
                            <attachment id="12398437" name="WR_PE.java" size="7923" author="erikholstad@gmail.com" created="Wed, 21 Jan 2009 23:05:55 +0000"/>
                            <attachment id="12373349" name="cache.patch" size="7490" author="stack" created="Thu, 17 Jan 2008 04:56:23 +0000"/>
                            <attachment id="12398439" name="hbase-80-v1.patch" size="1953" author="erikholstad@gmail.com" created="Wed, 21 Jan 2009 23:19:02 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 20 Jan 2009 00:25:20 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31676</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 27 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02fr3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12153</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>