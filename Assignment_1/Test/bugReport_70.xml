<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:40:44 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-70/HBASE-70.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-70] Improve region server memory management</title>
                <link>https://issues.apache.org/jira/browse/HBASE-70</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Each Store has a Memcache of edits that is flushed on a fixed period (It used to be flushed when it grew beyond a limit). A Region can be made up of N Stores.  A regionserver has no upper bound on the number of regions that can be deployed to it currently.  Add to this that per mapfile, we have read the index into memory.  We&apos;re also talking about adding caching of blocks and cells.&lt;/p&gt;

&lt;p&gt;We need a means of keeping an account of memory usage adjusting cache sizes and flush rates (or sizes) dynamically &amp;#8211; using References where possible &amp;#8211; to accomodate deployment of added regions.  If memory is strained, we should reject regions proffered by the master with a resouce-constrained, or some such, message.&lt;/p&gt;

&lt;p&gt;The manual sizing we currently do ain&apos;t going to cut it for clusters of any decent size.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12386395">HBASE-70</key>
            <summary>Improve region server memory management</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="6">Invalid</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Wed, 16 Jan 2008 16:14:43 +0000</created>
                <updated>Tue, 7 Dec 2010 20:23:26 +0000</updated>
                            <resolved>Tue, 7 Dec 2010 20:23:26 +0000</resolved>
                                                                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                                                            <comments>
                            <comment id="12560035" author="jimk" created="Thu, 17 Jan 2008 19:08:59 +0000"  >&lt;p&gt;Memory usage should be factored into HServerLoad, then the master can make more intelligent decisions about where to deploy regions.&lt;/p&gt;</comment>
                            <comment id="12560089" author="viper799" created="Thu, 17 Jan 2008 21:40:56 +0000"  >&lt;p&gt;+1&lt;br/&gt;
This will also help with clusters that servers with varying memory sizes in region servers.&lt;/p&gt;</comment>
                            <comment id="12565944" author="jimk" created="Tue, 5 Feb 2008 23:11:22 +0000"  >&lt;p&gt;Stack and I discussed the possibility of moving the memcache back to the region level instead of the store level, because it would make accounting easier. However this approach has some serious drawbacks:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;some of the methods that access both the memcache and the store files (such as getKeys, etc), are more efficient when everything is at the store level.&lt;/li&gt;
	&lt;li&gt;we experienced a great deal of pain moving the memcache to the store level from the region level in the first place as it forced us to re-write a lot of the scanner code.&lt;/li&gt;
	&lt;li&gt;the reason for moving memcache from region to store level was because it was greatly simplified and reduced contention. Before when the cache filled, we had no idea how much of it belonged to which family&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So what I would suggest, instead of moving memcache back up to the region level, is to move the cache size management back up to the region level. Let the region keep track of the total cache space in use, which store(s) have the largest caches, etc. Contention is reduced to smaller data structures that manage the accounting, instead of bigger structures like the caches themselves.&lt;/p&gt;

&lt;p&gt;This way we achieve:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Better control of the overall cache space in use&lt;/li&gt;
	&lt;li&gt;Eliminate the need for radical modifications (moving the cache back to the region level at this point would be much harder than when when it was moved to the store level in the first place since so much more has been added)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Basically we are able to gain what we need (better memory management), with less contention on the caches themselves, via a less risky (and radical) change.&lt;/p&gt;</comment>
                            <comment id="12565965" author="bryanduxbury" created="Tue, 5 Feb 2008 23:52:38 +0000"  >&lt;p&gt;Agree, -1 on moving memcache to Region level. I like the way that memcache and storefiles have analogous position and structure, making it easy to code against them. (One might argue that their similar structure would allow us to generalize the manipulation methods further so that we only need a single version of each manipulation.) &lt;/p&gt;

&lt;p&gt;What&apos;s difficult about managing the memory of the memcaches a level down anyways? Some particular accounting issue?&lt;/p&gt;</comment>
                            <comment id="12565981" author="stack" created="Wed, 6 Feb 2008 01:08:43 +0000"  >&lt;p&gt;Moving accounting of space up to the region level sounds fine by me.  Can you say more how it&apos;d work?  And why it&apos;d make for less contention?&lt;/p&gt;

&lt;p&gt;By the way, I fail to see how the &quot;3 serious drawbacks&quot; are (serious drawbacks).  Please say a few words on why things are more efficient done at store level than when done at region level?   It was just a single map in memory.  Profiling it was never a problem.  Pain moving the memcaches doesn&apos;t count as a drawback (if we&apos;re moving it in the wrong direction &amp;#8211; smile).  And was there contention when it was at the region level?  And true, we didn&apos;t know when filled, how much belonged to each family but was this a problem?&lt;/p&gt;
</comment>
                            <comment id="12566380" author="viper799" created="Wed, 6 Feb 2008 22:28:51 +0000"  >&lt;p&gt;Memory usage is kind of high&lt;/p&gt;

&lt;p&gt;I have &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-69&quot; title=&quot;[hbase] Make cache flush triggering less simplistic&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-69&quot;&gt;&lt;del&gt;HBASE-69&lt;/del&gt;&lt;/a&gt; applied to my cluster&lt;/p&gt;

&lt;p&gt;One region server had the only 2 regions for the table I have in hbase&lt;br/&gt;
the size of the regions mapfiles total about 1.5GB in Linux top command reports region server using 1.6GB memory&lt;/p&gt;

&lt;p&gt;After the splits the regions load on different region servers and the one that was holding the region was still using 1.6GB of memory&lt;br/&gt;
using 1.6GB memory I thank is kind of high I thank as the regions where only that size. &lt;br/&gt;
With this said we should also be looking for what is using so much memory and not releasing it.&lt;/p&gt;</comment>
                            <comment id="12576315" author="stack" created="Fri, 7 Mar 2008 18:22:08 +0000"  >&lt;p&gt;Up on IRC, Bryan suggests we look into using PhantomReferences for Memcache.  Phantoms run a callback just before item is collected.   An objection was running flush in a low-memory situation would be risky.  The counter was yes, true, but the alternative is us writing a mechanism similiar to Phantoms and that we should try the built-in mechanism first if only to learn how not to do it.&lt;/p&gt;</comment>
                            <comment id="12587048" author="stack" created="Wed, 9 Apr 2008 04:25:37 +0000"  >&lt;p&gt;One place that puts up memory pressure is in memcache scanners; each outstanding scanner carries a copy of the state of memcache at time scanner was taken out.&lt;/p&gt;</comment>
                            <comment id="12589772" author="bryanduxbury" created="Wed, 16 Apr 2008 23:30:32 +0000"  >&lt;p&gt;We&apos;re only going to tag specific issues for 0.2, not generic ideas like this master issue.&lt;/p&gt;</comment>
                            <comment id="12657983" author="stack" created="Fri, 19 Dec 2008 02:35:38 +0000"  >&lt;p&gt;Small cell sizes cause indices to blossom and regionservers to OOME.  See hbase-900.&lt;/p&gt;</comment>
                            <comment id="12968942" author="stack" created="Tue, 7 Dec 2010 20:23:26 +0000"  >&lt;p&gt;The discussion in this issue is way stale; none of whats discussion pertains any more.  Lets open new issue to look at memory use.  Closing as invalid.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12400273">HBASE-745</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                            <subtask id="12390975">HBASE-512</subtask>
                            <subtask id="12390976">HBASE-513</subtask>
                            <subtask id="12393543">HBASE-571</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 17 Jan 2008 19:08:59 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31666</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 2 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0h41b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>97916</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>