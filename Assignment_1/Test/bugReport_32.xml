<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:40:21 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-32/HBASE-32.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-32] [hbase] Add row count estimator</title>
                <link>https://issues.apache.org/jira/browse/HBASE-32</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Internally we have a little tool that will do a rough estimate of how many rows there are in a dataHbase.  It keeps getting larger and larger partitions running scanners until it turns up &amp;gt; N occupied rows.  Once it has a number &amp;gt; N, it multiples by the partition size to get an approximate row count.  &lt;/p&gt;

&lt;p&gt;This issue is about generalizing this feature so it could sit in the general hbase install.  It would look something like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; getApproximateRowCount(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Text startRow, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Text endRow, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; minimumCountPerPartition, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; maximumPartitionSize)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Larger minimumCountPerPartition and maximumPartitionSize values would make the count more accurate but would mean the method ran longer.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12383340">HBASE-32</key>
            <summary>[hbase] Add row count estimator</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Not A Problem</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Tue, 27 Nov 2007 18:40:55 +0000</created>
                <updated>Tue, 5 Aug 2014 20:11:29 +0000</updated>
                            <resolved>Sun, 8 Jun 2014 21:48:55 +0000</resolved>
                                                                    <component>Client</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="12547589" author="udanax" created="Sun, 2 Dec 2007 07:02:39 +0000"  >&lt;p&gt;This method will be used for aggregate functions in hbase shell.&lt;/p&gt;</comment>
                            <comment id="12550424" author="udanax" created="Tue, 11 Dec 2007 12:38:30 +0000"  >&lt;p&gt;Ok, i understand.&lt;br/&gt;
I&apos;ll trying to make it.&lt;/p&gt;</comment>
                            <comment id="12550655" author="stack" created="Tue, 11 Dec 2007 17:44:16 +0000"  >&lt;p&gt;Edward:  Here is an extract of code used internally for doing key space estimations.  It won&apos;t compile because its been hacked on to remove references to internal, unrelated  packages.  It was originally written by Jim a while back and then subsequently mangled by me.  It might help you w/ this problem though it has a base64 focus (If you want an opinion, these methods, with your cleanup might belong best in hbase/util/Keying.java). &lt;/p&gt;</comment>
                            <comment id="12550733" author="udanax" created="Tue, 11 Dec 2007 22:22:54 +0000"  >&lt;p&gt;Ok, I exactly understand. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12552027" author="udanax" created="Sat, 15 Dec 2007 03:29:58 +0000"  >&lt;p&gt;long getApproximateRowCount() //HTable.java&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
META TABLE   first key                          last key
 |---xxx--x---xx---xxx-------xxxxxxxxxxxxxxx---x---xxxxx---x----x----|
      |             |                                        2^34 tablet&apos;s rows
      |          1/1000 th
  counting       --&amp;gt;|

        countNum * 1000
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</comment>
                            <comment id="12552602" author="udanax" created="Tue, 18 Dec 2007 02:45:57 +0000"  >&lt;p&gt;I tried estimator. (random alphabet combination 1 million ~ 10 billion rows)&lt;br/&gt;
Row count error  range is too large.&lt;/p&gt;</comment>
                            <comment id="12553598" author="udanax" created="Thu, 20 Dec 2007 07:30:50 +0000"  >&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;real count&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;estimated count&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;676&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;784&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;17576&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;21058&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;456976&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;501647&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;7580124&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;8120647&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;65201750&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;82648211&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;(row count of sample space * sample size) was used for calculate.&lt;br/&gt;
Test result is just fine, but Let me see about it.&lt;/p&gt;

&lt;p&gt;If you have a good idea, please let me know.&lt;/p&gt;</comment>
                            <comment id="12553744" author="stack" created="Thu, 20 Dec 2007 18:42:49 +0000"  >&lt;p&gt;What is state of this issue Edward?  Will it not work on billions of rows?&lt;/p&gt;

&lt;p&gt;Other comments on the patch are:&lt;/p&gt;

&lt;p&gt;+ We should add a HTable.getTableDescriptor and a HTable.getColumnFamilies?&lt;br/&gt;
+ Comments would be helpful.  For example would be good to explain why you of a sudden set a variable &apos;i&apos; equal to 2 and a comment confirming what you are doing finding midkeys over and over again would be helpful (Won&apos;t this take a long time on a big table)?&lt;br/&gt;
+ If in your search for endKey turns up a null, won&apos;t you get a NPE when you convert back from base64?&lt;br/&gt;
+ Would suggest that the estimator or an estimator override take as inputs the smallest slice to start with and the largest slice that the estimator should try.&lt;/p&gt;</comment>
                            <comment id="12553834" author="udanax" created="Fri, 21 Dec 2007 00:42:33 +0000"  >&lt;p&gt;I tested 1~10 billion rows.&lt;br/&gt;
The error range is too large, Let me see about it.&lt;/p&gt;

&lt;p&gt;Now i&apos;m checking the analyze table and compute/estimate statistics.&lt;/p&gt;</comment>
                            <comment id="12555077" author="udanax" created="Mon, 31 Dec 2007 10:45:43 +0000"  >&lt;p&gt;Thanks comments, stack.&lt;br/&gt;
Now I test it with HADOOP-2480 (real log data table).&lt;br/&gt;
Please wait.&lt;/p&gt;</comment>
                            <comment id="12559202" author="jimk" created="Tue, 15 Jan 2008 19:48:11 +0000"  >&lt;p&gt;What is the status of this issue?&lt;/p&gt;</comment>
                            <comment id="12559323" author="udanax" created="Wed, 16 Jan 2008 01:12:10 +0000"  >&lt;p&gt;Sorry for a delay.&lt;/p&gt;

&lt;p&gt;It seems difficult to me.&lt;br/&gt;
I need some help.&lt;/p&gt;</comment>
                            <comment id="12565617" author="bryanduxbury" created="Tue, 5 Feb 2008 00:24:15 +0000"  >&lt;p&gt;I was thinking, that rather than sampling and resampling repeatedly, maybe what you could do is look at the region start keys, figure out what the edit distance between start and end keys is as a proxy for size of the region, and then scan the presumed largest and presumed smallest regions. This would give you a lower and upper bound on your table size. If your selections of smallest and largest regions happened to be bad, ie the counts were inverted, you can always just flip them.&lt;/p&gt;</comment>
                            <comment id="12591853" author="stack" created="Wed, 23 Apr 2008 22:51:52 +0000"  >&lt;p&gt;This was committed to branch and trunk&lt;/p&gt;</comment>
                            <comment id="12591857" author="jimk" created="Wed, 23 Apr 2008 22:58:23 +0000"  >&lt;p&gt;Not committed. Reopening.&lt;/p&gt;</comment>
                            <comment id="12592160" author="jimk" created="Thu, 24 Apr 2008 20:04:52 +0000"  >&lt;p&gt;Minor issue will be addressed post 0.2&lt;/p&gt;</comment>
                            <comment id="12615333" author="apurtell" created="Mon, 21 Jul 2008 17:57:16 +0000"  >&lt;p&gt;One possible option is to count the entries in the MapFile indexes, multiply that count by whatever hbase.io.index.interval (or the INDEX_INTERVAL HTD attribute) is, consider all of the MapFiles for the columns in a table, and choose the largest value. Do this for all of the table&apos;s regions. The result would be a reasonable estimate, but the whole process sounds expensive. Originally I was thinking that the regionservers could do this since they have to read in the MapFile indexes anyway, and also they know the count of rows in memcache, but if regionservers limit the number of in-memory MapFile indexes to avoid OOME as has been discussed, they won&apos;t have all of the information on hand.&lt;/p&gt;

&lt;p&gt;Maybe a map of MapFile to row count estimations can be stored in the FS next to the MapFiles and can be updated appropriately during compactions. Then a client can iterate over the regions of a table, ask the regionservers involved for row count estimations, the regionservers can consult the estimation-map and send the largest count found there for the table plus the largest memcache count for the table, and finally the client can total all of the results.&lt;/p&gt;</comment>
                            <comment id="12615336" author="apurtell" created="Mon, 21 Jul 2008 18:00:48 +0000"  >&lt;p&gt;From: &quot;stack&quot; &lt;br/&gt;
To: hbase-user@hadoop.apache.org&lt;br/&gt;
Andrew Purtell wrote:&lt;br/&gt;
&amp;gt; ..&lt;br/&gt;
&amp;gt; Maybe a map of MapFile to row count estimations can be stored in the &lt;br/&gt;
&amp;gt; FS next to the MapFiles and can be updated appropriately during&lt;br/&gt;
&amp;gt; compactions. Then a client can iterate over the regions of a table,&lt;br/&gt;
&amp;gt; ask the regionservers involved for row count estimations, the&lt;br/&gt;
&amp;gt; regionservers can consult the estimation-map and send the largest&lt;br/&gt;
&amp;gt; count found there for the table plus the largest memcache count for&lt;br/&gt;
&amp;gt; the table, and finally the client can total all of the results.&lt;br/&gt;
&amp;gt;   &lt;br/&gt;
I like this idea.  Suggest sticking it in the issue.  Each store already&lt;br/&gt;
has an accompanying &apos;meta&apos; file under the sympathetic &apos;info&apos; dir.  Could&lt;br/&gt;
stuff estimates in here.  Estimate of rows would also help sizing bloom&lt;br/&gt;
filters when the &apos;enable-bloomfilters&apos; switch is thrown.  We&apos;d have to&lt;br/&gt;
be clear this count an estimate particularly when rows of sparsely&lt;br/&gt;
populated columns.&lt;/p&gt;

&lt;p&gt;St.Ack&lt;/p&gt;</comment>
                            <comment id="12670161" author="stack" created="Tue, 3 Feb 2009 23:07:23 +0000"  >&lt;p&gt;Could use hbase-1183 to slice a hundreth off a region, count rows in the 1/100th and then make estimate on table row count&lt;/p&gt;</comment>
                            <comment id="12705639" author="streamy" created="Mon, 4 May 2009 16:15:34 +0000"  >&lt;p&gt;I think we should be storing statistics about StoreFiles in the new HFile meta blocks.  To start, this could be things like total row count in the storefile.  Eventually could expand that in to a row index.&lt;/p&gt;

&lt;p&gt;These kinds of statistics could be useful all over the place.&lt;/p&gt;</comment>
                            <comment id="12705656" author="stack" created="Mon, 4 May 2009 17:33:51 +0000"  >&lt;p&gt;HFile does some of this already:&lt;/p&gt;

&lt;p&gt;+ average key length&lt;br/&gt;
+ average value length&lt;br/&gt;
+ key count&lt;br/&gt;
+ entries in block and meta index&lt;br/&gt;
+ last key in file&lt;/p&gt;

&lt;p&gt;These are easy to add if we need more.&lt;/p&gt;

&lt;p&gt;Yeah, we should leverage it if only to read all meta in one region and then extrapolate (as you suggest).&lt;/p&gt;</comment>
                            <comment id="12705665" author="streamy" created="Mon, 4 May 2009 18:05:34 +0000"  >&lt;p&gt;Could also be interesting to have some kind of MR job that scanned over all storefiles and generated aggregated statistics about all your tables and regions.&lt;/p&gt;

&lt;p&gt;A &quot;quick&quot; row count is certainly useful.  A detailed report that could run nightly would be very cool.&lt;/p&gt;</comment>
                            <comment id="12705672" author="stack" created="Mon, 4 May 2009 18:23:31 +0000"  >&lt;p&gt;I like this.  MR job would take optionally table name so could per table rather than all HBase.  Split would be on a line in .META.  Map would read all store files emitting stats keyed with a table + column family prefix?  Reduce would sum per table column family?   Postprocess could sum on table basis?&lt;/p&gt;

&lt;p&gt;Could add it to our hbase MR Driver so we had more than just RowCounter.&lt;/p&gt;</comment>
                            <comment id="12889639" author="duane.moore@issinc.com" created="Sun, 18 Jul 2010 17:28:38 +0000"  >&lt;p&gt;Wondering about the state of this issue.  Is this a feature that could be generalized into providing other aggregation functions like min(), max(), sum(), etc.?  Presumably these aggregators would work during data ingest and be specifiable per column or column-family.  We are working with a proprietary NOSQL system currently that provides this functionality and it would be highly desirable in HBase.  Would be interested to see if there is any active development towards this end.  If not, I can look into providing a possible implementation.&lt;/p&gt;</comment>
                            <comment id="12889889" author="stack" created="Mon, 19 Jul 2010 15:27:13 +0000"  >&lt;p&gt;@Duane Hey. Thanks for the offer of help.  Appreciated.  You might want to look at coprocesors &amp;#8211; hbase-2000 &amp;#8211; and minitables, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2571&quot; title=&quot;Coprocessors: Minitables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2571&quot;&gt;&lt;del&gt;HBASE-2571&lt;/del&gt;&lt;/a&gt;, in particular.  I believe current thinking is that aggregations, sums, etc., would be done as code loaded as coprocessors.  &lt;/p&gt;</comment>
                            <comment id="12890990" author="apurtell" created="Thu, 22 Jul 2010 03:25:03 +0000"  >&lt;p&gt;Probably this is more apropos for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2000&quot; title=&quot;Coprocessors&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2000&quot;&gt;&lt;del&gt;HBASE-2000&lt;/del&gt;&lt;/a&gt; and subtasks.&lt;/p&gt;



</comment>
                            <comment id="14021404" author="apurtell" created="Sun, 8 Jun 2014 21:48:55 +0000"  >&lt;p&gt;Other issues cover this as mentioned above. Let&apos;s retire this golden oldie.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12413949">HBASE-1183</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12372009" name="2291_v01.patch" size="9269" author="udanax" created="Thu, 20 Dec 2007 07:30:50 +0000"/>
                            <attachment id="12371449" name="Keying.java" size="4778" author="stack" created="Tue, 11 Dec 2007 17:44:16 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 2 Dec 2007 07:02:39 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31634</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 27 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0h3nb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>97853</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>