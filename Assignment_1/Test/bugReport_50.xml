<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:40:31 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-50/HBASE-50.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-50] Snapshot of table</title>
                <link>https://issues.apache.org/jira/browse/HBASE-50</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Havening an option to take a snapshot of a table would be vary useful in production.&lt;/p&gt;

&lt;p&gt;What I would like to see this option do is do a merge of all the data into one or more files stored in the same folder on the dfs. This way we could save data in case of a software bug in hadoop or user code. &lt;/p&gt;

&lt;p&gt;The other advantage would be to be able to export a table to multi locations. Say I had a read_only table that must be online. I could take a snapshot of it when needed and export it to a separate data center and have it loaded there and then i would have it online at multi data centers for load balancing and failover.&lt;/p&gt;

&lt;p&gt;I understand that hadoop takes the need out of havening backup to protect from failed servers, but this does not protect use from software bugs that might delete or alter data in ways we did not plan. We should have a way we can roll back a dataset.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12385270">HBASE-50</key>
            <summary>Snapshot of table</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="6">Invalid</resolution>
                                        <assignee username="lichongxin">Li Chongxin</assignee>
                                    <reporter username="viper799">Billy Pearson</reporter>
                        <labels>
                            <label>gsoc</label>
                    </labels>
                <created>Fri, 28 Dec 2007 08:48:03 +0000</created>
                <updated>Tue, 15 Oct 2013 04:46:38 +0000</updated>
                            <resolved>Thu, 31 May 2012 05:50:28 +0000</resolved>
                                    <version>0.95.2</version>
                                    <fixVersion>0.95.0</fixVersion>
                                        <due></due>
                            <votes>2</votes>
                                    <watches>32</watches>
                                                                                                            <comments>
                            <comment id="12554663" author="viper799" created="Fri, 28 Dec 2007 09:00:35 +0000"  >&lt;p&gt;Backup/snapshot should take each region as is and copy it to a folder and meta data for table should be backed up also with the snapshot.&lt;/p&gt;

&lt;p&gt;For a fast load of the restore we could &lt;br/&gt;
stop serveing (disable) the table&lt;br/&gt;
delete current regions and meta data for the table&lt;br/&gt;
copy the backup regions in to the correct locations for hbase region serving&lt;br/&gt;
reload the backup meta data.&lt;br/&gt;
enable the table&lt;/p&gt;

&lt;p&gt;On the next rescan of the master the new meta would be picked up and the master could start assigning the regions to regionservers this way no time is spend reloading the data.&lt;/p&gt;</comment>
                            <comment id="12554960" author="stack" created="Sat, 29 Dec 2007 22:16:39 +0000"  >&lt;p&gt;Here&apos;s some ideas for how this might work Billy.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-43&quot; title=&quot;[hbase] Add a read-only attribute to columns&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-43&quot;&gt;&lt;del&gt;HADOOP-1958&lt;/del&gt;&lt;/a&gt; talks of making a table read-only.  It also talks of being able to send a flush-and-compact command across a cluster/table so all in-memory entries are persisted followed by a compaction to tidy-up the on-disk representation.  Jim is currently working on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-339&quot; title=&quot;[hbase] restructure how HBase lays out files in the file system&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-339&quot;&gt;&lt;del&gt;HADOOP-2478&lt;/del&gt;&lt;/a&gt; which will move all to do with a particular table under a directory named for the table in hdfs.  Hadoop has a copy files utility that can take a src in one fileystem and a target in the same or another filesystem and will run a mapreduce command to do a fast copy.&lt;/p&gt;

&lt;p&gt;Deploying the backup copy would run pretty much as you suggest only I&apos;d imagine we&apos;d have a tool that read the backed up table directory and per-region-found, did an insert into the catalog .META. table (Same tool run with a different option would purge a table from the catalog). &lt;/p&gt;</comment>
                            <comment id="12557833" author="bryanduxbury" created="Thu, 10 Jan 2008 22:50:35 +0000"  >&lt;p&gt;Adjusting the priority down to Minor, as this is new functionality. Also setting Fix Version to 0.17, as we have a lot of stuff to get done before 0.16 as it is.&lt;/p&gt;</comment>
                            <comment id="12580992" author="stack" created="Fri, 21 Mar 2008 03:01:19 +0000"  >&lt;p&gt;Other ideas.  A command on the master would send a signal to all regionservers.  They would dump their in-memory content and tell the master when done.  They would then block until they got the all-clear from the master and take reads but no updates.   Master would then do a listing of the current content of the filesystem and dump a file listing of all files.  The all-files-listing could then be used as input for a discp job.  Master would wait until it gets a prompt from the admin that the distcp was complete or it would give the all-clear after the dump of the catalog of all files and instead of file delete on compaction or region delete, instead, files would get a &apos;.deleted&apos; suffix.  The running distcp, if it couldn&apos;t find the original file would look for the same file with the &apos;.deleted&apos; suffix and copy that instead.&lt;/p&gt;</comment>
                            <comment id="12580996" author="jimk" created="Fri, 21 Mar 2008 03:34:59 +0000"  >&lt;p&gt;Sort of like &apos;safe mode&apos; in hdfs?&lt;/p&gt;</comment>
                            <comment id="12627781" author="stack" created="Tue, 2 Sep 2008 19:28:21 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-233&quot; title=&quot;Support for snapshots&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-233&quot;&gt;&lt;del&gt;HADOOP-3637&lt;/del&gt;&lt;/a&gt; &quot;Support for snapshots&quot;&lt;/p&gt;</comment>
                            <comment id="12627787" author="viper799" created="Tue, 2 Sep 2008 20:04:32 +0000"  >&lt;p&gt;Ideal solution would be to exec this from hbase&lt;/p&gt;

&lt;p&gt;example&lt;/p&gt;

&lt;p&gt;exec the snapshot command with the correct args&lt;/p&gt;

&lt;p&gt;1. hbase turns the tables in to read-only mode&lt;br/&gt;
2. we exec the snapshot stuff on hadoop for the hbase dir&lt;br/&gt;
3. Then we turn the tables back into read-write mode.&lt;/p&gt;

&lt;p&gt;I guess somewhere in there we should remember what tables where &lt;br/&gt;
disabled and where in read-only mode before the snapshot started.&lt;/p&gt;</comment>
                            <comment id="12636725" author="clint.morgan" created="Fri, 3 Oct 2008 20:09:26 +0000"  >&lt;p&gt;I&apos;ve been thinking about this recently. I&apos;d like to be able to take a&lt;br/&gt;
snapshot backup of all of our tables, and a requirement&lt;br/&gt;
here is that the snapshot be consistent. What this mean with respect&lt;br/&gt;
to transactions, is that either none or all of a transaction makes it&lt;br/&gt;
into the snapshot (atomicity)&lt;/p&gt;

&lt;p&gt;Another requirement is to minimize the time we have to be read-only as&lt;br/&gt;
much as possible. I&apos;d like to keep in on the order of a few seconds.&lt;/p&gt;

&lt;p&gt;My first thinking was along the lines of what Stack&apos;s suggested above:&lt;br/&gt;
Go to read-only, flush, then copy the files. As I understand it, I&lt;br/&gt;
could go back to allowing writes as soon as the memcache flush&lt;br/&gt;
begins. The subsequent writes would just go to memory....&lt;/p&gt;

&lt;p&gt;Then I realized that once we have proper appending to the&lt;br/&gt;
write-ahead-log (HLog), then I can simply copy that log over rather&lt;br/&gt;
than doing the memcahe flush.&lt;/p&gt;

&lt;p&gt;So I was thinking it would work roughly like this: (I use the term&lt;br/&gt;
message generically here. Originally I was thinking this could all be&lt;br/&gt;
orchestrated by passing around HMsgs with the normal mechanism, but&lt;br/&gt;
now I think it would be better to do it with explicit RPC calls to&lt;br/&gt;
speed things up.)&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Master sends RegionServers a BeginSnapshot message&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;RegionServers recieve BeginSnapshot and put thier regions into&lt;br/&gt;
  read-only mode, and prevent flushes/compactions/splits. &lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Commit-pending transactions (EG, transactions which we have voted to&lt;br/&gt;
  commit, but not committed yet) for a region are allowed to&lt;br/&gt;
  finish. This is needed to ensure atomicity. The time that&lt;br/&gt;
  transactions are commit-pending should be very small.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;After all commit-pending transactions have completed, the Region&lt;br/&gt;
  move the write ahead logger to a new file. The old one(s) will be&lt;br/&gt;
  copied in the snapshot. When all regions in a RegionServer are&lt;br/&gt;
  ready, it sends a CopyOk message to the Master. This means that our&lt;br/&gt;
  hdfs files are ready to be copied.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;After all RegionServers have sent the CopyOk message, the&lt;br/&gt;
  Master sends a WritesOk message to all regionServers, and begins the HDFS copy.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;When Regions get the WritesOK message, they can allow writes to the&lt;br/&gt;
  memcache and new WAL. (If they need to spill to disk then we have to handle that&lt;br/&gt;
  specially. Either abort the snapshot, or spill to something that&lt;br/&gt;
  won&apos;t be included in the snapshot)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;After the hdfs copy is done, then the Master sends a&lt;br/&gt;
  SnapshotComplete message. This tells the RegionServers that they can&lt;br/&gt;
  start spilling to disk again.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;So how does this sound? It seems I can avoid the memcache flush if I&lt;br/&gt;
really trust my WAL. And it seems I should be able to keep the&lt;br/&gt;
read-only time fairly low. Any problems I&apos;m not seeing?&lt;/p&gt;</comment>
                            <comment id="12636733" author="viper799" created="Fri, 3 Oct 2008 20:36:53 +0000"  >&lt;p&gt;I foresee problems with running compactions might have to get a compaction lock on all the regions before starting all of the above.&lt;/p&gt;</comment>
                            <comment id="12778724" author="posix4e" created="Tue, 17 Nov 2009 05:07:04 +0000"  >&lt;p&gt;Say you flushed the logs and then ran a compaction and waited for the cluster to chill out. Unless you had extremely  high churn rates I would suggest: A mapreduce with a region per task which fails and retries in case of flushes or compactions. In the case of a split you can fail the job, disable splitting, or have some way of getting the children later.&lt;/p&gt;

&lt;p&gt;Even though you would have kindof data throughout a time period, you would at least have a timestamp of when that backup was made. I.E. consistency on a region level which is all a lot of us really want.&lt;/p&gt;</comment>
                            <comment id="12847620" author="dhruba" created="Fri, 19 Mar 2010 22:31:05 +0000"  >&lt;p&gt;Hi folks, is somebody working on (or have a patch) this? How important is this for most users?&lt;/p&gt;</comment>
                            <comment id="12847624" author="posix4e" created="Fri, 19 Mar 2010 22:36:32 +0000"  >&lt;p&gt;Ah thanks for reminding me about this.  I was working on something here at my last company, but with my new job I don&apos;t know if I have anytime to work on this anytime soon. I do think it would be quite useful, although the approach I was taking seemed a bit tricky.&lt;/p&gt;</comment>
                            <comment id="12847671" author="stack" created="Sat, 20 Mar 2010 00:50:36 +0000"  >&lt;p&gt;@Dhruba Alex was taking a look but no one that I know of is working on this issue currently.  Lots of ideas but no dev.  What you thinking?&lt;/p&gt;</comment>
                            <comment id="12852393" author="stack" created="Thu, 1 Apr 2010 14:06:52 +0000"  >&lt;p&gt;Let me freshen this issue by synopsizing what has gone before and adding some new remarks (This issue has been labeled gsoc so candidates are taking a look trying to figure whats involved).&lt;/p&gt;

&lt;p&gt;The current state of a table is comprised of the memstore content of all currently running regionservers and the content of the /$&lt;/p&gt;
{hbase.rootdir}
&lt;p&gt;/TABLENAME directory in HDFS.  There is also metadata &amp;#8211; mainly the current state of its schema and the regions of which it is comprised &amp;#8211; kept up in .META. &quot;catalog&quot; table.&lt;/p&gt;

&lt;p&gt;In the above, there is talk of  &apos;offlining&apos; or flipping the table &apos;read-only&apos;.  Realistically we cannot require a production hbase be offlined or even flipped read-only making a snapshot.&lt;/p&gt;

&lt;p&gt;So, snapshotting needs to something like Clint Morgan describes above where we don&apos;t depend on memstore flush, where we instead get the memstore content from WAL files, and where snapshotting is triggered by sending a signal across the cluster, probably best distributed via zookeeper.  On receipt, regionservers roll their WAL and dump a manifest of all the files they have in their care; e.g. a list of all regions they are currently serving and the files of which these are comprised.  The regionserver hosting the .META. would also dump the metadata for said table at this time.  During this WAL roll and manifest dump, we would continue to take on writes but there might be some transitions we&apos;d suspend for the short time it would take to write out manifest, etc., such as memstore flushing.&lt;/p&gt;

&lt;p&gt;So a snapshot can be saved aside or reconstituted in-situ, regionservers cannot delete files.  For example, a compaction instead moves the old files aside rather than delete them when the new compacted file is made.  The moved aside, non-deleted files might be copied elsewhere by some other process (a distcp MR job).  They might also be cleaned up by a cleaner that could distingush old snapshots from the more recent (be careful not to remove files still in use).&lt;/p&gt;

&lt;p&gt;We&apos;d need a script, something like add_table.rb that could fixup .META. with the snapshotted .META. state and that moved files around in the filesystem &amp;#8211; from snapshot location back into the running position.&lt;/p&gt;</comment>
                            <comment id="12852446" author="streamy" created="Thu, 1 Apr 2010 16:40:15 +0000"  >&lt;p&gt;One idea floated around here was to use HDFS-level hard links on files that would prevent HBase from being able to move/delete them.&lt;/p&gt;

&lt;p&gt;Why is it that you say we cannot flush and instead need to use the WAL?  Just an overhead thing?  If so, makes sense, but just wondering if you think it&apos;s a requirement or just a different strategy.&lt;/p&gt;

&lt;p&gt;It&apos;s likely that we will need to spend some effort on this jira in the near future.  Thanks for freshening.&lt;/p&gt;</comment>
                            <comment id="12852500" author="dhruba" created="Thu, 1 Apr 2010 18:40:23 +0000"  >&lt;p&gt;But HDFS does not have hard -links. The trunk version of HDFS has soft-links. Ad far as I know, there is no proposal to implement hard links in HDFS.&lt;/p&gt;</comment>
                            <comment id="12852512" author="streamy" created="Thu, 1 Apr 2010 19:18:57 +0000"  >&lt;p&gt;@Dhruba Ah, okay.  Can you think of any ways we could get tricky at the HDFS level to prevent HBase from deleting files we need?  Otherwise we just add some logic to this special HBase mode to prevent it from doing anything like that.&lt;/p&gt;</comment>
                            <comment id="12852545" author="stack" created="Thu, 1 Apr 2010 20:53:17 +0000"  >&lt;p&gt;.bq Why is it that you say we cannot flush and instead need to use the WAL? Just an overhead thing?...&lt;/p&gt;

&lt;p&gt;Yes. Want to keep snapshot window narrow.  Don&apos;t want it spanning flush signal and wait on flush to complete.&lt;/p&gt;

&lt;p&gt;This has the gsoc label on it.  Let me know if you want me to remove it because you fellas want to grab it.&lt;/p&gt;</comment>
                            <comment id="12852600" author="streamy" created="Thu, 1 Apr 2010 23:29:43 +0000"  >&lt;p&gt;Can keep the gsoc label for now.  We&apos;ll make a decision soon and if we definitely need it and are going to build it I will take the tag off.&lt;/p&gt;</comment>
                            <comment id="12852871" author="stack" created="Fri, 2 Apr 2010 17:16:38 +0000"  >&lt;p&gt;Here are some questions received in private mail on the above:&lt;/p&gt;

&lt;p&gt;.bq When the master gets a listing of files of the table, the all file list as well as WAL will be used as input for a distcp job to generate the snapshot, right?&lt;/p&gt;

&lt;p&gt;The list of files does not go to the master, at least in my thinking.  We&apos;d just dump them into the filesystem into a well-known place under a subdir named for the name of the snapshot.  But yeah, the list can then be used as input to the distcp job.&lt;/p&gt;

&lt;p&gt;.bq Should compaction and split be suspended during the running of distcp?&lt;/p&gt;

&lt;p&gt;Sort of.  I think splits and compactions and splits can be oingoing during snapshot but transitions &amp;#8211; e.g. swapping the compacted file for all the files compacted &amp;#8211; need to be temporarily suspended.  Anything that will cause movement of files in the filesystem.&lt;/p&gt;

&lt;p&gt;.bq You mentioned that &quot;The moved aside, non-deleted files might be copied elsewhere&quot;. What does these files refer to?&lt;/p&gt;

&lt;p&gt;Where now, on completion of a compaction, we put in place the new file and when that is successful, we delete the old.  Similarly on completion of a split, we&apos;ll delete old regions.  An hbase that supports snapshotting never deletes.  It never deletes because if we want to restore a snapshot, we need the old data doing reconstruction.  Since hbase does lots things like listing of directories to find the current set of data files for say a column family, we either change this behavior and keep a catalog of &apos;live&apos; files or, instead on completion of compaction and splits, the old files that are no longer used should be moved aside &amp;#8211; moved to a shadow directory structure or some such (we&apos;d need to be careful to ensure no name clashing).&lt;/p&gt;</comment>
                            <comment id="12852941" author="stack" created="Fri, 2 Apr 2010 20:30:15 +0000"  >&lt;p&gt;Just to add that Todd had a really nice idea yesterday morning where another use for snapshot would be so you could do mapreduce against the raw hbase table hfiles rather than go via the hbase API (when we write storefiles to the manifest, we should preserve their order so newest is first and so on).  Before starting the MR job, you&apos;d trigger a snapshot and give the snapshot number as the MR job input.  We&apos;d then write a snapshot input format that could read all the manifests and feed hfile content as KeyValue inputs.&lt;/p&gt;</comment>
                            <comment id="12853374" author="lichongxin" created="Mon, 5 Apr 2010 14:25:15 +0000"  >&lt;p&gt;Hi folks,&lt;/p&gt;

&lt;p&gt;I&apos;d like to work on this issue as my GSOC project. Based on the comments i&apos;ve got some initial ideas on this issue. Here is my proposal and any comments are welcome.&lt;/p&gt;

&lt;p&gt;1. Snapshot is triggered by sending a signal across the cluster, probably distributed via zookeeper&lt;/p&gt;

&lt;p&gt;2. On receipt, there are two options for region servers:&lt;br/&gt;
a). One option is to flush the memstore so that all writes to the table are persistentbefore the snapshot.&lt;br/&gt;
b). Another option is to roll the Write-Ahead-Log so that we can get the memstore content from the WAL. This is the same as Clint Morgan describes above. This might narrow snapshot window but extra work is needed to extract the memstore content. And if writeToWAL is set to false for the Put, data might be lost for the snapshot. (Maybe we could let the user chooses whether to use memstore or WAL)&lt;/p&gt;

&lt;p&gt;3. Regionservers dump a manifest of all regions they are currently serving and the files of which these are comprised. The regionserver hosting the .META. would also dump the metadata for the table. The manifest as well as the metadata make up the snapshot information file. It can be stored in file &amp;lt;tablename&amp;gt;-time.info under the snapshot directory, say &quot;snapshot.dir&quot;. &lt;/p&gt;

&lt;p&gt;4. Since hbase data files are immutable except compaction and split(right?), then the files listed in &amp;lt;tablename&amp;gt;-time.info keep the same until a compaction or split occur. So we can use some technique similar to copy-on-write. When compaction and split occur, old files will not be deleted but moved aside if it is contained in any &amp;lt;tablename&amp;gt;-time.info file under snapshot directory. At the same time, the snapshot information file should also be updated because the locations of these files have been changed.&lt;/p&gt;

&lt;p&gt;5. For subsequent operations of the snapshot, e.g distcp or mapreduce job, first read the snapshot information file &amp;lt;tablename&amp;gt;-time.info, and then read the corresponding data files for the operation. &lt;/p&gt;

&lt;p&gt;6. This method can guarantee that snapshot window is narrow and snapshot request can be answered quickly because there is no actual copy.&lt;/p&gt;

&lt;p&gt;7. If a snapshot is deleted, check the files listed in &amp;lt;tablename&amp;gt;-time.info. If a file is the moved old file and not used in other snapshot, it can be deleted from the file system. Finally delete the snapshot information file &amp;lt;tablename&amp;gt;-time.info.&lt;/p&gt;

&lt;p&gt;Example: &lt;br/&gt;
a) Table A is comprised of three regions: region1&lt;span class=&quot;error&quot;&gt;&amp;#91;a&amp;#93;&lt;/span&gt;, region2&lt;span class=&quot;error&quot;&gt;&amp;#91;b,c&amp;#93;&lt;/span&gt;, region3&lt;span class=&quot;error&quot;&gt;&amp;#91;d&amp;#93;&lt;/span&gt;, (data files for the region are listed in brackets). Then snapshot of this table obtains the snapshot information file A-20100404.info which is comprised of &lt;/p&gt;
{a, b, c, d, meta1}
&lt;p&gt;. &lt;/p&gt;

&lt;p&gt;b) Then some more writes are performed to table A. The three regions become region1&lt;span class=&quot;error&quot;&gt;&amp;#91;a,e&amp;#93;&lt;/span&gt;, region2&lt;span class=&quot;error&quot;&gt;&amp;#91;b,c&amp;#93;&lt;/span&gt;, region3&lt;span class=&quot;error&quot;&gt;&amp;#91;d&amp;#93;&lt;/span&gt;. Another snapshot of table A will result in A-20100405.info of &lt;/p&gt;
{a, b, c, d, e, meta2}
&lt;p&gt;. &lt;/p&gt;

&lt;p&gt;c) Compaction is performed for region1 and region2 so that we have region1&lt;span class=&quot;error&quot;&gt;&amp;#91;f&amp;#93;&lt;/span&gt;, region2&lt;span class=&quot;error&quot;&gt;&amp;#91;g&amp;#93;&lt;/span&gt;, region3&lt;span class=&quot;error&quot;&gt;&amp;#91;d&amp;#93;&lt;/span&gt; for table A. Since file a,b,c,e are used in previous snapshot information file. These files will be moved aside as a.old, b.old, c.old, e.old. Accordingly A-20100404.info will be updated as &lt;/p&gt;
{a.old, b.old, c.old, d, meta}
&lt;p&gt; and A-2010-0405.info will be updated as &lt;/p&gt;
{a.old, b.old, c.old, d, e.old, meta2}

&lt;p&gt;d) At this time, snapshot of table A will result A-20100406.info &lt;/p&gt;
{f, g, d, meta3}</comment>
                            <comment id="12853473" author="tlipcon" created="Mon, 5 Apr 2010 18:09:58 +0000"  >&lt;p&gt;I think the general design sounds good, but there are a few open questions (the things that make this issue both very hard and very fun!):&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;How do we make snapshot creation very low impact on the cluster?&lt;/li&gt;
	&lt;li&gt;What happens if the snapshot is initiated during a transition? eg a region is in the middle of a split or recovery?&lt;/li&gt;
	&lt;li&gt;How do we do the reference counting in an efficient way?&lt;/li&gt;
	&lt;li&gt;If old files are moved aside after a compaction, how do we deal with concurrent readers of the snapshot?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I think there are a couple tasks that could come before snapshots as concrete steps along the way:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ensure that enough data is present in HFiles themselves so that if all metadata is lost, and there are extra non-GCed store files around, we can still reconstruct the correct table state.&lt;/li&gt;
	&lt;li&gt;Change all data deletions to be garbage collected by the master process instead of by the region server in transition&lt;/li&gt;
	&lt;li&gt;Add reference counting, perhaps via ZK, to the ondisk files, so they aren&apos;t GCed if they&apos;re in use by some snapshot. This would also enable more safe distcp backups.&lt;/li&gt;
	&lt;li&gt;Actual snapshot trigger feature, management tools, etc&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12853491" author="stack" created="Mon, 5 Apr 2010 19:03:05 +0000"  >&lt;p&gt;@ Li Chongxin Let me add to Todd&apos;s great comments.&lt;/p&gt;

&lt;p&gt;.bq ...And if writeToWAL is set to false for the Put, data might be lost for the snapshot&lt;/p&gt;

&lt;p&gt;If user sets &apos;do not write WAL&apos; on their Puts, then user should not be surprised if their data does not show in the snapshot going route b.) in 2 above (IMO option a.) in 2 above will make it so you can&apos;t come near to the first of Todd&apos;s bullet points above).&lt;/p&gt;

&lt;p&gt;Above you suggest that manifests can be edited subsequent to their writing.  I&apos;d suggest that once written, they are never changed.  Regards how to find a file that has been &apos;moved&apos;/&apos;renamed&apos;, i&apos;d suggest we run with a pattern.  Files that hbase is done with get moved to a shadow directory structure of deleted stuff or else the files are renamed with a &apos;deleted&apos; suffix.  Getting a file, if we fail to find the file with the path in the manifest, we&apos;ll add the &apos;.deleted&apos; and try again.&lt;/p&gt;

&lt;p&gt;Yes, split does not mutate files.&lt;/p&gt;

&lt;p&gt;I think that the manifest needs to be made up of a file per running regionserver.  If regions are offline at the time of the snapshot, that shouldn&apos;t be too hard to figure and accommodate.&lt;/p&gt;</comment>
                            <comment id="12853576" author="streamy" created="Mon, 5 Apr 2010 22:39:01 +0000"  >&lt;p&gt;In talking to some HDFS guys, it seems there may be a way we could hard-lock files in HDFS so HBase could continue to do this thing but we could guarantee files would not be deleted or moved.  This could be much simpler than managing a long-running special state inside of HBase, and then the snapshot-mode can be much shorter lived (rather than having to stay around for distcp or whatever)&lt;/p&gt;</comment>
                            <comment id="12854299" author="lichongxin" created="Wed, 7 Apr 2010 02:32:03 +0000"  >&lt;p&gt;@ Todd Lipcon Here are some comments for your questions&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;How do we make snapshot creation very low impact on the cluster?&lt;br/&gt;
According to the proposal, there is no memstore flush for the snapshot creation, and no real copy is performed. What snapshot creation does is to dump the manifest and meta data as well as roll the WAL. I think this does not impact the cluster very much. What do you think?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;What happens if the snapshot is initiated during a transition? eg a region is in the middle of a split or recovery?&lt;br/&gt;
In current implementation, a write lock is acquired when the system is trying to do a transition. When the snapshot is requested, we can try to acquire this write lock. Snapshot is initiated only If the write lock can be obtained.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;How do we do the reference counting in an efficient way?&lt;br/&gt;
I&apos;m not sure what Jonathan Gray mean is hard-link or hard-lock in HDFS. If hard-links is supported in HDFS, then everything is simple since HDFS wil handle the reference counting of the files. But if hard-link is not supported, then we will have to count the reference by outselves. Probably  via metadata, zookeeper or ondisk files. Any ideas?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;If old files are moved aside after a compaction, how do we deal with concurrent readers of the snapshot?&lt;br/&gt;
I&apos;m not very clear about this question. What&apos;s the problem with concurrent readers of the snapshot? Can you give some more comments?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12855071" author="tlipcon" created="Thu, 8 Apr 2010 18:33:25 +0000"  >&lt;blockquote&gt;&lt;p&gt;In current implementation, a write lock is acquired when the system is trying to do a transition. When the snapshot is requested, we can try to acquire this write lock. Snapshot is initiated only If the write lock can be obtained.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is the part I&apos;m not clear on. Are you attempting to achieve a simultaneous write lock across all region servers in the cluster? Also will have to make sure that we &quot;lock&quot; any regions that are currently being moved, etc. Doing this without impacting realtime workload on the cluster is the tricky part in my opinion.&lt;/p&gt;

&lt;p&gt;Perhaps since we&apos;re accepting &quot;sloppy snapshot&quot; we can do without this kind of lock, and the master instead sends out a &quot;request for snapshot&quot; and each regionserver can do its thing at the appropriate time.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;If hard-links is supported in HDFS, then everything is simple since HDFS wil handle the reference counting of the files&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, hard links would make it easier, but in a large cluster with thousands of regions each with many hfiles and many column families, iterating over every store file could be prohibitively expensive if we have to lock everything while doing it. I think it&apos;s fine if snapshots take 15 seconds to create, but if the cluster is frozen for those 15 seconds, it&apos;s a much less useful feature, no?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;If old files are moved aside after a compaction, how do we deal with concurrent readers of the snapshot?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The hardlink solution avoids this issue. I was imaginging that the &quot;snapshot manifest&quot; which would point to explicit paths on HDFS.&lt;/p&gt;</comment>
                            <comment id="12855824" author="lichongxin" created="Mon, 12 Apr 2010 03:23:51 +0000"  >&lt;p&gt;@Todd Lipcon&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;This is the part I&apos;m not clear on. Are you attempting to achieve a simultaneous write lock across all region servers in the cluster? Also will have to make sure that we &quot;lock&quot; any regions that are currently being moved, etc. Doing this without impacting realtime workload on the cluster is the tricky part in my opinion.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sorry for the mistake that rather than write lock,  a read lock instead should be acquired when the snapshot is requested. So this read lock will only block the regions that are currently being moved and other operations such as Get, Put, Delete etc are not impacted at all. Also this lock is not held across all region servers but only per region. A Region is locked only when we dump the manifest of  the region and other regions will not be affected. I think this process is pretty quick and will not impact the whole cluster a lot.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Hard links would make it easier, but in a large cluster with thousands of regions each with many hfiles and many column families, iterating over every store file could be prohibitively expensive if we have to lock everything while doing it. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, totally agree with you. Iterating over stored files is not efficient. That&apos;s why I want to find some other mechanism to manage the reference counting problem. Probably via .META. data or Zookeeper, I still don&apos;t have a concrete solution, any good ideas?&lt;/p&gt;</comment>
                            <comment id="12865552" author="lichongxin" created="Sun, 9 May 2010 06:31:44 +0000"  >&lt;p&gt;I&apos;m working on this issue as my gsoc project right now. For the last few days, I&apos;ve developed a test for starting a snapshot via ZooKeeper. Attached are the source code and a flow chart which depicts the whole process on master and region servers. Any feedbacks are welcome.&lt;/p&gt;

&lt;p&gt;I develop and test this program under package src/test. I didn&apos;t extend the HBaseClusterTestCase or HBaseTestCase because these classes are more like simulators for region server and master. To execute the program, just put the files under right package, that is org.apache.hadoop.hbase.snapshot under src/test. The main method is in class Master. &lt;/p&gt;

&lt;p&gt;I was trying to start/end the snapshot using a method like Double Barriers (&lt;a href=&quot;http://hadoop.apache.org/zookeeper/docs/r3.0.0/recipes.html#sc_doubleBarriers&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hadoop.apache.org/zookeeper/docs/r3.0.0/recipes.html#sc_doubleBarriers&lt;/a&gt;). But there are a lot of situations when run several region servers concurrently, even with a small number of them. When some exceptions are taken into consideration, things become complex. Here I just start three threads to simulate three region servers. Two test cases are provided in the source code, one is to start the snapshot normally and the other is to start the snapshot when one region server is down. It&apos;ll be great if you can test the program under some other cases. I also have thinked about the situation where region server goes down during the processing of snapshot, but no good solution yet.&lt;/p&gt;</comment>
                            <comment id="12865556" author="lichongxin" created="Sun, 9 May 2010 06:35:13 +0000"  >&lt;p&gt;One more problem:&lt;br/&gt;
When I run the test with standalone ZooKeeper, everything is fine, while running with MiniZooKeeperCluster a exception might be thrown, although the output is still correct. Below is the exception stack trace and it shoud be related with MiniZooKeeperCluster. I don&apos;t know if it is a configuration problem.&lt;/p&gt;

&lt;p&gt;===================================================================================&lt;br/&gt;
2010-05-06 22:05:27,062 ERROR &lt;span class=&quot;error&quot;&gt;&amp;#91;Thread-1&amp;#93;&lt;/span&gt; server.NIOServerCnxn$Factory$1(82): Thread Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;Thread-1,5,main&amp;#93;&lt;/span&gt; died&lt;br/&gt;
java.nio.channels.CancelledKeyException&lt;br/&gt;
 at sun.nio.ch.SelectionKeyImpl.ensureValid(SelectionKeyImpl.java:55)&lt;br/&gt;
 at sun.nio.ch.SelectionKeyImpl.interestOps(SelectionKeyImpl.java:64)&lt;br/&gt;
 at org.apache.zookeeper.server.NIOServerCnxn$SendBufferWriter.wakeup(NIOServerCnxn.java:927)&lt;br/&gt;
 at org.apache.zookeeper.server.NIOServerCnxn$SendBufferWriter.checkFlush(NIOServerCnxn.java:909)&lt;br/&gt;
 at org.apache.zookeeper.server.NIOServerCnxn$SendBufferWriter.flush(NIOServerCnxn.java:945)&lt;br/&gt;
 at java.io.BufferedWriter.flush(BufferedWriter.java:236)&lt;br/&gt;
 at java.io.PrintWriter.flush(PrintWriter.java:276)&lt;br/&gt;
 at org.apache.zookeeper.server.NIOServerCnxn$2.run(NIOServerCnxn.java:1089)&lt;br/&gt;
=====================================================================================&lt;/p&gt;</comment>
                            <comment id="12865834" author="streamy" created="Mon, 10 May 2010 17:27:27 +0000"  >&lt;p&gt;@Li, this looks like a great start.  Rather than posting zip files, can you post diff/patch files instead?&lt;/p&gt;</comment>
                            <comment id="12865853" author="streamy" created="Mon, 10 May 2010 18:15:07 +0000"  >&lt;p&gt;Also, rather than creating a mock Master and mock RegionServer, it might be more useful to just create classes that can be used by the real Master and RS processes.&lt;/p&gt;

&lt;p&gt;For example, the Master class you have could become SnapshotManager or SnapshotMonitor.  The RegionServer might become SnapshotExecutor.  Just suggestions for names but I would move to making patches against the svn repository and building stuff in a way that will make it easier to integrate after you get through early testing.&lt;/p&gt;

&lt;p&gt;Does your current design have it so that all RegionServers wait for every other RS to be ready, and then they concurrently perform their snapshots?  It seems like this could be dangerous behavior.  We might want to stagger snapshots across the cluster, otherwise this process could create too much load.&lt;/p&gt;

&lt;p&gt;The flow chart is great.  Could you add some different notation about the znode names and what things will have more than one process performing it?  For example, each RS might make the znode:  /snapshot/ready/RSNAME or some such.&lt;/p&gt;

&lt;p&gt;As far as this thing working in failure scenarios, that could potentially be very complex (or if designed in a region-centric view rather than regionserver-centric view maybe not so bad).  Let&apos;s try to flesh out the requirements early/now.  If we decide we won&apos;t work under failure, then let&apos;s make that explicit and ensure that under failure we can roll everything back.  If we want it to work under failure (Master and/or RegionServer), let&apos;s talk about it more now because the basic design could have big implications.&lt;/p&gt;

&lt;p&gt;In your flow chart, once the snapshot starts it looks like an RS won&apos;t communicate until it finishes.  If that RS is serving 1000 regions of the table being snapshotted, this could take a long time.  Does the RS need to keep a timestamp updated to let the master/client know it&apos;s still working (and maybe it&apos;s progress?).  Also, are splits and load balancing blocked during snapshot time across the whole cluster?&lt;/p&gt;

&lt;p&gt;I think it would be useful to generate a design document.  This would include your current flow chart as well as some of the stuff in comments on this jira.  I&apos;d like to have something we can continue to iterate on rather than just comments.&lt;/p&gt;

&lt;p&gt;Great work so far!&lt;/p&gt;</comment>
                            <comment id="12870270" author="stack" created="Sat, 22 May 2010 04:28:03 +0000"  >&lt;p&gt;@Li Any progress to report?&lt;/p&gt;</comment>
                            <comment id="12875941" author="stack" created="Sat, 5 Jun 2010 21:11:33 +0000"  >&lt;p&gt;Here are some comments on the design requirments Li:&lt;/p&gt;

&lt;p&gt;+ Add a date, add a link to this issue to give your design context.&lt;br/&gt;
+ FYI, there has been talk of adding snapshots to hdfs.  Its mentioned here: &lt;a href=&quot;http://hadoop.apache.org/common/docs/current/hdfs_design.html#Snapshots&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hadoop.apache.org/common/docs/current/hdfs_design.html#Snapshots&lt;/a&gt;.  The issue is stalled at the moment: &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-233&quot; title=&quot;Support for snapshots&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-233&quot;&gt;&lt;del&gt;HDFS-233&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
+ I don&apos;t think you should take on requirement 1), only the hbase admin can create a snapshot.  There is no authentication/access control in hbase currently &amp;#8211; its coming but not here yet &amp;#8211; and without it, this would be hard for you to enforce.&lt;br/&gt;
+ Regards requirement 2., I&apos;d suggest that how the snapshot gets copied out from under hbase should also be outside the scope of your work.  I&apos;d say your work is making a viable snapshot that can be copied with perhaps some tests to prove it works &amp;#8211; that might copy off data &amp;#8211; but in general, i&apos;d say how actual copying is done is outside of the scope of this issue.  &lt;br/&gt;
+ Requirement 6., resuming from a snapshot, yes, this is in scope (how the stuff is copied into place I&apos;d argue is not.  Of course, if you have the time to work on copy out and copy in functionality, great, but I&apos;d peg this lower priority).&lt;br/&gt;
+ Otherwise, the requirements are great.&lt;/p&gt;
</comment>
                            <comment id="12875943" author="stack" created="Sat, 5 Jun 2010 21:27:54 +0000"  >&lt;p&gt;Coments on &apos;3 Design Overview&apos;:&lt;/p&gt;

&lt;p&gt;+ How you going to ensure tabke is in &apos;good status&apos;.  Can you not snapshot it whatever its state?  All regions being on line is a requirement?&lt;br/&gt;
+ I like the bit where we roll wal log rather than wait on memstore flushes.  Good.&lt;br/&gt;
+ FYI, wal logs are now archived, not deleted.  Replication needs them.  Replication might also be managing clean up of the archives (j-d, whats the story here?)  If an outstanding snapshot, one that has not been deleted, then none of its wals should be removed.&lt;/p&gt;


&lt;p&gt;Comments on &apos;4 Message Passing Via ZK&quot;&lt;/p&gt;

&lt;p&gt;+ I can say &apos;snapshot&apos; all tables?  Can I say &apos;snapshot catalog tables &amp;#8211; meta and root tables?&apos;&lt;br/&gt;
+ If a RS fails between &apos;ready&apos; and &apos;finish&apos;, does this mean we abandon the snapshot?&lt;br/&gt;
+ I&apos;d say if RS is not ready for snapshot, just fail it.  Something is badly wrong is a RS can&apos;t snapshot.&lt;br/&gt;
+ Would it make sense for there to be a state between ready and finish and the data in this intermediate state would be the RS&apos;s progress?&lt;br/&gt;
+ Diagram looks good.&lt;/p&gt;


</comment>
                            <comment id="12876259" author="lichongxin" created="Mon, 7 Jun 2010 14:40:18 +0000"  >&lt;p&gt;@Stack, Thanks for the comments. Here are some replies and questions for the comments.&lt;/p&gt;

&lt;p&gt;.bq + I don&apos;t think you should take on requirement 1), only the hbase admin can create a snapshot. There is no authentication/access control in hbase currently - its coming but not here yet - and without it, this would be hard for you to enforce.&lt;/p&gt;

&lt;p&gt;I think I didn&apos;t state it properly. I know access control is not included in hbase currently. What I mean here is, snapshot should be put in class HBaseAdmin instead of HTable. Client side operations being divided into these two classes is also for the consideration of access control which is provided in the future, isn&apos;t it?&lt;/p&gt;

&lt;p&gt;.bq + Regards requirement 2., I&apos;d suggest that how the snapshot gets copied out from under hbase should also be outside the scope of your work. I&apos;d say your work is making a viable snapshot that can be copied with perhaps some tests to prove it works - that might copy off data - but in general, i&apos;d say how actual copying is done is outside of the scope of this issue. &lt;/p&gt;

&lt;p&gt;Strictly, requirement 2 is not about how snapshot is copied out from under hbase. Actually, table data is not really copied when snapshot in current design. To make it fast, snapshot just captures the state of the table especially all the table files. So for requirement 2, just make sure the table data (hfiles indeed) are not mutated when snapshot.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;+ How you going to ensure tabke is in &apos;good status&apos;. Can you not snapshot it whatever its state? All regions being on line is a requirement?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Regarding tables that are disabled, all regions being on line should not be a requirement. As for &apos;good status&apos;, what I&apos;m thinking is a table region could be in PENDING_OPEN or PENDING_CLOSE state, in which it might be half opened. I&apos;m not sure wether RS or the master should take on the responsibility to perform the snapshot at this time. On the other side, if the table is completely opened or closed, snapshot can be taken by RS or the master.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;+ FYI, wal logs are now archived, not deleted. Replication needs them. Replication might also be managing clean up of the archives (j-d, whats the story here?) If an outstanding snapshot, one that has not been deleted, then none of its wals should be removed.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Great. In current design, WAL log files are the only data files that are really copied. If they are now archived instead of deleted, we can create log files reference just as hfiles instead of copying the actual data. This will further shorten the snapshot time. Another LogCleanerDelegate, say ReferencedLogCleaner, could be created to check whether the log file should be deleted for the consideration of snapshot. What do you think?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;+ I can say &apos;snapshot&apos; all tables? Can I say &apos;snapshot catalog tables - meta and root tables?&apos;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think snapshot for meta works fine but snapshot for root table is a little tricky. When the snapshot is performed for a user table, .META. is updated to keep track of the file references. If a .META. table is snapshot, &lt;del&gt;ROOT&lt;/del&gt; can be update to keep track of the file references. But where to keep the file references for &lt;del&gt;ROOT&lt;/del&gt; table(region) if it is snapshot, still in &lt;del&gt;ROOT&lt;/del&gt;? Should these newly updated file references information also be included in the snapshot?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;+ If a RS fails between &apos;ready&apos; and &apos;finish&apos;, does this mean we abandon the snapshot?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes. If a RS fails between &apos;ready&apos; and &apos;finish&apos;, it should notify the client or master, whichever orchestrates, then the client or the master will send a signal to stop the snapshot on all RS via ZK. Something like this.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;+ I&apos;d say if RS is not ready for snapshot, just fail it. Something is badly wrong is a RS can&apos;t snapshot.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Currently, there is a timeout for snapshot ready. If a RS is ready, it&apos;ll wait for all the RS to be ready. Then the snapshot starts on all RS. Otherwise, the ready RS timeout and snapshot does not start on any RS. It&apos;s a synchronous way. Do you think this is appropriate? Will it create too much load to perform snapshot concurrently on the RS? (Jonathan perfer an asynchronous method)&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;+ Would it make sense for there to be a state between ready and finish and the data in this intermediate state would be the RS&apos;s progress?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Do you mean a znode is create for each RS to keep the progress? Then how do you define the RS&apos;s progress? What data will be kept in this znode?&lt;/p&gt;

&lt;p&gt;Thanks again for the comments. I will update the design document based on them.&lt;/p&gt;</comment>
                            <comment id="12876330" author="stack" created="Mon, 7 Jun 2010 17:43:49 +0000"  >&lt;p&gt;.bq ...What I mean here is, snapshot should be put in class HBaseAdmin instead of HTable. &lt;/p&gt;

&lt;p&gt;OK.  I misunderstood.&lt;/p&gt;

&lt;p&gt;.bq 2, ...just make sure the table data (hfiles indeed) are not mutated when snapshot.&lt;/p&gt;

&lt;p&gt;Yes... but also after snapshot is done.... your design should include description of how files are archived, rather than deleted, when no longer needed post-snapshot.  Design should also describe how a snapshot-restore tool will know where to find files that have been put aside, rather than deleted, in archives.&lt;/p&gt;

&lt;p&gt;.bq I&apos;m not sure wether RS or the master should take on the responsibility to perform the snapshot at this time. &lt;/p&gt;

&lt;p&gt;I&apos;d say just forge ahead with the snapshot.   Snapshot will be doing same thing whether table is partially online or not methinks?  If you can, warn user that the snapshot is of a table that is partially online but not important.  A partially-offlined table can be fixed up post snapshot restore.  Its outside the scope of your issue doing work to figure whether table is healthy or not, I&apos;d say.&lt;/p&gt;

&lt;p&gt;.bq Another LogCleanerDelegate, say ReferencedLogCleaner, could be created to check whether the log file should be deleted for the consideration of snapshot. What do you think?&lt;/p&gt;

&lt;p&gt;Sounds good.&lt;/p&gt;

&lt;p&gt;I need to review J-D&apos;s replication.  I can add note that he needs to be consious that others will want a say on when files are cleaned up.&lt;/p&gt;

&lt;p&gt;Regards snapshot of &lt;del&gt;ROOT&lt;/del&gt;, don&apos;t worry about it.  There is nothing in there.  Regards snapshot of .META., that should be possible.  In fact you&apos;ll probably be doing a snapshot of at least a subset of .META. on every table snapshot I&apos;d imagine &amp;#8211; at least the entries for the relevant table.&lt;/p&gt;

&lt;p&gt;.bq It&apos;s a synchronous way. Do you think this is appropriate? &lt;/p&gt;

&lt;p&gt;Yes.  I&apos;m w/ JG on this.&lt;/p&gt;

&lt;p&gt;.bq Do you mean a znode is create for each RS to keep the progress? &lt;/p&gt;

&lt;p&gt;OK. Lets not do this for now.  Its the kinda thing implementation will bring out.  At implementation time you may find you need it... but hopefully the snapshot runs so fast, there&apos;ll be no need of the intermediary.&lt;/p&gt;

</comment>
                            <comment id="12876352" author="stack" created="Mon, 7 Jun 2010 18:29:07 +0000"  >&lt;p&gt;On, &quot;5 Snapshot Creation&quot;&lt;/p&gt;

&lt;p&gt;.bq &quot;Because this table region must be online, dumping the HRegionInfo of the region to a file &quot;.regioninfo&quot; under the snapshot directory of this region will obtain the metadata.&quot;&lt;/p&gt;

&lt;p&gt;...The above is wrong, right?  We can snapshot online tables?&lt;/p&gt;

&lt;p&gt;+1 on reading .META. data, flushing it to .regioninfo to be sure you have latest, and then copying that (Or, instead, you could ensure that on any transistion, the .regioninfo is updated.  If this is happening, no need to do extra flush of .META. at snapshot time.  This latter would be better IMO).&lt;/p&gt;

&lt;p&gt;So, do you foresee your restore-from-snapshot running split over the logs as part of the restore?  That makes sense to me.&lt;/p&gt;

&lt;p&gt;Why you think we need a Reference to the hfile?  Why not just a file that lists the names of all the hfiles?  We don&apos;t need to execute the snapshot, do we?  Restoring from a snapshot would be a bunch of file renames and wal splitting?  Or what are you thinking?  (Oh, maybe I&apos;ll find out when I read chapter 6).&lt;/p&gt;

&lt;p&gt;.bq ....can be created just by the master.&lt;/p&gt;

&lt;p&gt;Lets not have the master run the snapshot... let the client run it?&lt;/p&gt;

&lt;p&gt;Shall we name the new .META. column family snapshot rather than reference?&lt;/p&gt;

&lt;p&gt;I like this idea of keeping region snapshot and reference counting beside the region up in .META.&lt;/p&gt;

&lt;p&gt;On the filename &apos;.deleted&apos;, I think it a mistake to give it a &apos;.&apos; prefix especially given its in the snapshot dir (the snapshot dir probably needs to be prefixed with a character illegal in tablenames such as a &apos;.&apos; so its not taken for a table directory).&lt;/p&gt;


&lt;p&gt;Regards &apos;Not sure whether there will be a name collision under this &quot;.deleted&quot; directory&apos;, j-d has done work to ensure WALs are uniquely named.  Storefiles are given a random-id.  We should probably do the extra work to ensure they are for sure unique... give them a UUID or something to we don&apos;t ever clash.&lt;/p&gt;

&lt;p&gt;After reading chapter 6, I fail to see why we should keep References to files.  Maybe I&apos;m missing something.&lt;/p&gt;

&lt;p&gt;.bq Not decides where to keep all the snapshots information, in a meta file under snapshot directory&lt;/p&gt;

&lt;p&gt;Do you need a new catalog table called snapshots to keep list of snapshots, of what a snapshot comprises and some other metadata such as when it was made, whether it succeeded, who did it and why?&lt;/p&gt;

&lt;p&gt;On the other hand, a directory in hdfs of files per snapshot will be more robust.&lt;/p&gt;

&lt;p&gt;Section 7.4 is missing split of WAL files.  Perhaps this can be done in a MR job?&lt;/p&gt;

&lt;p&gt;Design looks excellent Li.&lt;/p&gt;</comment>
                            <comment id="12876699" author="lichongxin" created="Tue, 8 Jun 2010 15:26:35 +0000"  >&lt;blockquote&gt;&lt;p&gt;... but also after snapshot is done.... your design should include description of how files are archived, rather than deleted...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Are you talking about files that are no longer used by hbase table but are referenced by snapshot? I think this has been described in chapter 6 &apos;Snapshot Maintenance&apos;. For example, hfiles are archived in delete directory. And section 6.4 describes how these files will be cleaned up.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;..In fact you&apos;ll probably be doing a snapshot of at least a subset of .META. on every table snapshot I&apos;d imagine - at least the entries for the relevant table.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;.META. entries for the snapshot table have been dumped, haven&apos;t they? Why we still need a snapshot of a subset of .META.?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;So, do you foresee your restore-from-snapshot running split over the logs as part of the restore? That makes sense to me.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, restore-from-snapshot has to run split over the WAL logs. It will take some time. So restore-from-snapshot will not be very fast.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Why you think we need a Reference to the hfile? Why not just a file that lists the names of all the hfiles? We don&apos;t need to execute the snapshot, do we? Restoring from a snapshot would be a bunch of file renames and wal splitting?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;At first I thought snapshot probably should keep the table directory structure for the later use. For example, a reader like HalfStoreFileReader could be provided so that we could read from the snapshot directly. But yes, we actually don&apos;t execute the snapshot. So keeping a list of all the hfiles (actually one list per RS, right?) should be enough. And also restroing from snapshot is not just file renames. Since a hfile might be referenced by several snapshot, we should probably do real copy when restroing, right?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Shall we name the new .META. column family snapshot rather than reference?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;sure&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;On the filename &apos;.deleted&apos;, I think it a mistake to give it a &apos;.&apos; prefix especially given its in the snapshot dir...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ok, I will rename the snapshot dir as &apos;.snapshot&apos;. For dir &apos;.deleted&apos;, what name do you think we should use? Because there might be several snapshots under the dir &apos;.snapshot&apos;, each has a snapshot name, I name this dir as &apos;.deleted&apos; to discriminate it from a snapshot name.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Do you need a new catalog table called snapshots to keep list of snapshots, of what a snapshot comprises and some other metadata such as when it was made, whether it succeeded, who did it and why?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It&apos;ll be much more convenient if a catalog table &apos;snapshot&apos; can be created. Will this impact normal operation of hbase?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Section 7.4 is missing split of WAL files. Perhaps this can be done in a MR job? &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;ll add the split of WAL logs. Yes, a MR job can be used. Which method do you think is better? Read from the imported file and inserted into the table by hbase api. Or just copy the hfile into place and update the .META.?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Lets not have the master run the snapshot... let the client run it?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Snapshot will be doing same thing whether table is partially online or not..&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I put these two issues together because I think they are correlative. In current design, if a table is opened, snapshot will be performed by each RS which serves tha table regions. Otherwise, if a table is closed, snapshot will be performed by the master because the table is not served by any RS. For the first comment, it is talking about closed table. So master will perform the snapshot because client does not have access to underlying dfs. For the second one, I was thinking if a table is partially online, table regions might be partially served by RS and partially offline, right? Then who will perform the snapshot? If RS, the regions that are offline will be missed. If the master, regions that are online might lose data in memstore. I&apos;m confused..&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;It&apos;s a synchronous way. Do you think this is appropriate? Yes. I&apos;m w/ JG on this.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is another problem confusing me..In current design (which is a synchronous way), a snapshot is started when all the RS are ready for snapshot. Then all RS perform snapshot concurrently. This guarantees snapshot is not started if one RS fails. If we switch to an asynchronous approach. Should the RS start snapshot immediately when it is ready?&lt;/p&gt;</comment>
                            <comment id="12876814" author="stack" created="Tue, 8 Jun 2010 21:33:03 +0000"  >&lt;p&gt;.bq Are you talking about files that are no longer used by hbase table but are referenced by snapshot? I think this has been described in chapter 6 &apos;Snapshot Maintenance&apos;. For example, hfiles are archived in delete directory. And section 6.4 describes how these files will be cleaned up.&lt;/p&gt;

&lt;p&gt;That&apos;ll do for now.  I need to kick J-D so he&apos;s down with this change since he&apos;s going to want to have references to archived files doing his replications.  Let me get him to check this section out, make sure you two fellas are not fighting each other regards log file archiving.&lt;/p&gt;

&lt;p&gt;.bq .META. entries for the snapshot table have been dumped, haven&apos;t they? Why we still need a snapshot of a subset of .META.?&lt;/p&gt;

&lt;p&gt;You mean .regioninfo?  If so, thats fine, yes (as long as you ensure .regioninfo is up-to-date w/ snapshot).&lt;/p&gt;

&lt;p&gt;.bq Yes, restore-from-snapshot has to run split over the WAL logs. It will take some time. So restore-from-snapshot will not be very fast.&lt;/p&gt;

&lt;p&gt;We can work on speeding it up later, no problem.&lt;/p&gt;

&lt;p&gt;.bq ...actually one list per RS, right?&lt;/p&gt;

&lt;p&gt;Yes, this seems right since each RS will be responsible for snapshotting its portion of the total data.&lt;/p&gt;

&lt;p&gt;.bq ...we should probably do real copy when restroing, right?&lt;/p&gt;

&lt;p&gt;Yes, copy rather than rename I&apos;d say.  We don&apos;t want to destroy the well of good hfiles, even if it is starting from a snapshot (this snapshot might be bad and we need to go back in time to earlier snapshots...etc.)&lt;/p&gt;

&lt;p&gt;Hmmm... here is where your use of a Reference might actually come in handy.  If snapshot directory had all References under it, perhaps, we could start against the snapshot directory but immediately after startup, as we do for half-references, we&apos;d work hard to undo the Reference by writing a new hfile from what is referenced... This would make it so we came up quickly.   I&apos;d say this latter idea would be a nice-to-have.  &lt;/p&gt;

&lt;p&gt;.bq Ok, I will rename the snapshot dir as &apos;.snapshot&apos;. For dir &apos;.deleted&apos;, what name do you think we should use? Because there might be several snapshots under the dir &apos;.snapshot&apos;, each has a snapshot name, I name this dir as &apos;.deleted&apos; to discriminate it from a snapshot name.&lt;/p&gt;

&lt;p&gt;I&apos;d say ignore my comment.  You have good reason for naming it w/ the &apos;.&apos;  prefix.&lt;/p&gt;

&lt;p&gt;.bq It&apos;ll be much more convenient if a catalog table &apos;snapshot&apos; can be created. Will this impact normal operation of hbase?&lt;/p&gt;

&lt;p&gt;it will in some regard; meta regions weill be bigger because they will now carry more data &amp;#8211; though it should be fairly small I&apos;d say.  The extra data will bring on a .META. split the sooner.  We&apos;ll deal.    Having it in separate column family will make it so it doesn&apos;t get in the way during normal .META. accesses.  One problem though is that regions get deleted when there are no longer references to the a split parent.  Won&apos;t this mean you lose snapshot data?  Would this require you to keep snapshots in a table of its own?&lt;/p&gt;

&lt;p&gt;,bq Or just copy the hfile into place and update the .META.? &lt;/p&gt;

&lt;p&gt;This latter would be better, but we can start simple at first... just run the main on the HLog script... pass it dir of WAL files to split.&lt;/p&gt;

&lt;p&gt;I did not understand why master needed to be in the mix.  Now I understand its role taking care of offlined regions.  This sounds right.&lt;/p&gt;

&lt;p&gt;I suppose you&apos;ll need to run a quick verification table is online.  There should be facility developed as part of fix for hbase-7 that should help here by the time you get to coding.&lt;/p&gt;

&lt;p&gt;.bq ...If we switch to an asynchronous approach. Should the RS start snapshot immediately when it is ready?&lt;/p&gt;

&lt;p&gt;I do not follow.  Please retry.&lt;/p&gt;

</comment>
                            <comment id="12876832" author="jdcryans" created="Tue, 8 Jun 2010 22:05:42 +0000"  >&lt;p&gt;Reviewing the doc with respect to replication, this feature will need to add itself to the chain of LogCleanerDelegates in Master. Currently there&apos;s TimeToLiveLogCleaner that runs by default, in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2223&quot; title=&quot;Handle 10min+ network partitions between clusters&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2223&quot;&gt;&lt;del&gt;HBASE-2223&lt;/del&gt;&lt;/a&gt; I wrap it with ReplicationLogCleaner that adds more checks in ZooKeeper. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-50&quot; title=&quot;Snapshot of table&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-50&quot;&gt;&lt;del&gt;HBASE-50&lt;/del&gt;&lt;/a&gt; should do the same, and should make sure that if Replication is enabled that it wraps its log cleaner, else to wrap the TTL cleaner.&lt;/p&gt;

&lt;p&gt;Sounds good?&lt;/p&gt;</comment>
                            <comment id="12877076" author="lichongxin" created="Wed, 9 Jun 2010 13:54:19 +0000"  >&lt;p&gt;@ J-D&lt;/p&gt;

&lt;p&gt;Yes..That sounds good. I will implement another LogCleanerDelegate, say ReferenceLogCleaner or SnapshotLogCleaner.&lt;/p&gt;

&lt;p&gt;Do you archive any other files besides log files, say HFiles?&lt;/p&gt;</comment>
                            <comment id="12877077" author="lichongxin" created="Wed, 9 Jun 2010 13:59:33 +0000"  >&lt;blockquote&gt;&lt;p&gt;...make sure you two fellas are not fighting each other regards log file archiving.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;In current design for snapshot, only hfiles are archived. Log files are not archived but copied directly. However, given old log files are archived instead of deleted right now, I think I can back up log files by reference, just as hfile. When we roll the WAL log files at start of the snapshot, a list of references to these log files can be created. When we need split these old logs, we can follow the reference to find the log files. If a log file is removed from its original dir, then find it in the archived dir, just like hfiles. A LogCleanerDelegate for snapshot will be added to the chain to check if a log file should be deleted from the archived dir. What do you think?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;here is where your use of a Reference might actually come in handy. If snapshot directory had all References under it, perhaps, we could start against the snapshot directory but immediately after startup, as we do for half-references..&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes,this will probably make restrore quick. Shall we create snapshot by Reference or just a file that lists the names of hfiles?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;One problem though is that regions get deleted when there are no longer references to the a split parent. Won&apos;t this mean you lose snapshot data? Would this require you to keep snapshots in a table of its own?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This scenario has been taken into account in section 6.2 &apos;Split&apos;. Split parent region will not be deleted until there are no daughter references as well as snapshot references to it.  (snapshot references are the references in &apos;snapshot&apos; family). MetaScanner on the master side will check both references in .META. This is not the reason why a &apos;snapshot&apos; catalog table is required.&lt;/p&gt;

&lt;p&gt;.META. table is in a region centric view. For each row in .META. table, it contains information about a single region, e.g. regioninfo, server that hosts the region, split daughters and hfiles that are referenced by snapshots. But there are some other information which are in snapshot centric view, or table centric view, e.g. table for which a snapshot is created, snapshot creation time. So snapshot catalog table is created to keep these information. But right now I think a meta info file created for each snapshot can do the same work. Snapshot will not be modified once it is created, right?&lt;/p&gt;

&lt;p&gt;.bq ...If we switch to an asynchronous approach. Should the RS start snapshot immediately when it is ready? I do not follow. Please retry.&lt;/p&gt;

&lt;p&gt;In current design, the snapshot is started and performed in a synchronous way. That is, if a RS is ready, it doesn&apos;t start the snapshot until all RS are ready. When all RS are ready, they will perform snapshot concurrently. This method guarantees snapshot is not started if one RS fails. But doing work concurrently might create too much load and impact normal operation, right?&lt;/p&gt;

&lt;p&gt;An alternative approach is to do snapshot asynchronous. When snapshot request is spread over the cluster via ZK, the client returns immediately. And each RS starts performing snapshot once it receives the snapshot request, without knowing the status of other RS, just as what compaction, split does.&lt;/p&gt;

&lt;p&gt;Which do you prefer?&lt;/p&gt;</comment>
                            <comment id="12877121" author="jdcryans" created="Wed, 9 Jun 2010 16:30:57 +0000"  >&lt;blockquote&gt;&lt;p&gt;Yes..That sounds good. I will implement another LogCleanerDelegate, say ReferenceLogCleaner or SnapshotLogCleaner.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Latter. Some refactoring could be done on how to chain multiple delegates without doing a bunch of ifs in the code. Could be in the scope of another jira.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Do you archive any other files besides log files, say HFiles?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;AFAIK, no.&lt;/p&gt;</comment>
                            <comment id="12878339" author="lichongxin" created="Sun, 13 Jun 2010 02:11:39 +0000"  >&lt;p&gt;Design document has been updated based on the discussion. Following changes have been made:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Requirements have been updated&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Snapshot can now be created for both online (enabled) tables and offline (disabled) tables. For offline table, snapshot is performed by the master&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Metadata for the table is not copied from .regioninfo any more but totally dumped from .META.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;WAL logs are now archived instead of deleted, so snapshot does not copy the log files any more but take a file that lists the log names. A new section 6.5 is added on log maintenance&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Rename &apos;reference&apos; family in .META. to &apos;snapshot&apos;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Add the same column family &apos;snapshot&apos; to &lt;del&gt;ROOT&lt;/del&gt; so that .META. can be snapshot too&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;A new file .snapshotinfo is created under each snapshot dir to keep the meta information of snapshot. List operation for snapshots will read the this meta file.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;A new operation &apos;Restore&apos; is added to restore a table from a snapshot on the same data center&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Export and import are changed. Export and import are used to export a snapshot to or imort a snapshot from other data centers. Therefore, exported snapshot has the same file format as how a table is exported so that we can treat exported snapshot the same as exported table and import the exported snapshot with the same import facility.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Pending Questions:&lt;br/&gt;
1.&lt;br/&gt;
What if the table with the same name is still online when we want to restore a snapshot? There will be a name collision in both HDFS and .META. ; We should not touch the existing table, right?&lt;br/&gt;
2.&lt;br/&gt;
Then shall we allow rename the snapshot as a new table name? For example the snapshot is created for table &quot;table1&quot;, can we restore the snapshot as &quot;table2&quot;?&lt;/p&gt;</comment>
                            <comment id="12878411" author="stack" created="Sun, 13 Jun 2010 17:30:17 +0000"  >&lt;p&gt;.bq What if the table with the same name is still online when we want to restore a snapshot&lt;/p&gt;

&lt;p&gt;Fail with a warning.  A nice-to-have would be your suggestion of restoring snapshot into a table named something other than the original table&apos;s name (Fixing this issue is low-priority IMO).&lt;/p&gt;

&lt;p&gt;There a few things in the above that make me want to go over the design again.   I&apos;ll report back after I&apos;ve done that.  Specifically:&lt;/p&gt;

&lt;p&gt;.bq Rename &apos;reference&apos; family in .META. to &apos;snapshot&apos;&lt;/p&gt;

&lt;p&gt;... didn&apos;t we discuss that .META. might not be the place to keep snapshot data since regions are deleted when the system is done w/ them (but a snapshot may outlive a particular region).&lt;/p&gt;


</comment>
                            <comment id="12878446" author="tlipcon" created="Sun, 13 Jun 2010 23:02:24 +0000"  >&lt;p&gt;Finally had a chance to look over the doc. Great to see such a thorough writeup on the plan! A couple thoughts:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Snapshot creation: rather than causing all of the RS to roll the logs, they could simply record the log sequence number of the snapshot, right? This will be a bit faster to do and causes even less of a &quot;hiccup&quot; in concurrent operations (and I don&apos;t think it&apos;s any more complicated to implement, is it?)&lt;/li&gt;
	&lt;li&gt;Snapshot restore: I do think it&apos;s a good idea to allow snapshot restore to a new table name while the original table is still online. And the restored snapshot should be able to share HFiles with the original table&lt;/li&gt;
	&lt;li&gt;Making the client orchestrate the snapshot process seems a little strange - could the client simply initiate it and put the actual snapshot code in the master? I think we should keep the client as thin as we can (in the future we may want to implement clients natively in other languages)&lt;/li&gt;
	&lt;li&gt;I&apos;d be interested in a section about failure analysis - what happens when the snapshot coordinator fails in the middle? You briefly touched on this, but would be good just to enumerate the different points where a failure can happen and show that the operation is correctly aborted and that you don&apos;t end up with an HFile &quot;reference leak&quot;&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12880093" author="lichongxin" created="Fri, 18 Jun 2010 07:13:23 +0000"  >&lt;blockquote&gt;&lt;p&gt;Fail with a warning. A nice-to-have would be your suggestion of restoring snapshot into a table named something other than the original table&apos;s name (Fixing this issue is low-priority IMO).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;.. it&apos;s a good idea to allow snapshot restore to a new table name while the original table is still online. And the restored snapshot should be able to share HFiles with the original table&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I will make this issue a low-priority sub-task. One more question, besides metadata and log file, what else data should take care to rename the snapshot to a new table name? Are there any other files (e.g. HFiles) containing table name?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;... didn&apos;t we discuss that .META. might not be the place to keep snapshot data since regions are deleted when the system is done w/ them (but a snapshot may outlive a particular region).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I misunderstood... I thought you were talking about create a new catalog table &apos;snapshot&apos; to keep the metadata of snapshots, such as creation time.&lt;br/&gt;
In current design, a region will not be delete if it is still used by a snapshot, even if the system has done with it. This region would be probably marked as &apos;deleted&apos; in .META. This is discussed in section 6.2, 6.3 and no new catalog table is added. Do you think it is appropriate to keep metadata in .META. for a deleted region? Do we still need a new catalog table?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;rather than causing all of the RS to roll the logs, they could simply record the log sequence number of the snapshot, right? This will be a bit faster to do and causes even less of a &quot;hiccup&quot; in concurrent operations (and I don&apos;t think it&apos;s any more complicated to implement, is it?)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, sounds good. The log sequence number should also be included when the logs are split because log files would contain the data both before and after the snapshot, right?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Making the client orchestrate the snapshot process seems a little strange - could the client simply initiate it and put the actual snapshot code in the master? I think we should keep the client as thin as we can&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ok, This will change the design a little.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I&apos;d be interested in a section about failure analysis - what happens when the snapshot coordinator fails in the middle? ..&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That will be great!&lt;/p&gt;</comment>
                            <comment id="12880252" author="tlipcon" created="Fri, 18 Jun 2010 17:15:56 +0000"  >&lt;p&gt;Also we should discuss implementation plan - it seems like we have a number of core changes necessary to support this feature. Could we do the feature in a branch and then merge later? We have some pretty important releases that we have to get out in the next month or two and if the snapshot stuff destabilizes it around the same timeframe it may be an issue.&lt;/p&gt;</comment>
                            <comment id="12880276" author="streamy" created="Fri, 18 Jun 2010 18:29:05 +0000"  >&lt;p&gt;+1 on feature branch once stuff is ready for commit&lt;/p&gt;</comment>
                            <comment id="12880454" author="lichongxin" created="Sat, 19 Jun 2010 08:10:20 +0000"  >&lt;p&gt;Sure. We do need a branch for snapshot. Currently I&apos;m working on TRUNK. Once the stuff is ready, I think we can create a new feature branch for commit. What do you think?&lt;/p&gt;</comment>
                            <comment id="12880511" author="streamy" created="Sat, 19 Jun 2010 16:54:04 +0000"  >&lt;p&gt;Sounds good.  Yes, we will cut branch off of trunk so do your work from there until the branch is made.&lt;/p&gt;</comment>
                            <comment id="12882515" author="lichongxin" created="Fri, 25 Jun 2010 10:05:09 +0000"  >&lt;p&gt;&quot;HBase Snapshot Implementation Plan&quot; describes the classes and methods that are going to be created and modified to support snapshot. Go over the document with the class diagram. Any comments are welcome!&lt;/p&gt;</comment>
                            <comment id="12882779" author="stack" created="Sat, 26 Jun 2010 00:15:18 +0000"  >&lt;p&gt;I&apos;ll make a branch to host Li&apos;s work going forward.&lt;/p&gt;</comment>
                            <comment id="12882867" author="stack" created="Sat, 26 Jun 2010 17:26:10 +0000"  >&lt;p&gt;Thinking on it, Li, maybe its best if you work up in github and just log here when you do big pushes to your github repro? That way you are in charge of it and not dependent on laggard hbase committers getting your work into the branch?&lt;/p&gt;</comment>
                            <comment id="12883300" author="streamy" created="Mon, 28 Jun 2010 21:11:41 +0000"  >&lt;p&gt;Agree, github probably much better.  Would still be advisable to put patches onto reviewboard but I like idea of taking committers out of critical path.&lt;/p&gt;</comment>
                            <comment id="12883652" author="stack" created="Tue, 29 Jun 2010 18:48:46 +0000"  >&lt;p&gt;isSnapshot in HRI?&lt;/p&gt;

&lt;p&gt;In zk, writeZnode and readZnode ain&apos;t the best names for methods... what kinda znodes are these? (Jon says these already exist, that they are not your fault)&lt;/p&gt;

&lt;p&gt;Can you make a SnapShot class into which encapsulate all related to snapshotting rather than adding new data members to HMaster?  Maybe you do encapsulate it all into snapshotmonitor?  Maybe you do.  And all I&apos;m seeing are the HMaster methods you need to add.&lt;/p&gt;

&lt;p&gt;Can you call RSSnapshotHandler just SnapshotHandler?&lt;/p&gt;

&lt;p&gt;Will keeping snapshot data in .META. work?  .META. is by region but regions are deleted after a split but you want your snapshot to live beyond this?&lt;/p&gt;

&lt;p&gt;You probably don&apos;t need to support String overloads.&lt;/p&gt;

&lt;p&gt;Your implemenation plan looks excellent.&lt;/p&gt;</comment>
                            <comment id="12883779" author="lichongxin" created="Wed, 30 Jun 2010 03:25:52 +0000"  >&lt;blockquote&gt;&lt;p&gt;isSnapshot in HRI? &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Will keeping snapshot data in .META. work? .META. is by region but regions are deleted after a split but you want your snapshot to live beyond this?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Snapshot data, actually the reference count of hfiles, will be kept in .META. table, but in a different row than the original region row. So these reference count information will not be deleted after a split. Reference count information is saved here because it is also in a region centric view. Reference count information of a region&apos;s hfiles are kept together in a row in .META. no matter this hfile is still in use or has been archived. I described this in the Appendix A. of the document. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;In zk, writeZnode and readZnode ain&apos;t the best names for methods... what kinda znodes are these? (Jon says these already exist, that they are not your fault)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Actually the method names for snapshot are startSnapshotOnZK, abortSnapshotOnZK, registerRSForSnapshot in ZooKeeperWrapper. I put writeZnode and readZnode in the diagram because I think I can use them inside the above methods.&lt;br/&gt;
Do you think we should make writeZnode and readZnode private and just use them inside ZooKeeperWrapper?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Can you make a SnapShot class into which encapsulate all related to snapshotting rather than adding new data members to HMaster? Maybe you do encapsulate it all into snapshotmonitor?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I haven&apos;t figured out all the data members in the design. I will create a Snapsnot class to encapsulate the related fields if necessary during implementation.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Can you call RSSnapshotHandler just SnapshotHandler?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;sure&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;You probably don&apos;t need to support String overloads.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You mean methods in HBaseAdmin?&lt;/p&gt;

&lt;p&gt;A repository has been created in github with the initial content of hbase/trunk&lt;br/&gt;
&lt;a href=&quot;http://github.com/lichongxin/hbase-snapshot&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://github.com/lichongxin/hbase-snapshot&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12887387" author="lichongxin" created="Mon, 12 Jul 2010 14:46:45 +0000"  >&lt;p&gt;Some source code  have been committed to the github repository (&lt;a href=&quot;http://github.com/lichongxin/hbase-snapshot&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://github.com/lichongxin/hbase-snapshot&lt;/a&gt;) for the first two sub-tasks: start/monitor snapshot via ZooKeeper (HBase-2744) and create snapshot on master and region server (HBase-2745). Unit tests have not been ready and I&apos;m still working on it. See if there are any problems. Any comments are appreciated.&lt;/p&gt;</comment>
                            <comment id="12887983" author="stack" created="Tue, 13 Jul 2010 20:25:01 +0000"  >&lt;p&gt;I took a quick look Li.&lt;/p&gt;

&lt;p&gt;What is the SNAPSHOTINFO_FILE?  Is it name of file that we write snapshot data to?  Should it be named for the snapshot name?  Looks like you name the dir that holds this file for the snapshot name?   Do we need a directory?  Can we get away with just files that are named fo the snapshot name and that hold the snapshot data?&lt;/p&gt;

&lt;p&gt;You should add javadoc comments to your classes; say what the class is for (hmm... seems like you usually doo... just the first few in this commit seem to be missing them... they are there for the others).&lt;/p&gt;

&lt;p&gt;So far, it looks great.  Keep up the good work.  Tests next I&apos;d say.&lt;/p&gt;
</comment>
                            <comment id="12894369" author="hbasereviewboard" created="Sun, 1 Aug 2010 10:57:19 +0000"  >&lt;p&gt;Message from: &quot;Chongxin Li&quot; &amp;lt;lichongxin@zju.edu.cn&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This patch includes the first three sub-tasks of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-50&quot; title=&quot;Snapshot of table&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-50&quot;&gt;&lt;del&gt;HBASE-50&lt;/del&gt;&lt;/a&gt;:&lt;br/&gt;
1. Start and monitor the creation of snapshot via ZooKeeper&lt;br/&gt;
2. Create snapshot of an HBase table&lt;br/&gt;
3. Some existing functions of HBase are modified to support snapshot&lt;/p&gt;

&lt;p&gt;Currently snapshots can be created as expected, but can not be restored or deleted yet&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-50&quot; title=&quot;Snapshot of table&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-50&quot;&gt;&lt;del&gt;HBASE-50&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/HBASE-50&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/HBASE-50&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/HConstants.java c77ebf5 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HRegionInfo.java ee94690 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HSnapshotDescriptor.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 0d57270 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/TablePartialOpenException.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 8b01aa0 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/Reference.java 219203c &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HBaseRPCProtocolVersion.java d4bcbed &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HMasterInterface.java bd48a4b &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/BaseScanner.java 69eab39 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/HMaster.java e4bd30d &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/LogsCleaner.java 9d1a8b8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/SnapshotLogCleaner.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/SnapshotMonitor.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/TableDelete.java 1153e62 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/TableSnapshot.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 6dc41a4 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 6a54736 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/SnapshotThread.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java ae9e190 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java 757a50c &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/ZKSnapshotWatcher.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java 9593286 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/replication/master/ReplicationLogCleaner.java 4d4b00a &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/FSUtils.java 5cf3481 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperWrapper.java 3827fa5 &lt;br/&gt;
  src/main/resources/hbase-default.xml b73f0ff &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java 4d09fe9 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/master/TestSnapshot.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/master/TestSnapshotFailure.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java 34b8044 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java 98bd3e5 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionSnapshot.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestZKSnapshotWatcher.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.cloudera.org/r/467/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Unit tests and integration tests with mini cluster passed.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Chongxin&lt;/p&gt;

</comment>
                            <comment id="12894706" author="hbasereviewboard" created="Mon, 2 Aug 2010 20:53:49 +0000"  >&lt;p&gt;Message from: &quot;Todd Lipcon&quot; &amp;lt;todd@cloudera.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/#review618&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#review618&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;looks pretty good! I didn&apos;t et a chance to look through the test cases in detail, I&apos;ll try to look them over some more later this week.&lt;/p&gt;


&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2293&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2293&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    since we also have a &quot;log archive dir&quot; somewhere, should specify this a little more - this is archived HFiles that are still referenced by snapshots?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HSnapshotDescriptor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2294&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2294&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    license&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HSnapshotDescriptor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2295&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2295&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    no need for @param javadoc if there is no actual description attached. same thing below in a few places&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HSnapshotDescriptor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2296&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2296&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    why not System.currentTimeMillis?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HSnapshotDescriptor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2297&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2297&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    empty @return&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HSnapshotDescriptor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2298&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2298&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    since we&apos;re using the snapshot name as a directory name in HDFS, it has to be a UTF8 string, so why not just keep it as a String above too?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/TablePartialOpenException.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2299&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2299&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    no need for this javadoc (it&apos;s obvious)&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/TablePartialOpenException.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2300&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2300&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    same with this one&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2301&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2301&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    add &quot;TODO&quot; to this comment&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/io/Reference.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2302&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2302&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    to keep compatibility with current storefiles, &quot;entire&quot; should be value 2, and bottom should be 0&lt;/p&gt;

&lt;p&gt;    while we&apos;re at it, maybe rename these to be all caps - Range.TOP, Range.BOTTOM, etc&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/BaseScanner.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2303&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2303&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    no need to check size() - iterating the empty array should be fine&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/BaseScanner.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2304&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2304&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    if we crash between step 1 and 2, we orphan the archived file. Instead, we can do the delete first (ignoring failure if it doesn&apos;t exist) and then update META.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2305&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2305&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    you can just call mkdirs, I think, and it won&apos;t fail if it already exists&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2306&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2306&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    should this be an exception, rather than a result code? ie is it normal to fail?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2309&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2309&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    do we have a race here? what if the table gets enabled while the snapshot is being processed? it seems we need some locking here around table status and snapshot modification&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2311&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2311&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    shouldn&apos;t we rethrow in this error case? and in the above error case? ie these should be clauses like:&lt;/p&gt;

&lt;p&gt;    boolean success=false;&lt;br/&gt;
    try &lt;/p&gt;
{
      ... make snapshot ...
      success = true;
    }
&lt;p&gt; finally {&lt;br/&gt;
      if (!success) &lt;/p&gt;
{
        deleteSnapshot();
      }
&lt;p&gt;    }&lt;/p&gt;




&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2313&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2313&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    would it be problematic to create a partially written snapshotinfo file? or would it get cleaned up at a higher layer?&lt;/p&gt;

&lt;p&gt;    (perhaps worth creating snapshotinfo.tmp, then atomically rename it to snapshotinfo if it writes correctly)&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/SnapshotLogCleaner.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2314&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2314&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    license&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/SnapshotLogCleaner.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2315&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2315&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    worth noting that this class is not thread-safe? I don&apos;t know if these classes need to be thread safe, but you&apos;re using an unsynchronized hashset. Also, since refreshHLogsAndSearch clears hlogs before re-adding stuff, it needs to be synchronized more than just using a synchronized collection.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/SnapshotLogCleaner.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2317&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2317&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    do we have a race here between the listStatus and creating a snapshot?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/SnapshotLogCleaner.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2316&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2316&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    document that it may be null, and what null means? in fact, do we ever call this with null? it doesn&apos;t look like it.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/SnapshotLogCleaner.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2318&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2318&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    do we really want to swallow this IOE?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/SnapshotMonitor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2321&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2321&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    this is basically a singleton per-master, right? not per-snapshot? ie this is created at master startup and destroyed at master shutdown, and can coordinate multiple snapshots over its lifetime? would be good to document how this fits into the overall design, and perhaps refactor into one part that is master-global and another part that is created once per-snapshot.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/SnapshotMonitor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2331&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2331&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    needs to be volatile - waitForFinish accesses this outside of synchronization&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/SnapshotMonitor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2319&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2319&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    what is this mutex? better to name it based on what objects it synchronizes, and also use new Object() instead of new Integer(0)&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/SnapshotMonitor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2320&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2320&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    are you sure this is the way we name HMaster&apos;s ZKW instance? can we just grab the existing zkWrapper instance out of the master object?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/SnapshotMonitor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2322&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2322&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    what&apos;s the synchronization story here? who calls this method?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/SnapshotMonitor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2323&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2323&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    useless doc&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/SnapshotMonitor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2325&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2325&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    better to just do something like:&lt;/p&gt;

&lt;p&gt;    if (!mkdirs(...)) &lt;/p&gt;
{
      throw IOE(&quot;could not create&quot;)
    }



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/SnapshotMonitor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2324&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2324&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    include path or snapshot name in exception msg&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/SnapshotMonitor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2328&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2328&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    does ZKW automatically re-watch the nodes for you, here?&lt;/p&gt;

&lt;p&gt;    Also, how does this interact with region server failure? We just assume that the snapshot will timeout and abort, instead of proactively detecting?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/SnapshotMonitor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2326&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2326&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    add a LOG.debug perhaps for this case - it seems rare that we&apos;d have the correct count of servers but be missing one&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/SnapshotMonitor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2327&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2327&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    assert that we&apos;re in ALLREADY state here?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/SnapshotMonitor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2329&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2329&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    log at least?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/SnapshotMonitor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2330&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2330&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    this should probably be rethrown?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/SnapshotMonitor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2332&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2332&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    consider rename to M_ALL_RS_READY and M_ALL_RS_FINISHED for clarity&lt;/p&gt;

&lt;p&gt;    also, what is M?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/SnapshotMonitor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2333&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2333&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    rename to M_RS_READY and M_RS_FINISHED?&lt;br/&gt;
    Should these RS-specific ones be in a separate enum? GlobalSnapshotStatus vs RSSnapshotStatus?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/TableSnapshot.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2334&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2334&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    check return value of mkdirs instead&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/TableSnapshot.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2335&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2335&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    info level instead, perhaps? seems like a common issue given we&apos;re very flaky about region enable status currently.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/TableSnapshot.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2336&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2336&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    is there a process that scans for cases where the reference count has gotten out of sync?&lt;br/&gt;
    I&apos;m worried about a case where a snapshot is half-done, and then it fails, so the snapshot is considered aborted, but we never clean up the references because META has been incremented.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2337&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2337&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    update message to include snapshot case&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2338&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2338&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    rather than returning booleans, it might be better to throw back an exception to indicate error - this way the snapshot coordinator can actually show the reason for the failed snapshot, instead of forcing the user to grep all of the RS logs.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2339&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2339&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    what happens if the snapshot coordinator dies before completing the snapshot? the region is left permanently in snapshot mode?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2340&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2340&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    useless doc&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2341&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2341&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    check return value of mkdirs instead of separately calling exists&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2342&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2342&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    see above - just call fs.mkdirs&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2343&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2343&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    this code is duplicated from the master-driven snapshot - perhaps it can be factored out somewhere&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2344&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2344&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    this code is also duplicated&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2345&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2345&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    in this case, though, we&apos;ve already called startSnapshot on some other regions - is this problematic?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2346&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2346&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    missing &quot; &quot; before &quot;on RS&quot;&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2348&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2348&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    at this point don&apos;t we have to wait for the snapshot coordinator to &quot;commit&quot; the snapshot?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2347&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2347&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    !regionsToBackup.isEmpty()&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2349&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2349&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    &quot;on RS&quot; -&amp;gt; &quot; on RS&quot; (space)&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2350&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2350&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    perhaps write to a tmp file then move into place, so it&apos;s atomic&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2351&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2351&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    this seems prone to collision if it&apos;s multithreaded, since the exists check and the use of the filename aren&apos;t atomic&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/ZKSnapshotWatcher.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2352&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2352&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    since createZNodeIfNotExists already does existance check, you don&apos;t need the .exists above&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/ZKSnapshotWatcher.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2353&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2353&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    does ZKWatcher automatically re-watch for you?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/ZKSnapshotWatcher.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2354&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2354&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    should actually wait for the snapshotThread to exit here - otherwise maybe an aborting one is still doing some work, which might overlap with the next one&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/util/FSUtils.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2355&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2355&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    more examples of checking mkdirs&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/util/FSUtils.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2356&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2356&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    useless javadoc&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperWrapper.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2357&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2357&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    throw exceptions instead of returning false?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperWrapper.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2358&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2358&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    throw exceptions instead of returning false&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperWrapper.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2359&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2359&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    throw exceptions to user&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperWrapper.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2360&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2360&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    these checks are inherently racy&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/master/TestSnapshot.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2361&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2361&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    license&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/master/TestSnapshotFailure.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2362&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2362&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    license&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionSnapshot.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2363&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2363&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    license&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Todd&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12894937" author="hbasereviewboard" created="Tue, 3 Aug 2010 17:01:20 +0000"  >&lt;p&gt;Message from: &quot;Ted Yu&quot; &amp;lt;ted_yu@yahoo.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/#review631&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#review631&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/SnapshotMonitor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2373&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2373&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I think this should be (retries == 4) for 3 retries&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12896498" author="hbasereviewboard" created="Mon, 9 Aug 2010 10:56:15 +0000"  >&lt;p&gt;Message from: &quot;Chongxin Li&quot; &amp;lt;lichongxin@zju.edu.cn&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2010-08-09 03:52:11.875655)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Quite a lot of changes have been made according Todd&apos;s review, here are some major ones:&lt;/p&gt;

&lt;p&gt;1. Refactor SnapshotMonitor into one part that is master-global and another part that is created once per-snapshot (SnapshotTracker). &lt;br/&gt;
2. Catch exceptions in HMaster.snapshot and clean up the snapshot if exceptions occur.&lt;br/&gt;
3. Always quit snapshot mode for regions no matter whether the snapshot is created successfully on RS.&lt;br/&gt;
4. Add a mechanism to check and synchronize the reference count in META with the number of reference files in BaseScanner.&lt;br/&gt;
5. Add snapshot operations: DeleteSnapshot, RestoreSnapshot and corresponding tests (in TestAdmin).&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This patch includes the first three sub-tasks of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-50&quot; title=&quot;Snapshot of table&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-50&quot;&gt;&lt;del&gt;HBASE-50&lt;/del&gt;&lt;/a&gt;:&lt;br/&gt;
1. Start and monitor the creation of snapshot via ZooKeeper&lt;br/&gt;
2. Create snapshot of an HBase table&lt;br/&gt;
3. Some existing functions of HBase are modified to support snapshot&lt;/p&gt;

&lt;p&gt;Currently snapshots can be created as expected, but can not be restored or deleted yet&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-50&quot; title=&quot;Snapshot of table&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-50&quot;&gt;&lt;del&gt;HBASE-50&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/HBASE-50&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/HBASE-50&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/HConstants.java c77ebf5 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HRegionInfo.java ee94690 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HSnapshotDescriptor.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 0d57270 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/SnapshotExistsException.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/TablePartialOpenException.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 8b01aa0 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java ed12e7a &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java 85fde3a &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/Reference.java 219203c &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java b2de7e4 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HBaseRPCProtocolVersion.java d4bcbed &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HMasterInterface.java bd48a4b &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java 1183584 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/BaseScanner.java 69eab39 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/DeleteSnapshot.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/HMaster.java e4bd30d &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/LogsCleaner.java 9d1a8b8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/RestoreSnapshot.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/SnapshotLogCleaner.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/SnapshotMonitor.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/SnapshotOperation.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/SnapshotTracker.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/TableDelete.java 1153e62 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/TableSnapshot.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 6dc41a4 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 6a54736 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/SnapshotThread.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java ae9e190 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java 757a50c &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/ZKSnapshotWatcher.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java 9593286 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/replication/master/ReplicationLogCleaner.java 4d4b00a &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/FSUtils.java 5cf3481 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperWrapper.java 3827fa5 &lt;br/&gt;
  src/main/resources/hbase-default.xml b73f0ff &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java 4d09fe9 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java c9b78b9 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/master/TestSnapshot.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/master/TestSnapshotFailure.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java 34b8044 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java 98bd3e5 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionSnapshot.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java 38ef520 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestZKSnapshotWatcher.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.cloudera.org/r/467/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Unit tests and integration tests with mini cluster passed.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Chongxin&lt;/p&gt;

</comment>
                            <comment id="12896515" author="hbasereviewboard" created="Mon, 9 Aug 2010 12:11:54 +0000"  >&lt;p&gt;Message from: &quot;Chongxin Li&quot; &amp;lt;lichongxin@zju.edu.cn&amp;gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-02 13:41:35, Todd Lipcon wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/SnapshotLogCleaner.java, line 22&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/2/?file=4140#file4140line22&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/2/?file=4140#file4140line22&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     worth noting that this class is not thread-safe? I don&apos;t know if these classes need to be thread safe, but you&apos;re using an unsynchronized hashset. Also, since refreshHLogsAndSearch clears hlogs before re-adding stuff, it needs to be synchronized more than just using a synchronized collection.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This class is only instantiated once by LogsCleaner so it can be seen as a singleton per master.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-02 13:41:35, Todd Lipcon wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/SnapshotMonitor.java, line 116&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/2/?file=4141#file4141line116&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/2/?file=4141#file4141line116&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     does ZKW automatically re-watch the nodes for you, here?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Also, how does this interact with region server failure? We just assume that the snapshot will timeout and abort, instead of proactively detecting?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, the ZKW automatically re-watch the nodes.&lt;/p&gt;

&lt;p&gt;For snapshot abort, if any region server fails to perform the snapshot, it will remove corresponding ready and finished nodes under snapshot directory. This would notify the master snapshot failure and further abort snapshot on all region servers via ZK&lt;/p&gt;

&lt;p&gt;For snapshot timeout, it is not detected here. In method waitToFinish, the snapshot status is checked at a regular time (3 seconds here). If this method timeout, exception would be thrown and master will abort the snapshot over the cluster.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-02 13:41:35, Todd Lipcon wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/TableSnapshot.java, line 132&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/2/?file=4143#file4143line132&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/2/?file=4143#file4143line132&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     is there a process that scans for cases where the reference count has gotten out of sync?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I&apos;m worried about a case where a snapshot is half-done, and then it fails, so the snapshot is considered aborted, but we never clean up the references because META has been incremented.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is added in META scanner. Since scanning reference files is expensive, only a few regions are checked and synchronized in one scan. A last checking time is added so that all reference regions are guaranteed to be checked eventually&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-02 13:41:35, Todd Lipcon wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperWrapper.java, line 1403&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/2/?file=4153#file4153line1403&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/2/?file=4153#file4153line1403&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     these checks are inherently racy&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Then remove it?&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-02 13:41:35, Todd Lipcon wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java, line 585&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/2/?file=4148#file4148line585&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/2/?file=4148#file4148line585&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     this seems prone to collision if it&apos;s multithreaded, since the exists check and the use of the filename aren&apos;t atomic&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Then how to guarantee atomicity? This unique file name should be unique respecting existing files and files which are already compacted and deleted. Otherwise there might be a name collision in archive directory for HFiles&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-02 13:41:35, Todd Lipcon wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/HSnapshotDescriptor.java, line 132&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/2/?file=4130#file4130line132&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/2/?file=4130#file4130line132&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     since we&apos;re using the snapshot name as a directory name in HDFS, it has to be a UTF8 string, so why not just keep it as a String above too?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I implemented this class following HTableDescriptor. And even for table name, it is usually used as a byte array instead of String&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-02 13:41:35, Todd Lipcon wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/io/Reference.java, line 61&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/2/?file=4134#file4134line61&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/2/?file=4134#file4134line61&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     to keep compatibility with current storefiles, &quot;entire&quot; should be value 2, and bottom should be 0&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     while we&apos;re at it, maybe rename these to be all caps - Range.TOP, Range.BOTTOM, etc&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Have been renamed in the latest revision&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-02 13:41:35, Todd Lipcon wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/HMaster.java, lines 918-919&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/2/?file=4138#file4138line918&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/2/?file=4138#file4138line918&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     should this be an exception, rather than a result code? ie is it normal to fail?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Currently all results except ALl_FINISH would throw an exception.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-02 13:41:35, Todd Lipcon wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/HMaster.java, line 925&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/2/?file=4138#file4138line925&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/2/?file=4138#file4138line925&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     do we have a race here? what if the table gets enabled while the snapshot is being processed? it seems we need some locking here around table status and snapshot modification&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Why do we have a race here? I think we can&apos;t call HMaster.enableTable during the execution of this method, right? TableDelete is implemented in the same way, the table would not get enabled when it is being deleted, isn&apos;t it?&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-02 13:41:35, Todd Lipcon wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/SnapshotLogCleaner.java, line 47&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/2/?file=4140#file4140line47&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/2/?file=4140#file4140line47&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     do we have a race here between the listStatus and creating a snapshot?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;ve done this modification in the latest revision. SnapshotLogCleaner&apos;s cache is refreshed after listStatus of LogsCleaner and LogCleaner only cleans the archived logs, creating a new snapshot would not use the archived logs.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-02 13:41:35, Todd Lipcon wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/SnapshotLogCleaner.java, line 115&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/2/?file=4140#file4140line115&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/2/?file=4140#file4140line115&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     do we really want to swallow this IOE?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This implements a method from the interface. The method declaration does not throw any exceptions.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-02 13:41:35, Todd Lipcon wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/SnapshotMonitor.java, line 40&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/2/?file=4141#file4141line40&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/2/?file=4141#file4141line40&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     this is basically a singleton per-master, right? not per-snapshot? ie this is created at master startup and destroyed at master shutdown, and can coordinate multiple snapshots over its lifetime? would be good to document how this fits into the overall design, and perhaps refactor into one part that is master-global and another part that is created once per-snapshot.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This class has been refactored into two parts&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-02 13:41:35, Todd Lipcon wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/SnapshotMonitor.java, line 169&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/2/?file=4141#file4141line169&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/2/?file=4141#file4141line169&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     assert that we&apos;re in ALLREADY state here?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;right&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Chongxin&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/#review618&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#review618&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12896516" author="hbasereviewboard" created="Mon, 9 Aug 2010 12:14:30 +0000"  >&lt;p&gt;Message from: &quot;Chongxin Li&quot; &amp;lt;lichongxin@zju.edu.cn&amp;gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-03 09:58:06, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/SnapshotMonitor.java, line 246&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/2/?file=4141#file4141line246&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/2/?file=4141#file4141line246&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I think this should be (retries == 4) for 3 retries&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;this is actually not &apos;retry&apos; for snapshot, but check whether the snapshot is finished for three times (retries = 0, 1, 2).&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Chongxin&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/#review631&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#review631&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12896963" author="hbasereviewboard" created="Tue, 10 Aug 2010 17:13:11 +0000"  >&lt;p&gt;Message from: &quot;Ted Yu&quot; &amp;lt;ted_yu@yahoo.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/#review799&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#review799&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2704&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2704&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Do we need to abort TableSnapshot processing in case of exception ?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2707&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2707&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    If you create directory for failed snapshots, you can also add listFailedSnapshots() method.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2705&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2705&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    It would be better to move crashed snapshots into a separate directory under snapshot rootDir.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12896989" author="hbasereviewboard" created="Tue, 10 Aug 2010 17:59:16 +0000"  >&lt;p&gt;Message from: stack@duboce.net&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/#review800&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#review800&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;Made a start. More to follow.&lt;/p&gt;


&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2706&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2706&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Is this what I think it is?  We are keeping reference counts on a region up in .META.?  What about the question I had a while back on what happens when this row is deleted because the region has split and daughters no longer have reference to this parent?  Maybe this is something else.  I&apos;ll keep reading.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2708&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2708&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    ok.. I think I see whats going to happen (perhaps ignore previous comment)&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2709&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2709&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    How often is this called?  If it happens alot, it could add up &amp;#8211; be expensive.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2710&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2710&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Ok.  Good.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HSnapshotDescriptor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2711&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2711&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Drop the H.  Call it SnapshotDescriptor&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HSnapshotDescriptor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2712&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2712&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    If it is in under the snapshot directory maybe just call this file snapshotinfo? Drop the &apos;.&apos; prefix.  The &apos;.&apos; prefix is usually to demark &apos;special&apos; files we don&apos;t want to consider as part of normal operation.  In this case, we are under a snapshot directory, already outside of &apos;normal&apos; operation.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;stack&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12897042" author="hbasereviewboard" created="Tue, 10 Aug 2010 21:07:35 +0000"  >&lt;p&gt;Message from: &quot;Ted Yu&quot; &amp;lt;ted_yu@yahoo.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/#review803&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#review803&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/BaseScanner.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2713&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2713&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    IOException should be handled so that synchronization of reference counts isn&apos;t interrupted.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12897136" author="hbasereviewboard" created="Wed, 11 Aug 2010 04:46:38 +0000"  >&lt;p&gt;Message from: stack@duboce.net&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/#review823&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#review823&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;I reviewed the first page of diffs.  Will do second page tomorrow (This is a lovely big patch Li &amp;#8211; so far, so good... keep up the good work).&lt;/p&gt;


&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2750&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2750&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This is fine for an hbase that is a fresh install but what about case where the data has been migrated from an older hbase version; it won&apos;t have this column family in .META.  We should make a little migration script that adds it or on start of new version, check for it and if not present, create it.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2751&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2751&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    ditto&lt;/p&gt;




&lt;p&gt;src/main/java/org/apache/hadoop/hbase/TablePartialOpenException.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2752&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2752&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Maybe exception should be called TablePartiallyOpenException (Not important.  Minor).&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2753&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2753&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Can the snapshot name be empty and then we&apos;ll make one up?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2754&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2754&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Sure, why not. Its stored in the filesystem?  If so, for sure use same rule.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2755&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2755&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    For restore of the snapshot, do you use loadtable.rb or Todd&apos;s new bulkloading scripts?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2756&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2756&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This looks like an improvement.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/io/Reference.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2757&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2757&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whats this?  A different kind of reference?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/io/Reference.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2758&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2758&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Do you need to specify the ordinals?  Wont they be these numbers anyways? Or is it in case someone adds a new type of reference?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/io/Reference.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2759&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2759&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Why not just use the ordinal?  &lt;a href=&quot;http://download-llnw.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html#ordinal(&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://download-llnw.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html#ordinal(&lt;/a&gt;)  And serialize the int?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/io/Reference.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2760&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2760&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Hmm... is this good?  You are dropping some the region name when you toString.  Do we have to?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/io/Reference.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2765&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2765&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This could be a problem when fellas migrate old data to use this new hbase.  If there are References in the old data, then this deserialization will fail?  I&apos;m fine w/ you creating a new issue named something like &quot;Migration from 0.20.x hbase to 0.90&quot; and adding a note in there that we need to consider this little issue.  Better though would be if the data was able to migrate itself at runtime; i.e. recognize a boolean on the stream and then deserialize the old style into the new, etc.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/ipc/HBaseRPCProtocolVersion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2767&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2767&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Good.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2768&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2768&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Is this comment right?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/BaseScanner.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2770&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2770&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Why Random negative number?  Why not just leave it blank?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/BaseScanner.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2775&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2775&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    It&apos;d be cool breaking up these methods so they were static if possible so you could unit test them to ensure they do as advertised.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/DeleteSnapshot.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2776&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2776&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Check the result.  It may not have worked.  If it didn&apos;t deserves a WARN at least.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2777&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2777&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    You might want to check the returns from these methods.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2778&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2778&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Don&apos;t bother warning I&apos;d say.. just throw&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2779&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2779&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Yeah, just throw... that&apos;ll show in logs anyway (I believe)&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2780&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2780&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I&apos;m with Ted on this one. Need to do something about it else it&apos;ll annoy till the end of time.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/RestoreSnapshot.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2781&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2781&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This looks like it should be a general utility method (Not important)&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/RestoreSnapshot.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2782&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2782&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    If table were big, this could be prohibitively expensive?  A single-threaded copy of all of a tables data?  We could compliment this with MR-base restore, something that did the copy using MR?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/SnapshotLogCleaner.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2784&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2784&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This looks like a class that you could write a unit test for?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;stack&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12897143" author="hbasereviewboard" created="Wed, 11 Aug 2010 05:11:59 +0000"  >&lt;p&gt;Message from: &quot;Chongxin Li&quot; &amp;lt;lichongxin@zju.edu.cn&amp;gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-10 10:49:06, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/HSnapshotDescriptor.java, line 36&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/3/?file=6001#file6001line36&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/3/?file=6001#file6001line36&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Drop the H.  Call it SnapshotDescriptor&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Alright&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-10 10:49:06, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/HSnapshotDescriptor.java, line 41&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/3/?file=6001#file6001line41&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/3/?file=6001#file6001line41&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     If it is in under the snapshot directory maybe just call this file snapshotinfo? Drop the &apos;.&apos; prefix.  The &apos;.&apos; prefix is usually to demark &apos;special&apos; files we don&apos;t want to consider as part of normal operation.  In this case, we are under a snapshot directory, already outside of &apos;normal&apos; operation.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is named following .regioninfo&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-10 10:49:06, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/HRegionInfo.java, line 373&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/3/?file=6000#file6000line373&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/3/?file=6000#file6000line373&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     How often is this called?  If it happens alot, it could add up &amp;#8211; be expensive.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Not too much actually. This method is only called in BaseScanner when reference rows in META are checked and synchronized with the reference files. And right now there would be at most five rows to be checked in one scan of META.&lt;br/&gt;
There is no region info saved in each reference row. Thus reference row which is a combination of SNAPSHOT_PREFIX and region name is parsed to obtain the region name. That&apos;s why we need this method.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Chongxin&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/#review800&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#review800&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12897144" author="hbasereviewboard" created="Wed, 11 Aug 2010 05:13:42 +0000"  >&lt;p&gt;Message from: &quot;Chongxin Li&quot; &amp;lt;lichongxin@zju.edu.cn&amp;gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-10 10:04:44, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/HMaster.java, line 962&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/3/?file=6015#file6015line962&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/3/?file=6015#file6015line962&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     It would be better to move crashed snapshots into a separate directory under snapshot rootDir.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;If so, probably we need the above method.&lt;br/&gt;
But why move crashed snapshots into a separate directory? It would be pretty hard to recover a crashed snapshot.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-10 10:04:44, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/HMaster.java, line 945&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/3/?file=6015#file6015line945&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/3/?file=6015#file6015line945&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     If you create directory for failed snapshots, you can also add listFailedSnapshots() method.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Currently there is no directory for failed snapshots. If snapshot fails, it is cleaned up and exception is thrown to notify the user.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-10 10:04:44, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/HMaster.java, line 930&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/3/?file=6015#file6015line930&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/3/?file=6015#file6015line930&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Do we need to abort TableSnapshot processing in case of exception ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;For snapshot which is created by TableSnapshot, the table must be offline and snapshot is totally driven by the master. Region servers have no awareness of such a snapshot. So in case of exception, just clean up the failed snapshot. There is no need to abort the snapshot across the cluster.&lt;/p&gt;

&lt;p&gt;Regarding SnapshotMonitor, it only monitors the snapshots which are created across the region servers.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Chongxin&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/#review799&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#review799&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12897146" author="hbasereviewboard" created="Wed, 11 Aug 2010 05:24:37 +0000"  >&lt;p&gt;Message from: &quot;Ted Yu&quot; &amp;lt;ted_yu@yahoo.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/#review829&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#review829&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/io/Reference.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2793&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2793&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I think the current code is backward compatible. Boolean value of true is interpreted as TOP, value of false is BOTTOM.&lt;br/&gt;
    Since ENTIRE is introduced, this code is not backward compatible.&lt;/p&gt;

&lt;p&gt;    See:&lt;br/&gt;
    &lt;a href=&quot;http://download.oracle.com/javase/1.4.2/docs/api/java/io/DataOutput.html#writeBoolean%28boolean%29&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://download.oracle.com/javase/1.4.2/docs/api/java/io/DataOutput.html#writeBoolean%28boolean%29&lt;/a&gt;&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12897153" author="hbasereviewboard" created="Wed, 11 Aug 2010 05:51:18 +0000"  >&lt;p&gt;Message from: &quot;Ted Yu&quot; &amp;lt;ted_yu@yahoo.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/#review830&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#review830&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2794&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2794&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Moving crashed snapshots has two benefits:&lt;br/&gt;
    1. future call to listSnapshots() wouldn&apos;t encounter IOException.&lt;br/&gt;
    2. it&apos;s easy for user to get statistics on failed snapshots and analyze them&lt;/p&gt;

&lt;p&gt;    Or, if you log enough information when cleaning up the failed snapshot.&lt;/p&gt;



&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12897246" author="hbasereviewboard" created="Wed, 11 Aug 2010 13:04:20 +0000"  >&lt;p&gt;Message from: &quot;Chongxin Li&quot; &amp;lt;lichongxin@zju.edu.cn&amp;gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-10 22:40:31, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/HMaster.java, line 962&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/3/?file=6015#file6015line962&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/3/?file=6015#file6015line962&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Moving crashed snapshots has two benefits:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     1. future call to listSnapshots() wouldn&apos;t encounter IOException.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     2. it&apos;s easy for user to get statistics on failed snapshots and analyze them&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Or, if you log enough information when cleaning up the failed snapshot.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;What about snapshot fails when it is being created? Currently it is cleaned up if exception occurs in HMaster.snapshot. Should we also move it to this directory? Then for reference information sync, should we also take the reference files of these failed snapshots into account?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Chongxin&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/#review830&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#review830&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12897250" author="hbasereviewboard" created="Wed, 11 Aug 2010 13:12:34 +0000"  >&lt;p&gt;Message from: &quot;Chongxin Li&quot; &amp;lt;lichongxin@zju.edu.cn&amp;gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-10 21:34:40, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java, line 673&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/3/?file=6002#file6002line673&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/3/?file=6002#file6002line673&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This is fine for an hbase that is a fresh install but what about case where the data has been migrated from an older hbase version; it won&apos;t have this column family in .META.  We should make a little migration script that adds it or on start of new version, check for it and if not present, create it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s right. But AddColumn operation requires the table disabled to proceed, ROOT table can not be disabled once the system is started. Then how could we execute the migration script or check and create it on start of new version?&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-10 21:34:40, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java, line 899&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/3/?file=6005#file6005line899&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/3/?file=6005#file6005line899&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Can the snapshot name be empty and then we&apos;ll make one up?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;a default snapshot name? or a auto-generated snapshot name, such as creation time?&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-10 21:34:40, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java, line 951&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/3/?file=6005#file6005line951&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/3/?file=6005#file6005line951&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     For restore of the snapshot, do you use loadtable.rb or Todd&apos;s new bulkloading scripts?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Currently, NO...&lt;br/&gt;
Snapshot is composed of a list of log files and a bunch of reference files for HFiles of the table. These reference files have the same hierarchy as the original table and the name is in the format of &quot;1239384747630.tablename&quot;, where the front is the file name of the referred HFile and the latter is table name for snapshot. Thus to restore a snapshot, just copy reference files (which are just a few bytes) to the table dir, update the META and split the logs. When this table is enabled, the system know how to replay the commit edits and read such a reference file. Methods getReferredToFile, open in StoreFile are updated to deal with this kind of reference files for snapshots.&lt;/p&gt;

&lt;p&gt;At present, snapshot can only be restored to the table whose name is the same as the one for which the snapshot is created. That the old table with the same name must be deleted before restore a snapshot. That&apos;s what I do in unit test TestAdmin. Restoring snapshot to a different table name has a low priority. It has not been implemented yet.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-10 21:34:40, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/io/Reference.java, line 50&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/3/?file=6008#file6008line50&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/3/?file=6008#file6008line50&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Whats this?  A different kind of reference?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes.. This is the reference file in snapshot. It references an HFile of the original table.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-10 21:34:40, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/SnapshotLogCleaner.java, line 115&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/3/?file=6018#file6018line115&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/3/?file=6018#file6018line115&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This looks like a class that you could write a unit test for?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sure, I&apos;ll add another case in TestLogsCleaner.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-10 21:34:40, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/RestoreSnapshot.java, line 130&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/3/?file=6017#file6017line130&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/3/?file=6017#file6017line130&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     If table were big, this could be prohibitively expensive?  A single-threaded copy of all of a tables data?  We could compliment this with MR-base restore, something that did the copy using MR?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This method is only used in RestoreSnapshot, where reference files of snapshot are copied to the table dir. These reference files just contains a few bytes instead of the table&apos;s data. Snapshots share the table data with the original table and other snapshots. Do we still need a MR job?&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-10 21:34:40, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/BaseScanner.java, line 212&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/3/?file=6013#file6013line212&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/3/?file=6013#file6013line212&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Why Random negative number?  Why not just leave it blank?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;If a blank value is used as the key, there would be only one item at last if it is the first few times to scan the regions. Using random negative number indicates all these regions have not been scanned before. If it has been scanned, there would be a last checking time for it instead.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-10 21:34:40, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java, line 251&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/3/?file=6012#file6012line251&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/3/?file=6012#file6012line251&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Is this comment right?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I just renamed the Ranges to caps, comment was not changed.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-10 21:34:40, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/io/Reference.java, line 149&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/3/?file=6008#file6008line149&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/3/?file=6008#file6008line149&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Hmm... is this good?  You are dropping some the region name when you toString.  Do we have to?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This has not been changed. Just rename field &quot;region&quot; to &quot;range&quot;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-10 21:34:40, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/io/Reference.java, line 156&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/3/?file=6008#file6008line156&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/3/?file=6008#file6008line156&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This could be a problem when fellas migrate old data to use this new hbase.  If there are References in the old data, then this deserialization will fail?  I&apos;m fine w/ you creating a new issue named something like &quot;Migration from 0.20.x hbase to 0.90&quot; and adding a note in there that we need to consider this little issue.  Better though would be if the data was able to migrate itself at runtime; i.e. recognize a boolean on the stream and then deserialize the old style into the new, etc.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Actually I think it is fine to migrate old data to new hbase. Old references are serialized by DataOutput.writeBoolean(boolean), where value (byte)1 is written if the argument is true and value (byte)0 is written if argument is false. &lt;/p&gt;

&lt;p&gt;See (from Ted&apos;s review):&lt;br/&gt;
&lt;a href=&quot;http://download.oracle.com/javase/1.4.2/docs/api/java/io/DataOutput.html#writeBoolean%28boolean%29&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://download.oracle.com/javase/1.4.2/docs/api/java/io/DataOutput.html#writeBoolean%28boolean%29&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thus value (byte)1 was written if it is the top file region (isTopFileRegion is true). That is exactly the same as current value of TOP. For the same reason, this deserialization would work for the references in the old data, right? &lt;/p&gt;

&lt;p&gt;That&apos;s why we can not use ordinal of Enum and serialize the int value. The serialization size of this field would be different for the new data and old data if int value is used.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Chongxin&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/#review823&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#review823&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12897257" author="hbasereviewboard" created="Wed, 11 Aug 2010 13:17:06 +0000"  >&lt;p&gt;Message from: &quot;Chongxin Li&quot; &amp;lt;lichongxin@zju.edu.cn&amp;gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-10 22:20:23, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/io/Reference.java, line 156&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/3/?file=6008#file6008line156&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/3/?file=6008#file6008line156&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I think the current code is backward compatible. Boolean value of true is interpreted as TOP, value of false is BOTTOM.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Since ENTIRE is introduced, this code is not backward compatible.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     See:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;a href=&quot;http://download.oracle.com/javase/1.4.2/docs/api/java/io/DataOutput.html#writeBoolean%28boolean%29&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://download.oracle.com/javase/1.4.2/docs/api/java/io/DataOutput.html#writeBoolean%28boolean%29&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Why it is not backward compatible when ENTIRE is introduces? The value for ENTIRE is 2, different from the old written value of boolean.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Chongxin&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/#review829&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#review829&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12897382" author="hbasereviewboard" created="Wed, 11 Aug 2010 18:48:20 +0000"  >&lt;p&gt;Message from: stack@duboce.net&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/#review840&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#review840&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;This is looking really great Li.  If you can address the comments below in a new version, lets get this patch committed.&lt;/p&gt;

&lt;p&gt;Unfortunately, the master rewrite is going to change a bunch of the stuff that this patch depends on.  For example, BaseScanner is going away.  But, thats not your issue.&lt;/p&gt;

&lt;p&gt;What about scaling?  The only problematic issue I saw  was copy of storefiles on restore.  We should file an issue to do that via a MR job.&lt;/p&gt;


&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/SnapshotMonitor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2820&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2820&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    final&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/SnapshotMonitor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2821&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2821&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Why let this out?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/SnapshotMonitor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2822&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2822&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Want to remove this or enable the assertion?  One or the other I&apos;d say rather than this.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/SnapshotOperation.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2823&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2823&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This class looks good.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/SnapshotTracker.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2824&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2824&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Its a pity this class is named so.  We&apos;re about to bring in a new patch that redoes the zk stuff &amp;#8211; breaks it up into pieces each with a singular purpose; e.g. tracking root location or tracking meta region server &amp;#8211; and unfortunately the pattern is to name these purposed classes *Tracker.  There&apos;ll be a clash of this kinda Tracker and the new zk Trackers.  Not important, just saying in case you have another name in mind for this class.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/SnapshotTracker.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2825&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2825&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Can you make this a configuration? int maxRetries = Configuration.getInt(&quot;hbase.snapshot.retries&quot;, 3); or something?  It doesn&apos;t have to go into hbase-default.xml&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/SnapshotTracker.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2826&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2826&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Yeah, can the max retries be made into a data member rather than hardcoded everywhere in this class?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/TableSnapshot.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2827&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2827&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Looks like you need more explaination here?  This is a special case right where the table is offline and we&apos;re asked to make a snapshot of it?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/TableSnapshot.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2828&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2828&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Its not a backup, its creating references, right?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2829&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2829&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This looks like an improvement, making it static so can be used more generally.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2830&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2830&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    And flushing is disabled at this point too, right?  Compactions? (Good).&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2831&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2831&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    If snapshot fails, do we have to do cleanup?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2832&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2832&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Good&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2833&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2833&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This looks good.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/SnapshotThread.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2834&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2834&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Call this Snapshotter instead?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2835&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2835&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Do we have to do this down at the Store level?  Coud we move it up to Region or up to the RegionServer itself?  It already has an HTable instance.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2836&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2836&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Why you have to pass the reference?  It wasn&apos;t needed previously?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/util/FSUtils.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2837&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2837&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Does this stuff belong in here in this general utility class?  Should it be polluted with References?  Should this stuff be over in io package where the Reference is or static methods on Reference?&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/master/TestSnapshot.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2838&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2838&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    What about a test of restore from snapshot?  Is there one?  I dont&apos; see it?&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/master/TestSnapshotFailure.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2839&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2839&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Good test&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionSnapshot.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2840&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2840&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    There is getTestDir(final String subdirName) FYI&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionSnapshot.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2841&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2841&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Looks good.&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/TestZKSnapshotWatcher.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2842&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2842&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Great&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;stack&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12897474" author="hbasereviewboard" created="Wed, 11 Aug 2010 21:47:22 +0000"  >&lt;p&gt;Message from: &quot;Ted Yu&quot; &amp;lt;ted_yu@yahoo.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/#review846&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#review846&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/io/Reference.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2846&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2846&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I meant value of 2 cannot be correctly interpreted as boolean.&lt;/p&gt;




&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2847&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2847&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I think we need to limit the space consumed by failed snapshots.&lt;br/&gt;
    This issue can be addressed by a future JIRA.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12897609" author="hbasereviewboard" created="Thu, 12 Aug 2010 07:37:17 +0000"  >&lt;p&gt;Message from: &quot;Chongxin Li&quot; &amp;lt;lichongxin@zju.edu.cn&amp;gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-10 21:34:40, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/HMaster.java, line 234&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/3/?file=6015#file6015line234&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/3/?file=6015#file6015line234&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     You might want to check the returns from these methods.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Snapshot root dir might already exist, e.g. created in previous start up, then mkdirs would return false. But this is normal.&lt;/p&gt;

&lt;p&gt;Here are previous comments from Todd:&lt;br/&gt;
you can just call mkdirs, I think, and it won&apos;t fail if it already exists&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Chongxin&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/#review823&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#review823&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12897619" author="hbasereviewboard" created="Thu, 12 Aug 2010 07:57:17 +0000"  >&lt;p&gt;Message from: &quot;Chongxin Li&quot; &amp;lt;lichongxin@zju.edu.cn&amp;gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-11 11:32:27, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/SnapshotMonitor.java, line 166&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/3/?file=6019#file6019line166&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/3/?file=6019#file6019line166&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Want to remove this or enable the assertion?  One or the other I&apos;d say rather than this.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;remove it&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-11 11:32:27, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/SnapshotTracker.java, line 1&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/3/?file=6021#file6021line1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/3/?file=6021#file6021line1&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Its a pity this class is named so.  We&apos;re about to bring in a new patch that redoes the zk stuff &amp;#8211; breaks it up into pieces each with a singular purpose; e.g. tracking root location or tracking meta region server &amp;#8211; and unfortunately the pattern is to name these purposed classes *Tracker.  There&apos;ll be a clash of this kinda Tracker and the new zk Trackers.  Not important, just saying in case you have another name in mind for this class.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;ll think about it. Any suggestion?&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-11 11:32:27, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java, line 2288&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/3/?file=6024#file6024line2288&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/3/?file=6024#file6024line2288&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     And flushing is disabled at this point too, right?  Compactions? (Good).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;yes, flushing and compaction are disabled when snapshot.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-11 11:32:27, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/regionserver/Store.java, line 944&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/3/?file=6027#file6027line944&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/3/?file=6027#file6027line944&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Do we have to do this down at the Store level?  Coud we move it up to Region or up to the RegionServer itself?  It already has an HTable instance.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This method is only used to delete old store files after compaction, is it appropriate to move it to Region?&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-11 11:32:27, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/test/java/org/apache/hadoop/hbase/master/TestSnapshot.java, line 382&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/3/?file=6037#file6037line382&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/3/?file=6037#file6037line382&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     What about a test of restore from snapshot?  Is there one?  I dont&apos; see it?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It&apos;s already in TestAdmin&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-11 11:32:27, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/util/FSUtils.java, line 713&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/3/?file=6032#file6032line713&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/3/?file=6032#file6032line713&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Does this stuff belong in here in this general utility class?  Should it be polluted with References?  Should this stuff be over in io package where the Reference is or static methods on Reference?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;OK, I&apos;ll move it to Reference&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-11 11:32:27, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java, line 267&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/3/?file=6028#file6028line267&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/3/?file=6028#file6028line267&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Why you have to pass the reference?  It wasn&apos;t needed previously?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Previously there is only one type of reference file, i.e. reference after split. But right now there are another type of reference file for snapshot. We need to know the reference type to get the referred to file. &lt;/p&gt;

&lt;p&gt;This is used for table restored from snapshot.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-11 11:32:27, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java, line 2355&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/3/?file=6024#file6024line2355&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/3/?file=6024#file6024line2355&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     If snapshot fails, do we have to do cleanup?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;HRegions just quit the snapshot mode if fails. The master would be notified with failure and do the clean up work for the whole snapshot.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Chongxin&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/#review840&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#review840&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12897660" author="hbasereviewboard" created="Thu, 12 Aug 2010 09:56:00 +0000"  >&lt;p&gt;Message from: &quot;Chongxin Li&quot; &amp;lt;lichongxin@zju.edu.cn&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2010-08-12 02:43:42.872855)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This patch includes the first three sub-tasks of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-50&quot; title=&quot;Snapshot of table&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-50&quot;&gt;&lt;del&gt;HBASE-50&lt;/del&gt;&lt;/a&gt;:&lt;br/&gt;
1. Start and monitor the creation of snapshot via ZooKeeper&lt;br/&gt;
2. Create snapshot of an HBase table&lt;br/&gt;
3. Some existing functions of HBase are modified to support snapshot&lt;/p&gt;

&lt;p&gt;Currently snapshots can be created as expected, but can not be restored or deleted yet&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-50&quot; title=&quot;Snapshot of table&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-50&quot;&gt;&lt;del&gt;HBASE-50&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/HBASE-50&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/HBASE-50&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/HConstants.java c77ebf5 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HRegionInfo.java ee94690 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 0d57270 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/SnapshotDescriptor.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/SnapshotExistsException.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/TablePartiallyOpenException.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 8b01aa0 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java ed12e7a &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java 85fde3a &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/Reference.java 219203c &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java b2de7e4 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HBaseRPCProtocolVersion.java d4bcbed &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HMasterInterface.java bd48a4b &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java 1183584 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/BaseScanner.java 69eab39 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/DeleteSnapshot.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/HMaster.java e4bd30d &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/LogsCleaner.java 9d1a8b8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/RestoreSnapshot.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/SnapshotLogCleaner.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/SnapshotMonitor.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/SnapshotOperation.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/SnapshotTracker.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/TableDelete.java 1153e62 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/TableSnapshot.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 6dc41a4 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 6a54736 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Snapshotter.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java ae9e190 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java 757a50c &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/ZKSnapshotWatcher.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java 9593286 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/replication/master/ReplicationLogCleaner.java 4d4b00a &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/FSUtils.java 5cf3481 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperWrapper.java 3827fa5 &lt;br/&gt;
  src/main/resources/hbase-default.xml b73f0ff &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java 4d09fe9 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java c9b78b9 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/master/TestLogsCleaner.java 8b7f60f &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/master/TestSnapshot.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/master/TestSnapshotFailure.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java 34b8044 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java 98bd3e5 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionSnapshot.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java 38ef520 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestZKSnapshotWatcher.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.cloudera.org/r/467/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Unit tests and integration tests with mini cluster passed.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Chongxin&lt;/p&gt;

</comment>
                            <comment id="12897666" author="hbasereviewboard" created="Thu, 12 Aug 2010 10:04:55 +0000"  >&lt;p&gt;Message from: &quot;Ted Yu&quot; &amp;lt;ted_yu@yahoo.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/#review869&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#review869&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/SnapshotTracker.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2875&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2875&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    How about SnapshotWatcher ?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2874&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2874&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I think putting this in Region is good.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2876&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2876&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Can we get to hbase root directly ?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12897732" author="hbasereviewboard" created="Thu, 12 Aug 2010 13:02:20 +0000"  >&lt;p&gt;Message from: &quot;Chongxin Li&quot; &amp;lt;lichongxin@zju.edu.cn&amp;gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-12 02:53:06, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/SnapshotTracker.java, line 1&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/3/?file=6021#file6021line1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/3/?file=6021#file6021line1&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     How about SnapshotWatcher ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Will it sound like this class implement the Watcher interface of ZK?&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-12 02:53:06, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java, line 283&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/3/?file=6028#file6028line283&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/3/?file=6028#file6028line283&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Can we get to hbase root directly ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Since this method is static, we probably need another parameter for root directory?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Chongxin&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/#review869&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#review869&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12897735" author="hbasereviewboard" created="Thu, 12 Aug 2010 13:05:05 +0000"  >&lt;p&gt;Message from: &quot;Chongxin Li&quot; &amp;lt;lichongxin@zju.edu.cn&amp;gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-10 21:34:40, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java, line 673&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/3/?file=6002#file6002line673&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/3/?file=6002#file6002line673&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This is fine for an hbase that is a fresh install but what about case where the data has been migrated from an older hbase version; it won&apos;t have this column family in .META.  We should make a little migration script that adds it or on start of new version, check for it and if not present, create it.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Chongxin Li wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;That&apos;s right. But AddColumn operation requires the table disabled to proceed, ROOT table can not be disabled once the system is started. Then how could we execute the migration script or check and create it on start of new version?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This can be done with a script when HBase is shutdown. The script scans the root region with MetaUtils and add the column family SNAPSHOT to .META. table?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Chongxin&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/#review823&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#review823&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12897854" author="hbasereviewboard" created="Thu, 12 Aug 2010 17:41:33 +0000"  >&lt;p&gt;Message from: &quot;Ted Yu&quot; &amp;lt;ted_yu@yahoo.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/#review874&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#review874&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/BaseScanner.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2888&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2888&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Check return value.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/DeleteSnapshot.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2887&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2887&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should return value be checked ?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/DeleteSnapshot.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2886&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2886&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Is there more to be done here ?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12898127" author="hbasereviewboard" created="Fri, 13 Aug 2010 08:06:36 +0000"  >&lt;p&gt;Message from: &quot;Chongxin Li&quot; &amp;lt;lichongxin@zju.edu.cn&amp;gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-12 10:33:25, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/DeleteSnapshot.java, line 98&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/4/?file=6589#file6589line98&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/4/?file=6589#file6589line98&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Is there more to be done here ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Deleting the region dir?&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-08-12 10:33:25, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/DeleteSnapshot.java, line 94&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/diff/4/?file=6589#file6589line94&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff/4/?file=6589#file6589line94&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Should return value be checked ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Deleting the snapshot directory at last would delete all snapshot files anyway. Do we still have to check the return value? What if the return value if false, just log it?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Chongxin&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/#review874&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#review874&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12898203" author="hbasereviewboard" created="Fri, 13 Aug 2010 12:32:00 +0000"  >&lt;p&gt;Message from: &quot;Ted Yu&quot; &amp;lt;ted_yu@yahoo.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/#review897&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#review897&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/DeleteSnapshot.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2925&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2925&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    We should log if we fail to delete.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/DeleteSnapshot.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2924&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2924&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Yes.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12898548" author="hbasereviewboard" created="Sat, 14 Aug 2010 08:44:38 +0000"  >&lt;p&gt;Message from: &quot;Chongxin Li&quot; &amp;lt;lichongxin@zju.edu.cn&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2010-08-14 01:30:00.941083)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;1. Update HMaster to check and add the snapshot family for META (with MetaUtils) if it does not exist when the cluster is started. This is used for the data which has been migrated from an older hbase version.&lt;br/&gt;
2. Check the return value of delete&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This patch includes the first three sub-tasks of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-50&quot; title=&quot;Snapshot of table&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-50&quot;&gt;&lt;del&gt;HBASE-50&lt;/del&gt;&lt;/a&gt;:&lt;br/&gt;
1. Start and monitor the creation of snapshot via ZooKeeper&lt;br/&gt;
2. Create snapshot of an HBase table&lt;br/&gt;
3. Some existing functions of HBase are modified to support snapshot&lt;/p&gt;

&lt;p&gt;Currently snapshots can be created as expected, but can not be restored or deleted yet&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-50&quot; title=&quot;Snapshot of table&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-50&quot;&gt;&lt;del&gt;HBASE-50&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/HBASE-50&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/HBASE-50&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/HConstants.java c77ebf5 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HRegionInfo.java ee94690 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 0d57270 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/SnapshotDescriptor.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/SnapshotExistsException.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/TablePartiallyOpenException.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 8b01aa0 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java ed12e7a &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java 85fde3a &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/Reference.java 219203c &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java b2de7e4 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HBaseRPCProtocolVersion.java d4bcbed &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HMasterInterface.java bd48a4b &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java 1183584 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/BaseScanner.java 69eab39 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/DeleteSnapshot.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/HMaster.java e4bd30d &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/LogsCleaner.java 9d1a8b8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/RestoreSnapshot.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/SnapshotLogCleaner.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/SnapshotMonitor.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/SnapshotOperation.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/SnapshotTracker.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/TableDelete.java 1153e62 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/TableSnapshot.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 6dc41a4 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 6a54736 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Snapshotter.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java ae9e190 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java 757a50c &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/ZKSnapshotWatcher.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java 9593286 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/replication/master/ReplicationLogCleaner.java 4d4b00a &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/FSUtils.java 5cf3481 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/MetaUtils.java 4481b12 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperWrapper.java 3827fa5 &lt;br/&gt;
  src/main/resources/hbase-default.xml b73f0ff &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java 4d09fe9 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java c9b78b9 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/master/TestLogsCleaner.java 8b7f60f &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/master/TestSnapshot.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/master/TestSnapshotFailure.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java 34b8044 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java 98bd3e5 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionSnapshot.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java 38ef520 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestZKSnapshotWatcher.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.cloudera.org/r/467/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Unit tests and integration tests with mini cluster passed.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Chongxin&lt;/p&gt;

</comment>
                            <comment id="12898550" author="hbasereviewboard" created="Sat, 14 Aug 2010 09:00:39 +0000"  >&lt;p&gt;Message from: &quot;Chongxin Li&quot; &amp;lt;lichongxin@zju.edu.cn&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/#review904&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#review904&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/util/MetaUtils.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment2942&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment2942&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Why set retries number to 1 here?&lt;br/&gt;
    Since I use MetaUtils in HMaster to scan root region when system is started, this would have a impact for other parts of the system. Is it OK to remove this?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Chongxin&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12899195" author="hbasereviewboard" created="Mon, 16 Aug 2010 23:52:16 +0000"  >&lt;p&gt;Message from: &quot;Ted Yu&quot; &amp;lt;ted_yu@yahoo.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/#review924&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#review924&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperWrapper.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment3015&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment3015&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should call currentThread().interrupt()&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperWrapper.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment3016&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment3016&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should call currentThread().interrupt()&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12899208" author="hbasereviewboard" created="Tue, 17 Aug 2010 00:29:12 +0000"  >&lt;p&gt;Message from: &quot;Ted Yu&quot; &amp;lt;ted_yu@yahoo.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/#review927&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#review927&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment3024&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment3024&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Write a script that calls this method.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12900319" author="hbasereviewboard" created="Thu, 19 Aug 2010 15:46:48 +0000"  >&lt;p&gt;Message from: &quot;Chongxin Li&quot; &amp;lt;lichongxin@zju.edu.cn&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/#review957&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#review957&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;1. Rename SnapshotTracker to SnapshotSentinel&lt;br/&gt;
2. Write a script (add_snapshot_family.rb) to add snapshot family for META and remove method HMaster.addSnapshotFamily. The script is not tested yet (how?)&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Chongxin&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12900321" author="hbasereviewboard" created="Thu, 19 Aug 2010 15:49:14 +0000"  >&lt;p&gt;Message from: &quot;Chongxin Li&quot; &amp;lt;lichongxin@zju.edu.cn&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2010-08-19 08:35:37.043957)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This patch includes the first three sub-tasks of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-50&quot; title=&quot;Snapshot of table&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-50&quot;&gt;&lt;del&gt;HBASE-50&lt;/del&gt;&lt;/a&gt;:&lt;br/&gt;
1. Start and monitor the creation of snapshot via ZooKeeper&lt;br/&gt;
2. Create snapshot of an HBase table&lt;br/&gt;
3. Some existing functions of HBase are modified to support snapshot&lt;/p&gt;

&lt;p&gt;Currently snapshots can be created as expected, but can not be restored or deleted yet&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-50&quot; title=&quot;Snapshot of table&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-50&quot;&gt;&lt;del&gt;HBASE-50&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/HBASE-50&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/HBASE-50&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  bin/add_snapshot_family.rb PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HConstants.java c77ebf5 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HRegionInfo.java ee94690 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 0d57270 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/SnapshotDescriptor.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/SnapshotExistsException.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/TablePartiallyOpenException.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 8b01aa0 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java ed12e7a &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java 85fde3a &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/Reference.java 219203c &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java b2de7e4 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HBaseRPCProtocolVersion.java d4bcbed &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HMasterInterface.java bd48a4b &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java 1183584 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/BaseScanner.java 69eab39 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/DeleteSnapshot.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/HMaster.java e4bd30d &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/LogsCleaner.java 9d1a8b8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/RestoreSnapshot.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/SnapshotLogCleaner.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/SnapshotMonitor.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/SnapshotOperation.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/SnapshotSentinel.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/TableDelete.java 1153e62 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/TableSnapshot.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 6dc41a4 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 6a54736 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Snapshotter.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java ae9e190 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java 757a50c &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/ZKSnapshotWatcher.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java 9593286 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/replication/master/ReplicationLogCleaner.java 4d4b00a &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/FSUtils.java 5cf3481 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperWrapper.java 3827fa5 &lt;br/&gt;
  src/main/resources/hbase-default.xml b73f0ff &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java 4d09fe9 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java c9b78b9 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/master/TestLogsCleaner.java 8b7f60f &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/master/TestSnapshot.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/master/TestSnapshotFailure.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java 34b8044 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java 98bd3e5 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionSnapshot.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java 38ef520 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestZKSnapshotWatcher.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.cloudera.org/r/467/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Unit tests and integration tests with mini cluster passed.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Chongxin&lt;/p&gt;

</comment>
                            <comment id="12901206" author="hbasereviewboard" created="Sun, 22 Aug 2010 20:27:17 +0000"  >&lt;p&gt;Message from: &quot;Ted Yu&quot; &amp;lt;ted_yu@yahoo.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/#review995&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#review995&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;bin/add_snapshot_family.rb&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment3204&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment3204&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Please remove this comment.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/467/#comment3203&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/#comment3203&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should the archive directory be named &quot;.archive&quot; ?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12906486" author="hbasereviewboard" created="Mon, 6 Sep 2010 11:39:30 +0000"  >&lt;p&gt;Message from: &quot;Chongxin Li&quot; &amp;lt;lichongxin@zju.edu.cn&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/467/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2010-09-06 04:34:53.459404)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;

&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Add Mapreduce based export (ExportSnapshot) and import (ImportSnapshot) for snapshot, so that snapshot of an hbase table could be exported and imported to other data centers. Unit test (TestSnapshotExport) has passed.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This patch includes the first three sub-tasks of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-50&quot; title=&quot;Snapshot of table&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-50&quot;&gt;&lt;del&gt;HBASE-50&lt;/del&gt;&lt;/a&gt;:&lt;br/&gt;
1. Start and monitor the creation of snapshot via ZooKeeper&lt;br/&gt;
2. Create snapshot of an HBase table&lt;br/&gt;
3. Some existing functions of HBase are modified to support snapshot&lt;/p&gt;

&lt;p&gt;Currently snapshots can be created as expected, but can not be restored or deleted yet&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-50&quot; title=&quot;Snapshot of table&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-50&quot;&gt;&lt;del&gt;HBASE-50&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/HBASE-50&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/HBASE-50&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diff: &lt;a href=&quot;http://review.cloudera.org/r/467/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/467/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Unit tests and integration tests with mini cluster passed.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Chongxin&lt;/p&gt;

</comment>
                            <comment id="13232908" author="jesse_yates" created="Mon, 19 Mar 2012 21:06:41 +0000"  >&lt;p&gt;If no one is working on this, I&apos;d like to pick up shepherding in Chongxin&apos;s original patch (updating to trunk, completion of features, etc) into trunk.&lt;/p&gt;</comment>
                            <comment id="13233992" author="stack" created="Wed, 21 Mar 2012 00:46:19 +0000"  >&lt;p&gt;Go for it Jesse.  My guess is that a lot has changed since but basic notions should still hold.&lt;/p&gt;</comment>
                            <comment id="13234116" author="jesse_yates" created="Wed, 21 Mar 2012 05:26:12 +0000"  >&lt;p&gt;I&apos;ve been thinking about how to do this for a while (before reading the ticket) and came up with a pretty similar architecture - good to know I wasn&apos;t crazy. A bit bummed initially seeing how much Chongxin had gotten done, but going through his stuff it turns out I need to rewrite almost everything (smile) along with a couple tweaks here and there. &lt;/p&gt;

&lt;p&gt;I&apos;ll put up a doc with the architecture diffs (nothing major planned, mostly OO design stuff at the moment) when I get closer to done&lt;/p&gt;</comment>
                            <comment id="13240157" author="jesse_yates" created="Wed, 28 Mar 2012 04:29:56 +0000"  >&lt;p&gt;We had a meetup within a meetup at the HBase User Group meetup tonight to talk about the difficulties and next steps with snapshotting. The main takeaways were:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;exact time is inconsistent across a cluster (even with NTP) as we need millisecond exactness for point-in-time snapshots&lt;/li&gt;
	&lt;li&gt;two-phase commit where we block writes in the first phase (completes in a set timeout) seems the most reasonable approach for ensuring a fully consistent view&lt;/li&gt;
	&lt;li&gt;maybe fully consistent across the whole table isn&apos;t necessary, maybe per RS consistency within a window is acceptable
	&lt;ul&gt;
		&lt;li&gt;possibly achieved by scheduling a time for a snapshot sometime in the future in zk and letting each RS snapshot makes it &apos;close enough&apos;&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;zk triggered snapshots make it even harder to ensure timeout boundaries due to RS no hard guarantees on notifications and even then zk timeouts causing presence issues&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Even with all of this, I&apos;m planning the first pass to be zk based (until we decide that unavailability suffers too much) and with a simple two-phase, write-locking per involved region approach. We can probably iterate on that to bring down the latency.&lt;/p&gt;

&lt;p&gt;The main issue here is I don&apos;t see a way to ensure that in a snapshot, all RS take a snapshot &quot;now&quot; but still allow reading/writing on either side (pretty sure this is a CAP limitation). &lt;/p&gt;</comment>
                            <comment id="13240168" author="zhihyu@ebaysf.com" created="Wed, 28 Mar 2012 04:49:40 +0000"  >&lt;blockquote&gt;&lt;p&gt;maybe fully consistent across the whole table isn&apos;t necessary&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Can you explain more about the above use case ?&lt;/p&gt;

&lt;p&gt;This issue has more than 4 years&apos; trace and 6 sub-tasks.&lt;/p&gt;

&lt;p&gt;If we&apos;re not reusing much of Chongxin&apos;s code, we should put discussion into a new JIRA.&lt;/p&gt;</comment>
                            <comment id="13240625" author="jesse_yates" created="Wed, 28 Mar 2012 18:50:20 +0000"  >&lt;blockquote&gt;&lt;p&gt;maybe fully consistent across the whole table isn&apos;t necessary&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This was just something that has come up in multiple conversations - is full table, consistent snapshots necessary? The default answer seems to be &quot;yes, because that is what we get with mysql/postgres/oracle&quot;, with the implication that we &lt;em&gt;have to have it&lt;/em&gt; for production HBase. However, its inherently a different storage model and it may be that we just need to change the pointy-haired managers&apos; ideas of what&apos;s necessary. If instead we can say its is consistent view, per regionserver, at some point from 2:51:00 to 2:51:30 pm on friday, then we can save a lot of pain and can be done with &lt;em&gt;very little downtime&lt;/em&gt;, to the point where you can mask it in a &apos;slow request&apos;. If that isn&apos;t acceptable, then the only way I see to do it is to drop write availability while the snapshot is taking place (fastest region has to to wait on the slowest region to finish) to get the fully consistent view. &lt;/p&gt;

&lt;p&gt;No reason with the current design that we couldn&apos;t allow both, it would just be another flag to pass in while making the snapshot and really only touches about 5 lines of the guts of the implementation.&lt;/p&gt;

&lt;p&gt;Currently, we only guarantee row-level consistency. Getting into cross-RS consistency means we bump up against CAP and have to give up even more availability (for a fully consistent view, all RS needs to block writes, which could take as long as the timeout (30sec - 1min in the worst case) or slowest region  - whichever is faster, which in many cases is unacceptable). &lt;/p&gt;

&lt;p&gt;However, if you can take point-in-time within a window as acceptable (&quot;sloppy snapshot&quot;)  - maybe the window is thirty seconds - when each region blocks writes for the time each region takes to make the snapshot (max of maybe a few seconds as no data is being copied, but rather just a few references created and counts incremented) you keep availability high without really sacrificing any of the consistency guarantees we currently make. &lt;/p&gt;

&lt;p&gt;Clearly, this breaks the multi-put situation where two puts go to different servers but that is potentially acceptable since we don&apos;t make guarantees there either, just that on return, all of the puts have completed. Same problem as with doing any of the current backup solutions (replication not included). If you are worried about cross-RS transactions, you have to use something like Omid (or similar) to track transactions, and that system can then also decide when a snapshot is allowable to &lt;br/&gt;
ensure all parts of the multi-put complete.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;If we&apos;re not reusing much of Chongxin&apos;s code, we should put discussion into a new JIRA&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;A lot of the infrastructure we have has changed (eg. zookeeper utilities, locking on the RS), but the new features - reference counting, possibly importing/exporting snapshots, etc - will definitely be reused exactly or only slightly modified. So at 50/50 on what is kept and what is tossed, at least right now. &lt;/p&gt;

&lt;p&gt;We have also gone through like 3 different stops and starts on this ticket. I worry moving to a new ticket will cause even worse fragmentation, at least until the code being used doesn&apos;t even resemble Chongxin&apos;s &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13241515" author="zhihyu@ebaysf.com" created="Thu, 29 Mar 2012 19:01:06 +0000"  >&lt;p&gt;@Jesse:&lt;br/&gt;
When you create new review request on review board, leave Bugs field empty.&lt;br/&gt;
Thanks&lt;/p&gt;</comment>
                            <comment id="13279324" author="jesse_yates" created="Fri, 18 May 2012 23:18:08 +0000"  >&lt;p&gt;After moving up the code to the trunk, realized that the implementation has bascially completely changed except for a couple small classes. As such, I opened &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6055&quot; title=&quot;Offline Snapshots in HBase 0.96&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6055&quot;&gt;&lt;del&gt;HBASE-6055&lt;/del&gt;&lt;/a&gt; to track the rest of my progress. &lt;/p&gt;</comment>
                            <comment id="13286329" author="stack" created="Thu, 31 May 2012 05:17:55 +0000"  >&lt;p&gt;Should we close out this issue in favor of hbase-6055 Jesse?&lt;/p&gt;</comment>
                            <comment id="13286340" author="jesse_yates" created="Thu, 31 May 2012 05:36:29 +0000"  >&lt;p&gt;@stack: +1 I don&apos;t see a point in keeping this open, given the codebase divergence.&lt;/p&gt;</comment>
                            <comment id="13286348" author="stack" created="Thu, 31 May 2012 05:50:28 +0000"  >&lt;p&gt;Closing this issue, an old friend, because no long valid.  Its been superceded by hbase-6055.  I&apos;m sure we&apos;ll be back though.  A bunch of good discussion has gone on in here down through the years.&lt;/p&gt;</comment>
                            <comment id="13506217" author="jmhsieh" created="Thu, 29 Nov 2012 04:52:17 +0000"  >&lt;p&gt;During a jira scan, I found that all its subtasks were open, so I closed them.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12545774">HBASE-5547</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12398957">HDFS-233</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12538675">HDFS-2802</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310051">
                    <name>Supercedes</name>
                                                                <inwardlinks description="is superceded by">
                                        <issuelink>
            <issuekey id="12556488">HBASE-6055</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12446018" name="HBase Snapshot Design Report V2.pdf" size="55522" author="lichongxin" created="Tue, 1 Jun 2010 12:16:57 +0000"/>
                            <attachment id="12446965" name="HBase Snapshot Design Report V3.pdf" size="100472" author="lichongxin" created="Sun, 13 Jun 2010 02:11:39 +0000"/>
                            <attachment id="12448046" name="HBase Snapshot Implementation Plan.pdf" size="179861" author="lichongxin" created="Fri, 25 Jun 2010 10:05:09 +0000"/>
                            <attachment id="12448045" name="Snapshot Class Diagram.png" size="93379" author="lichongxin" created="Fri, 25 Jun 2010 09:57:44 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12467317">HBASE-2744</subtask>
                            <subtask id="12467318">HBASE-2745</subtask>
                            <subtask id="12467320">HBASE-2746</subtask>
                            <subtask id="12467321">HBASE-2747</subtask>
                            <subtask id="12467322">HBASE-2748</subtask>
                            <subtask id="12467323">HBASE-2749</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 29 Dec 2007 22:16:39 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31650</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 3 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0h3tz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>97883</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>Tags</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.96notable</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>