<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:40:19 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-29/HBASE-29.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-29] HStore#get and HStore#getFull may not return expected values by timestamp when there is more than one MapFile</title>
                <link>https://issues.apache.org/jira/browse/HBASE-29</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Ok, this one is a little tricky. Let&apos;s say that you write a row with some value without a timestamp, thus meaning right now. Then, the memcache gets flushed out to a MapFile. Then, you write another value to the same row, this time with a timestamp that is in the past, ie, before the &quot;now&quot; timestamp of the first put. &lt;/p&gt;

&lt;p&gt;Some time later, but before there is a compaction, if you do a get for this row, and only ask for a single version, you will logically be expecting the latest version of the cell, which you would assume would be the one written at &quot;now&quot; time. Instead, you will get the value written into the &quot;past&quot; cell, because even though it is tagged as having happened in the past, it actually &lt;b&gt;was written&lt;/b&gt; after the &quot;now&quot; cell, and thus when #get searches for satisfying values, it runs into the one most recently written first. &lt;/p&gt;

&lt;p&gt;The result of this problem is inconsistent data results. Note that this problem only ever exists when there&apos;s an uncompacted HStore, because during compaction, these cells will all get sorted into the correct order by timestamp and such. In a way, this actually makes the problem worse, because then you could easily get inconsistent results from HBase about the same (unchanged) row depending on whether there&apos;s been a flush/compaction.&lt;/p&gt;

&lt;p&gt;The only solution I can think of for this problem at the moment is to scan all the MapFiles and Memcache for possible results, sort them, and then select the desired number of versions off of the top. This is unfortunate because it means you never get the snazzy shortcircuit logic except within a single mapfile or memcache. &lt;/p&gt;</description>
                <environment></environment>
        <key id="12385472">HBASE-29</key>
            <summary>HStore#get and HStore#getFull may not return expected values by timestamp when there is more than one MapFile</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="6">Invalid</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="bryanduxbury">Bryan Duxbury</reporter>
                        <labels>
                    </labels>
                <created>Thu, 3 Jan 2008 01:08:29 +0000</created>
                <updated>Tue, 7 Sep 2010 22:25:16 +0000</updated>
                            <resolved>Tue, 7 Sep 2010 22:25:16 +0000</resolved>
                                    <version>0.1.2</version>
                    <version>0.2.0</version>
                                                    <component>Client</component>
                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="12558921" author="bryanduxbury" created="Tue, 15 Jan 2008 05:00:25 +0000"  >&lt;p&gt;This patch includes some new tests in TestGet2 to highlight this problem and fixes in HStore to take care of the issues.&lt;/p&gt;</comment>
                            <comment id="12559178" author="bryanduxbury" created="Tue, 15 Jan 2008 19:07:45 +0000"  >&lt;p&gt;This patch passes all the tests locally. &lt;/p&gt;</comment>
                            <comment id="12559179" author="bryanduxbury" created="Tue, 15 Jan 2008 19:07:59 +0000"  >&lt;p&gt;Trying hudson.&lt;/p&gt;</comment>
                            <comment id="12559215" author="stack" created="Tue, 15 Jan 2008 20:24:19 +0000"  >&lt;p&gt;Looking at the finalKey implementation, it looks like you think &apos;top&apos; is the first half of the file, the half w/ the lowest keys, rather than the half w/ the higher keys.&lt;/p&gt;</comment>
                            <comment id="12559408" author="hadoopqa" created="Wed, 16 Jan 2008 09:21:23 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
&lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12373187/2512-v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12373187/2512-v2.patch&lt;/a&gt;&lt;br/&gt;
against trunk revision r612314.&lt;/p&gt;

&lt;p&gt;    @author +1.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    javadoc +1.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    javac +1.  The applied patch does not generate any new compiler warnings.&lt;/p&gt;

&lt;p&gt;    findbugs +1.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    core tests +1.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    contrib tests -1.  The patch failed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1607/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1607/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1607/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1607/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle results: &lt;a href=&quot;http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1607/artifact/trunk/build/test/checkstyle-errors.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1607/artifact/trunk/build/test/checkstyle-errors.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1607/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1607/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12559562" author="stack" created="Wed, 16 Jan 2008 16:29:00 +0000"  >&lt;p&gt;Retrying against hudson.  Its unlikey this patch caused the TTMR failure &amp;#8211; looks to be problem going to hdfs &amp;#8211; but just in case...&lt;/p&gt;</comment>
                            <comment id="12559563" author="stack" created="Wed, 16 Jan 2008 16:29:14 +0000"  >&lt;p&gt;Retrying hudson.&lt;/p&gt;</comment>
                            <comment id="12559728" author="hadoopqa" created="Wed, 16 Jan 2008 23:07:10 +0000"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
&lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12373187/2512-v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12373187/2512-v2.patch&lt;/a&gt;&lt;br/&gt;
against trunk revision r612561.&lt;/p&gt;

&lt;p&gt;    @author +1.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    javadoc +1.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    javac +1.  The applied patch does not generate any new compiler warnings.&lt;/p&gt;

&lt;p&gt;    findbugs +1.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    core tests +1.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    contrib tests +1.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1615/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1615/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1615/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1615/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle results: &lt;a href=&quot;http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1615/artifact/trunk/build/test/checkstyle-errors.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1615/artifact/trunk/build/test/checkstyle-errors.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1615/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1615/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12559757" author="stack" created="Thu, 17 Jan 2008 00:20:18 +0000"  >&lt;p&gt;Patch looks good but its going to kill performance so I want to run basic PE test before committing just to see how much its going to cost us.&lt;/p&gt;

&lt;p&gt;Chatting w/ Bryan, scanners likely have same issue.  This patch doesn&apos;t address that.&lt;/p&gt;</comment>
                            <comment id="12560728" author="stack" created="Sat, 19 Jan 2008 20:51:42 +0000"  >&lt;p&gt;I ran the PE test.  Random reads rate is halved with this patch in place.  Lets discuss.  Of note, the patch has rotted; no longer applies against TRUNK.&lt;/p&gt;</comment>
                            <comment id="12560734" author="bryanduxbury" created="Sat, 19 Jan 2008 21:42:55 +0000"  >&lt;p&gt;I understand that the performance degrades as a result of this patch, but I&apos;m much more worried about the correctness of the data than the performance. Sure, it might make it faster to leave this out, but the first time someone happens to hit this problem, they&apos;ll go out of their minds trying to track it down.&lt;/p&gt;

&lt;p&gt;I think we can make some improvements that will make this patch a little faster. I will take another look and try to freshen up the patch.&lt;/p&gt;</comment>
                            <comment id="12561106" author="bryanduxbury" created="Mon, 21 Jan 2008 19:47:00 +0000"  >&lt;p&gt;Putting this off until later, as the performance hit is pretty substantial, and I think there might be a solution that gives us both performance and correctness.&lt;/p&gt;</comment>
                            <comment id="12565476" author="bryanduxbury" created="Mon, 4 Feb 2008 19:08:21 +0000"  >&lt;p&gt;Updated for new svn.&lt;/p&gt;</comment>
                            <comment id="12566301" author="bryanduxbury" created="Wed, 6 Feb 2008 19:46:29 +0000"  >&lt;p&gt;We&apos;re not going to use the latest patch, seeing as how the performance suffers so greatly, so I&apos;m cancelling it.&lt;/p&gt;</comment>
                            <comment id="12579569" author="bryanduxbury" created="Mon, 17 Mar 2008 19:41:38 +0000"  >&lt;p&gt;This issue might actually also be contributing to the trouble we&apos;re seeing in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-514&quot; title=&quot;table &amp;#39;does not exist&amp;#39; when it does&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-514&quot;&gt;&lt;del&gt;HBASE-514&lt;/del&gt;&lt;/a&gt;. If the memcache can give an answer, it will, and it will be taken as a definitive answer for the entire row, which isn&apos;t guaranteed to be the case, especially when regions are being reassigned and such. &lt;/p&gt;</comment>
                            <comment id="12581465" author="bryanduxbury" created="Mon, 24 Mar 2008 04:22:37 +0000"  >&lt;p&gt;I think we should make it a priority to get this fixed. Even if it performs worse, it&apos;s really unacceptable to give incorrect answers.&lt;/p&gt;

&lt;p&gt;However, I think there&apos;s a decent alternative to just getting slower wholesale. When we fixed getClosestBefore, we decided that the assumption would always be that getClosestRowBefore had to operate on a table where cells were always being added in ascending timestamp order, which at least made it perform acceptably. Clearly, this issue is about situations where that assumption isn&apos;t true. So, what I think we should do is make the default get and getRow methods return the answer that assumes the mapfiles don&apos;t have any inherent ordering, and then make new methods getAscending and getRowAscending (names could change?) that assume mapfiles are sorted ascending, and are faster as a result. &lt;/p&gt;

&lt;p&gt;With this approach, people can make the default choice of using get and getRow, pay the performance penalty, but get the right answer no matter what. Then, if people happen to have a use case that matches the always-ascending constraints, then they can just switch the method call fractionally and get the improved performance.&lt;/p&gt;</comment>
                            <comment id="12590497" author="stack" created="Fri, 18 Apr 2008 16:12:24 +0000"  >&lt;p&gt;Adding methods that return right answer when versions are not inserted in ascending order sounds good to me but would suggest that the default implementations do as they do now; we&apos;d add documentation that explicitly states how they work pointing at the new methods for applications to use if insert versions are not in ascending order.&lt;/p&gt;</comment>
                            <comment id="12602022" author="jimk" created="Tue, 3 Jun 2008 18:48:31 +0000"  >&lt;p&gt;Does this need to get fixed for 0.2.0? &lt;/p&gt;

&lt;p&gt;As Hypertable doesn&apos;t allow out of order timestamps, and in the general case, timestamps are assigned automatically (and hence are always increasing), it doesn&apos;t seem that important.&lt;/p&gt;</comment>
                            <comment id="12602030" author="bryanduxbury" created="Tue, 3 Jun 2008 19:06:43 +0000"  >&lt;p&gt;I tend to agree at this point. Should we make it so you can&apos;t put values at non-increasing timestamps at all?&lt;/p&gt;</comment>
                            <comment id="12602032" author="stack" created="Tue, 3 Jun 2008 19:11:52 +0000"  >&lt;p&gt;I&apos;d say move it out of 0.2 but keep it alive at a low priority.  Its going to come up again.&lt;/p&gt;</comment>
                            <comment id="12627283" author="viper799" created="Sun, 31 Aug 2008 06:45:22 +0000"  >&lt;p&gt;I been doing some updates in compaction&apos;s and found the above issue that Bryan is talking about  in compaction&apos;s also.&lt;/p&gt;

&lt;p&gt;The way we compact now we assume that the newest mapfile/HStoreFiles will have newer timestamps then the versions in the older mapfiles.&lt;/p&gt;

&lt;p&gt;So currently we are keeping the x newest cells /wo considering timestamps.&lt;br/&gt;
The rule is newest mapfiles get read first which could push out values that have newer timestamps&lt;/p&gt;

&lt;p&gt;If we decide to change where max versions keep the newest values based on timestamps compaction&apos;s will also need a update so we do not lose the correct versions.&lt;/p&gt;</comment>
                            <comment id="12657124" author="stack" created="Tue, 16 Dec 2008 19:27:29 +0000"  >&lt;p&gt;I&apos;m thinking each edit needs to carry two timestamps to solve this issue, the user designated one and another that records actual insert time.  The latter is used during major compactions figuring cell TTL and its used distingushing two edits of same r/c/t so we don&apos;t overwrite older vintage edits. &lt;/p&gt;</comment>
                            <comment id="12906683" author="pranavkhaitan" created="Tue, 7 Sep 2010 06:13:08 +0000"  >&lt;p&gt;I think the code for Store has changed since then and this issue doesn&apos;t exist anymore. In that case, we should consider closing this jira&lt;/p&gt;</comment>
                            <comment id="12906998" author="stack" created="Tue, 7 Sep 2010 22:25:16 +0000"  >&lt;p&gt;Agreed Pranav.  We don&apos;t have a getFull any more and this mostly works since we moved get to use scanners always.  There are issue lurking but we can open specific to address any found rather than operate under this old/stale description.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12457384">HBASE-2265</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12391833">HBASE-532</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12374697" name="29.patch" size="18716" author="bryanduxbury" created="Mon, 4 Feb 2008 19:08:21 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 15 Jan 2008 20:24:19 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24867</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 15 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0h3lz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>97847</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>