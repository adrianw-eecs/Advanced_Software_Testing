<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:40:44 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-71/HBASE-71.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-71] [hbase] Master should rebalance region assignments periodically</title>
                <link>https://issues.apache.org/jira/browse/HBASE-71</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;The master currently only does region assignments at startup or when there are splits or dead regionservers. This means that if you join a new regionserver to the cluster after startup, it does not get assigned a fair share of the already-served regions as you would expect. It only gets a share of new regions being served.&lt;/p&gt;

&lt;p&gt;The master should periodically check the balance of regions, based on whatever assignment function, instead of in reaction to the above listed events.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12387513">HBASE-71</key>
            <summary>[hbase] Master should rebalance region assignments periodically</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="bryanduxbury">Bryan Duxbury</assignee>
                                    <reporter username="bryanduxbury">Bryan Duxbury</reporter>
                        <labels>
                    </labels>
                <created>Wed, 30 Jan 2008 23:40:46 +0000</created>
                <updated>Fri, 22 Aug 2008 21:13:05 +0000</updated>
                            <resolved>Thu, 3 Apr 2008 19:02:53 +0000</resolved>
                                                    <fixVersion>0.2.0</fixVersion>
                                    <component>master</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12568370" author="bryanduxbury" created="Wed, 13 Feb 2008 00:11:11 +0000"  >&lt;p&gt;Speaking with a colleague, instead of rebalancing periodically, maybe we should just enqueue a rebalancing to occur whenever any event occurs that could introduce an imbalance.  I&apos;m thinking:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Whole cluster comes online&lt;/li&gt;
	&lt;li&gt;Region server comes online&lt;/li&gt;
	&lt;li&gt;Region server goes offline&lt;/li&gt;
	&lt;li&gt;Region splits&lt;/li&gt;
	&lt;li&gt;Region merges (for the future...)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This would allow us to only selectively reassign regions. Are there any other events that should be tracked that would require us to rebalance?&lt;/p&gt;</comment>
                            <comment id="12570022" author="bryanduxbury" created="Mon, 18 Feb 2008 22:25:09 +0000"  >&lt;p&gt;It&apos;ll be much easier to make this functionality happen once the master is split up.&lt;/p&gt;</comment>
                            <comment id="12572294" author="bryanduxbury" created="Mon, 25 Feb 2008 22:52:28 +0000"  >&lt;p&gt;In a naive approach, the RegionManager decides that a regionserver is overloaded and tells it to close some of its regions, puts them back in the unassigned region list, and lets them get randomly reassigned. The problem with this approach is that during the time when it&apos;s being &quot;transferred&quot; (offline pending reassignment), the region will be unavailable. That would be sort of undesirable, since it would mean downtime and possibly a lot of retries for some consumers. &lt;/p&gt;

&lt;p&gt;Instead, maybe we could introduce a way for one regionserver to keep serving a region while another opens it read-only. Then, once the second server has it opened, we could switch who is assigned as the writer server. This would introduce a period of time where there might not be consistent state because of the memcache on the original writer. Not sure this would work, but it could help.&lt;/p&gt;</comment>
                            <comment id="12572299" author="jimk" created="Mon, 25 Feb 2008 23:11:37 +0000"  >&lt;p&gt;&amp;gt; Bryan Duxbury - 25/Feb/08 02:52 PM&lt;br/&gt;
&amp;gt; Instead, maybe we could introduce a way for one regionserver to keep serving a region while&lt;br/&gt;
&amp;gt; another opens it read-only.&lt;/p&gt;

&lt;p&gt;-1&lt;/p&gt;

&lt;p&gt;How are you going to open a region &quot;read-only&quot; if its state is changing? Files and their contents&lt;br/&gt;
are not visible while being written.&lt;/p&gt;

&lt;p&gt;Even if you could do this how would the new region server maintain a coherent view of&lt;br/&gt;
what the region looks like, since flushes, compactions and splits could happen before&lt;br/&gt;
it gets told it can now serve the region.&lt;/p&gt;</comment>
                            <comment id="12572301" author="bryanduxbury" created="Mon, 25 Feb 2008 23:25:58 +0000"  >&lt;p&gt;I tend to agree with Jim, just thought I&apos;d throw it out there. &lt;/p&gt;

&lt;p&gt;Guess this means we&apos;ll just tell a regionserver to close a region, and once it&apos;s closed it&apos;ll get reassigned normally.&lt;/p&gt;</comment>
                            <comment id="12572713" author="bryanduxbury" created="Tue, 26 Feb 2008 23:18:02 +0000"  >&lt;p&gt;One problem is that when a region server checks in, if it&apos;s overloaded, we don&apos;t know which regions we should tell it to offline. The current flow requires us to tell it to close specific regions by name. However, unless they&apos;re meta regions, we won&apos;t know their names, as a region server only reports its aggregate load, not the individual regions and loads. &lt;/p&gt;

&lt;p&gt;We have a few options here:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Have regionservers report in with N region names along with their normal reports. If a region server is overloaded, then the master can pick from those regions and choose some to offline. At first, the way that the region server picks the N regions could be essentially arbitrary, but in the future we could make it do something like send the 10 most requested regions, or some other load-based factor. Downside of this approach is that it would potentially bloat the reports, even when rebalancing isn&apos;t required.&lt;/li&gt;
	&lt;li&gt;Determine what regions to relocate during meta scans. This way we have access to all the region names we need as well as who has them. Downside is that it would really increase the amount of stuff MetaScanner does, maybe complicating it significantly. We&apos;d also have to figure out a way to do this without having to load all of the region-&amp;gt;server assignments into memory at once, so it would be non-trivial.&lt;/li&gt;
	&lt;li&gt;Have a new message type that just tells a region server to close a number of regions, letting it choose which to close. It would then report what regions it chose to close. Downside of this is that we&apos;d have to assume a reported close that wasn&apos;t specifically marked for closing means rebalancing. We wouldn&apos;t know where those regions are in terms of the overall flow at that moment; they&apos;d just be offlining.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Are there any alternatives that I missed?&lt;/p&gt;</comment>
                            <comment id="12573589" author="stack" created="Fri, 29 Feb 2008 04:37:26 +0000"  >&lt;p&gt;I like the idea of only rebalancing when an &apos;event&apos; that would require rebalancing.  I like your list too except I wouldn&apos;t include splits.  Its just adding a single region to the mix and I&apos;d imagine rebalance a heavy-weight process that we shouldn&apos;t trigger if only one new region in the mix?  Maybe after the Nth split force a balance review?&lt;/p&gt;

&lt;p&gt;Rather than RegionManager telling the region its overloaded, isn&apos;t the regionserver better able to determine whether its overloaded or not? (Would allow for cluster of heterogeneous servers).  I suppose there should be a means of the regionserver saying &quot;I&apos;m full&quot; before it gets to overloaded state so that master doesn&apos;t put it over the edge.&lt;/p&gt;

&lt;p&gt;On the region assignment operation, currently a split or assignment runs as a message delivered as part of the normal batch-messaging-on-a-period mechanism.  I was thinking that when it comes to assigning regions, we should short-circuit and deliver the split notice or assignment to happen w/o delay.  Currently we have subsecond splits but can take a long time before the daughters are up and running in their new locations.&lt;/p&gt;

&lt;p&gt;On master not knowing which region to reassign, yeah, regionserver should suggest N (Why not one to keep it simple?  Can deliver an other overloaded notice if needs to shed more)... presuming its regionserver that is saying &quot;I&apos;m overloaded&quot;.&lt;/p&gt;</comment>
                            <comment id="12573866" author="bryanduxbury" created="Fri, 29 Feb 2008 17:58:48 +0000"  >&lt;p&gt;How does a region server know when it&apos;s overloaded compared to other servers? In DFS we have the convenient metric of the fixed amount of disk space to tell us when heterogeneous servers are overloaded. We could do something like memory usage, but that&apos;s not necessarily fixed, nor is it clear that high memory usage actually indicates high load in all circumstances (other processes may be using a lot of memory, causing swapping, vs HBase being the only program, so high memory means nothing).&lt;/p&gt;

&lt;p&gt;I certainly think that we should be able to manage heterogeneity at some point in the future, but I think we should put off solving that issue for a while. &lt;/p&gt;

&lt;p&gt;I will go ahead with the plan of region server reporting N regions each time, and if the master determines the region server&apos;s load to be over the average, it will unassign some of those. Like Stack says, if the region server is still overloaded on the next report in, then it&apos;ll get some more regions shifted around. &lt;/p&gt;</comment>
                            <comment id="12573912" author="stack" created="Fri, 29 Feb 2008 19:21:22 +0000"  >&lt;p&gt;Yeah, it would only know when it was overloaded.... not its state relative to others. &lt;/p&gt;

&lt;p&gt;I&apos;d say how a regionserver determines its overloaded is outside scope of this issue (region count, hit rate, uptime, memory used, etc.).&lt;/p&gt;

&lt;p&gt;Regionserver could report in how many regions it has total as an int along w/ name of a region to offload.  Master could take this first number into account when rebalancing.&lt;/p&gt;</comment>
                            <comment id="12575183" author="bryanduxbury" created="Tue, 4 Mar 2008 23:08:23 +0000"  >&lt;p&gt;Here&apos;s a first shot at a patch to change this. I&apos;m confident that this doesn&apos;t work correctly. It passes unit tests, but I haven&apos;t tested it to see if it correctly rebalances skewed clusters. It&apos;s challenging to set up such a test, but I&apos;ll figure something out.&lt;/p&gt;</comment>
                            <comment id="12584778" author="bryanduxbury" created="Wed, 2 Apr 2008 21:06:04 +0000"  >&lt;p&gt;This version of the patch appears to actually work. Unit tests pass locally.&lt;/p&gt;

&lt;p&gt;A      src/test/org/apache/hadoop/hbase/TestRegionRebalancing.java&lt;br/&gt;
Starts up and shuts down some region servers to see if rebalancing occurs as expected.&lt;br/&gt;
M      src/test/org/apache/hadoop/hbase/MiniHBaseCluster.java&lt;br/&gt;
-startRegionServer blocks until server is online&lt;br/&gt;
-stopRegionServer returns the RegionServerThread so you can join externally if you want.&lt;br/&gt;
M      src/test/org/apache/hadoop/hbase/MultiRegionTable.java&lt;br/&gt;
Updated to deal with change from SortedMap to Map for HRS&apos;s onlineRegions&lt;br/&gt;
M      src/test/org/apache/hadoop/hbase/master/OOMEHMaster.java&lt;br/&gt;
changed regionServerReport method to match new interface&lt;br/&gt;
M      src/java/org/apache/hadoop/hbase/HServerLoad.java&lt;br/&gt;
added setter for numberOfRequests&lt;br/&gt;
M      src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;br/&gt;
-added isOnline var to track when an HRS is done setting itself up&lt;br/&gt;
-onlineRegions is a ConcurrentHashMap instead of a TreeMap now&lt;br/&gt;
-getMostLoadedRegions method to determine which regions might get rebalanced&lt;br/&gt;
M      src/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
more useful logging of keys when choosing not to split&lt;br/&gt;
M      src/java/org/apache/hadoop/hbase/LocalHBaseCluster.java&lt;br/&gt;
some new methods to help synchronize your starting/stopping of regoin servers&lt;br/&gt;
M      src/java/org/apache/hadoop/hbase/master/ServerManager.java&lt;br/&gt;
-factored processing of MSG_REPORT_CLOSE into processReportClose method&lt;br/&gt;
-short circuit straight into unassignedRegions if we&apos;re not deleting or offlining a region instead of always managing in ProcessRegionClose todo object&lt;br/&gt;
-fleshed out the getAverageLoad method&lt;br/&gt;
M      src/java/org/apache/hadoop/hbase/master/HMaster.java&lt;br/&gt;
-updated regionServerReport method signature&lt;br/&gt;
M      src/java/org/apache/hadoop/hbase/master/ProcessRegionClose.java&lt;br/&gt;
-added big class comment explaining what it&apos;s for&lt;br/&gt;
-renamed the reassignRegion variable to offlineRegion&lt;br/&gt;
-changed the process() method to more clearly do what you&apos;d expect, and took out the reassignment branch of code&lt;br/&gt;
M      src/java/org/apache/hadoop/hbase/master/RegionManager.java&lt;br/&gt;
-new state added: regionsToOffline; methods related to this added&lt;br/&gt;
-assignRegions will now also unassign regions if the server is over the load average&lt;br/&gt;
-added unassignRegions method to facilitate deciding which regions to drop&lt;br/&gt;
M      src/java/org/apache/hadoop/hbase/master/ChangeTableState.java&lt;br/&gt;
-uses new markRegionForOffline&lt;br/&gt;
M      src/java/org/apache/hadoop/hbase/generated/regionserver/regionserver_jsp.java&lt;br/&gt;
M      src/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java&lt;br/&gt;
includes HRegionInfo[] class &lt;br/&gt;
M      src/java/org/apache/hadoop/hbase/ipc/HMasterRegionInterface.java&lt;br/&gt;
updated regionServerReport method&lt;br/&gt;
M      src/webapps/regionserver/regionserver.jsp&lt;/p&gt;</comment>
                            <comment id="12584779" author="bryanduxbury" created="Wed, 2 Apr 2008 21:06:18 +0000"  >&lt;p&gt;Please review.&lt;/p&gt;</comment>
                            <comment id="12584845" author="bryanduxbury" created="Wed, 2 Apr 2008 22:22:05 +0000"  >&lt;p&gt;This patch applies to trunk.&lt;/p&gt;</comment>
                            <comment id="12584944" author="jimk" created="Thu, 3 Apr 2008 01:14:43 +0000"  >&lt;p&gt;Reviewed patch. I have the following comments:&lt;/p&gt;

&lt;p&gt;Are the region names displayed by regionserver.jsp sorted?&lt;/p&gt;

&lt;p&gt;Why does RegionManager.regionsAwaitingAssignment return Set instead of List?&lt;/p&gt;

&lt;p&gt;In ServerManager.processRegionClose, is the following correct?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      &lt;span class=&quot;code-comment&quot;&gt;// all regions that are being closed should have been marked as 
&lt;/span&gt;      &lt;span class=&quot;code-comment&quot;&gt;// closing. remove it from that state.
&lt;/span&gt;      master.regionManager.noLongerClosing(region.getRegionName());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;What about when a region server exits cleanly and reports all the regions it has closed?&lt;/p&gt;

&lt;p&gt;Also in ServerManager.processRegionClose, is the following correct?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      master.regionManager.noLongerUnassigned(region);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;If the region is closed, is it now not assigned?&lt;/p&gt;

&lt;p&gt;In ServerManager.getAverageLoad, LOG.debug should be surrounded by&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (LOG.isDebugEnabled()) {
    LOG.debug.....
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;HRegionServer:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;numRegionsToReport should be final.&lt;/li&gt;
	&lt;li&gt;isOnline should be volatile because if it is set in one thread and read in another, there is no guarantee that the current value will have been published to the thread reading the value.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;MiniHBaseCluster:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;remove method deleteFile. Not referenced anywhere.&lt;/li&gt;
	&lt;li&gt;the imports for o.a.h.fs.FileSystem, o.a.h.fs.Path, o.a.h.h.util.FSUtils and java.io.File are not used. Remove them.&lt;/li&gt;
	&lt;li&gt;fix javadoc for
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
MiniHBaseCluster(HBaseConfiguration conf, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; numRegionServers) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;MultiRegionTable:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;the import java.util.SortedMap is not used.&lt;/li&gt;
	&lt;li&gt;add javadoc for public constructor.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;TestRegionRebalancing:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;imports java.util.Collection, java.util.TreeMap, o.a.h.h.client.HBaseAdmin, o.a.h.h.HConstants, o.a.h.h.HStoreKey, o.a.h.h.HScannerInterface are not used. Remove them.&lt;/li&gt;
	&lt;li&gt;Duplicate import of java.util.List - remove one.&lt;/li&gt;
	&lt;li&gt;missing javadoc for preHBaseClusterSetup&lt;/li&gt;
	&lt;li&gt;incorrect javadoc for testRebalancing&lt;/li&gt;
	&lt;li&gt;remove commented code:
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
        &lt;span class=&quot;code-comment&quot;&gt;// assertTrue(server + &lt;span class=&quot;code-quote&quot;&gt;&quot; isn&apos;t of average load! Avg: &quot;&lt;/span&gt; + avg + &lt;span class=&quot;code-quote&quot;&gt;&quot; actual: &quot;&lt;/span&gt; 
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;//   + server.getOnlineRegions().size(), 
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;//   serverLoad &amp;lt;= avg + 2 &amp;amp;&amp;amp; serverLoad &amp;gt;= avg - 2);&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
	&lt;li&gt;Overall: very nice test case!&lt;/li&gt;
&lt;/ul&gt;

</comment>
                            <comment id="12584955" author="bryanduxbury" created="Thu, 3 Apr 2008 01:47:12 +0000"  >&lt;p&gt;Removed unnecessary comments, methods, and imports as indicated in Jim&apos;s comments. &lt;/p&gt;

&lt;p&gt;Regards the questions about RegionManager and ServerManager state assignments, I added further clarifying comments about why it would seem to be ok for them to do what they&apos;re doing. These could be incorrect - please take another look to make sure we&apos;re all on the same page.&lt;/p&gt;</comment>
                            <comment id="12585143" author="jimk" created="Thu, 3 Apr 2008 15:38:35 +0000"  >&lt;p&gt;I looked at the flow again and now I understand how it works. Comments helped. Thanks!&lt;/p&gt;

&lt;p&gt;Overall I think this is a great patch and I think the test case is also very good. I have a couple of minor questions, and a bunch of nits. +1 when they are addressed.&lt;/p&gt;

&lt;p&gt;Q: Are the regions displayed by regionserver.jsp sorted?&lt;/p&gt;

&lt;p&gt;Q: RegionManager.regionsAwaitingAssignment return Set. Why not List?&lt;/p&gt;

&lt;p&gt;Nits (but unfortunately necessary)&lt;/p&gt;

&lt;p&gt;Need javadoc for LocalHbaseCluster&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;waitForServerOnline&lt;/li&gt;
	&lt;li&gt;removeRegionServer&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;HMasterRegionInterface needs updated javadoc for regionServerReport&lt;/p&gt;

&lt;p&gt;master.ProcessRegionClose needs updated javadoc for constructor.&lt;/p&gt;

&lt;p&gt;RegionManager:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;unused imports: java.util.concurrent.BlockingQueue, java.util.concurrent.LinkedBlockingQueue, java.util.HashMap&lt;/li&gt;
	&lt;li&gt;unassignSomeRegions variable serverName is not read.&lt;/li&gt;
	&lt;li&gt;stopScanners should be javadoc and not just a comment&lt;/li&gt;
	&lt;li&gt;getFirstMetaRegionForRegion last else is not necessary&lt;/li&gt;
	&lt;li&gt;incorrect or incomplete javadoc for waitForMetaRegionsOrClose, getFirstMetaRegionForRegion, getMetaRegionsForTable, createRegion, waitForMetaRegionsOrClose, putMetaRegionOnline, getListOfOnlineMetaRegions, numOnlineMetaRegions, isMetaRegionOnline, offlineMetaRegion, isUnassigned, isPending, setUnassigned, setPending, noLongerPending, updateAssignmentDeadline, noLongerUnassigned, markToClose, markToCloseBulk, getMarkedToClose, isMarkedToClose, noLongerMarkedToClose, isClosing, noLongerClosing, setClosing, addMetaRegionToScan, markRegionForDeletion, regionDeleted, markRegionForOffline, isMarkedForOffline, regionOfflined, isMarkedForDeletion, isInitialRootScanComplete, isInitialMetaScanComplete, getRootRegionLocation, waitForRootRegionLocation, numMetaRegions, incrementNumMetaRegions, setRootRegionLocation, setNumMetaRegions&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;ServerManager:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Javadoc for regionServerReport, getAverageLoad should be updated.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;HRegionServer:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;unused import java.util.SortedMap&lt;/li&gt;
	&lt;li&gt;method isOnline needs javadoc&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;MiniHBaseCluster:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;unused import o.a.h.h.utilFSUtils&lt;/li&gt;
	&lt;li&gt;fix javadoc for constructor&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12585170" author="bryanduxbury" created="Thu, 3 Apr 2008 16:28:37 +0000"  >&lt;p&gt; &amp;gt; Q: Are the regions displayed by regionserver.jsp sorted?&lt;br/&gt;
No, not anymore. Important to do?&lt;/p&gt;

&lt;p&gt; &amp;gt; Q: RegionManager.regionsAwaitingAssignment return Set. Why not List?&lt;br/&gt;
Set seemed natural to me. Is List faster than Set? &lt;/p&gt;</comment>
                            <comment id="12585172" author="bryanduxbury" created="Thu, 3 Apr 2008 16:29:35 +0000"  >&lt;p&gt;This patch addresses all the issues raised in Jim&apos;s last review except for the two questions.&lt;/p&gt;</comment>
                            <comment id="12585181" author="jimk" created="Thu, 3 Apr 2008 16:48:19 +0000"  >&lt;p&gt;&amp;gt;Bryan Duxbury - 03/Apr/08 09:28 AM&lt;br/&gt;
&amp;gt;&amp;gt; Q: Are the regions displayed by regionserver.jsp sorted?&lt;br/&gt;
&amp;gt; No, not anymore. Important to do?&lt;/p&gt;

&lt;p&gt;People complained when they weren&apos;t.&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt; Q: RegionManager.regionsAwaitingAssignment return Set. Why not List?&lt;br/&gt;
&amp;gt; Set seemed natural to me. Is List faster than Set?&lt;br/&gt;
If all you are doing is adding and iterating and don&apos;t care if there already is an entry, then yes, List is much faster than Set. On the other hand, with a HashSet, you don&apos;t pay much of a penalty for that check. But something to consider in the future.&lt;/p&gt;</comment>
                            <comment id="12585183" author="stack" created="Thu, 3 Apr 2008 16:51:46 +0000"  >&lt;p&gt;On sorting regions displayed, if you want, just file a separate issue.  Its a one line fix.  I can do as part of other UI work.&lt;/p&gt;</comment>
                            <comment id="12585191" author="jimk" created="Thu, 3 Apr 2008 17:03:47 +0000"  >&lt;p&gt;Sorry, couple of more nits. Unfortunately Eclipse does not reveal them all at once, but as others are fixed, more appear. Hopefully these are the last. Will run regression suite after my run for 0.1.1 completes, since these few comment changes are not going to affect the results.&lt;/p&gt;

&lt;p&gt;ProcessRegionClose constructor is missing @param master in javadoc&lt;/p&gt;

&lt;p&gt;RegionManager:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;regionsBeingReassigned is never read. Is it necessary.&lt;/li&gt;
	&lt;li&gt;line 231: unnecessary check for null&lt;/li&gt;
	&lt;li&gt;waitForMetaRegionsOrClose does not throw IOException, can be removed. No @return javadoc&lt;/li&gt;
	&lt;li&gt;createRegion no @throws in javadoc&lt;/li&gt;
	&lt;li&gt;addMetaRegionToScan no @throws in javadoc&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;MiniHBaseCluster&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;no @throws in javadoc for constructor&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12585234" author="bryanduxbury" created="Thu, 3 Apr 2008 19:02:53 +0000"  >&lt;p&gt;I just committed this to trunk. &lt;/p&gt;

&lt;p&gt;I tried to copy in my commit message from above but got some weird line ending error, so I omitted it.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12387514">HBASE-55</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12385607">HBASE-63</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12388943">HBASE-457</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12379186" name="71-v2.patch" size="51408" author="bryanduxbury" created="Wed, 2 Apr 2008 21:06:04 +0000"/>
                            <attachment id="12379194" name="71-v3.patch" size="50611" author="bryanduxbury" created="Wed, 2 Apr 2008 22:22:05 +0000"/>
                            <attachment id="12379222" name="71-v4.patch" size="52396" author="bryanduxbury" created="Thu, 3 Apr 2008 01:47:12 +0000"/>
                            <attachment id="12379278" name="71-v5.patch" size="65899" author="bryanduxbury" created="Thu, 3 Apr 2008 16:29:35 +0000"/>
                            <attachment id="12377128" name="71.patch" size="25084" author="bryanduxbury" created="Tue, 4 Mar 2008 23:08:23 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 25 Feb 2008 23:11:37 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31667</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            8 years, 38 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0h41r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>97918</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>