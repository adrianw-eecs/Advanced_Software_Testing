<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:40:39 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-62/HBASE-62.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-62] [hbase] Allow user add arbitrary key/value pairs to table and column descriptors</title>
                <link>https://issues.apache.org/jira/browse/HBASE-62</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Folks have asked if they can tag columns and tables with markings of their own designation.  Examples include &apos;type&apos; and &apos;descriptiion&apos;. &lt;/p&gt;</description>
                <environment></environment>
        <key id="12382394">HBASE-62</key>
            <summary>[hbase] Allow user add arbitrary key/value pairs to table and column descriptors</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="5" iconUrl="https://issues.apache.org/jira/images/icons/priorities/trivial.png">Trivial</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="stack">stack</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Tue, 13 Nov 2007 01:18:50 +0000</created>
                <updated>Wed, 22 Feb 2012 22:34:17 +0000</updated>
                            <resolved>Thu, 17 Jul 2008 07:07:55 +0000</resolved>
                                                    <fixVersion>0.2.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12549153" author="vercegovac" created="Thu, 6 Dec 2007 19:46:39 +0000"  >&lt;p&gt;A possibility is to use a language neutral format such as JSON.&lt;br/&gt;
A collection of key/value pairs would then simply be called an &quot;object&quot;.&lt;br/&gt;
Furthermore, this should integrate well with jaql, a query language we recently announced&lt;br/&gt;
for JSON data and posted further information at &lt;a href=&quot;http://www.jaql.org&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.jaql.org&lt;/a&gt;.&lt;br/&gt;
In fact, we&apos;ve implemented several functions in the language to manage HBase data.&lt;br/&gt;
As a result, type information, through the use of JSON, is serialized into HBase byte array column values.&lt;br/&gt;
We did not consider descriptions for tables, but I suppose this is reasonable to store in the catalog.&lt;/p&gt;</comment>
                            <comment id="12551870" author="jimk" created="Fri, 14 Dec 2007 17:49:29 +0000"  >&lt;p&gt;Changing priority to minor. The need for this feature is not as urgent as it once was, and there are other possible mechanisms for achieving the same goal.&lt;/p&gt;</comment>
                            <comment id="12565951" author="jimk" created="Tue, 5 Feb 2008 23:15:55 +0000"  >&lt;p&gt;Changing priority to trivial because demand for this request has been significantly less than in the past. I.e., trying to use priority (whose particular values do not fit this specific need) to arrange issues so that their priority reflects the urgency for a particular feature or bug fix.&lt;/p&gt;</comment>
                            <comment id="12609070" author="apurtell" created="Sun, 29 Jun 2008 09:32:33 +0000"  >&lt;p&gt;Implemented by modifying HTableDescriptor and HColumnDescriptor to incorporate a MapWritable that uses ImmutableBytesWritables for keys and values. A number of issues related to greater descriptor flexibility will be linked shortly, and I&apos;ll issue a patch that addresses them all. &lt;/p&gt;</comment>
                            <comment id="12609610" author="stack" created="Tue, 1 Jul 2008 14:45:51 +0000"  >&lt;p&gt;Sounds good Andrew.  You want to get your changes into 0.2 Andrew?&lt;/p&gt;</comment>
                            <comment id="12609650" author="apurtell" created="Tue, 1 Jul 2008 17:50:39 +0000"  >&lt;p&gt;I&apos;d like to see these changes go in for 0.2, if possible. Changes are contained largely to HTableDescriptor and HColumnDescriptor. The most signification change elsewhere is support in HRegion for read only tables.&lt;/p&gt;

&lt;p&gt;Patch attached. On second thought using a MapWritable was kind of ugly, so I just used a map with byte[] keys and values and the utilities for reading/writing byte arrays in Byte instead. Basically the same thing but the code is cleaner.&lt;/p&gt;

&lt;p&gt;The patch passes all &apos;ant test&apos; tests for me.&lt;/p&gt;

&lt;p&gt;These items are outstanding:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Unit test for read-only tables &amp;#8211; New test TestReadOnly&lt;/li&gt;
	&lt;li&gt;Unit test for user table and column metadata &amp;#8211; Probably can modify TestHTable for this&lt;/li&gt;
	&lt;li&gt;Migration script to deal with HTableDescriptor changes&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;ll work on the unit tests.&lt;/p&gt;</comment>
                            <comment id="12609696" author="stack" created="Tue, 1 Jul 2008 19:55:44 +0000"  >&lt;p&gt;Patch looks great Andrew.  Just a few comments.&lt;/p&gt;

&lt;p&gt;+ Byte arrays as HashMap keys do object identity which is probably not what you want.   Use ImmutableBytesWritable as key or a TreeMap and provide the Bytes.comparable if you want the keys to equate when their content is the same.&lt;br/&gt;
+ I like the way you do the getValue override whereby if you use a String key to ask for a value, you get it back as a String.&lt;br/&gt;
+ The statement in getValue javadoc about encoding may not be true in all cases &amp;#8211; e.g. user may not have set value as UTF-8?: &apos; * @return The value as a UTF-8 encoded byte array.&apos;  &lt;/p&gt;

&lt;p&gt;Hey, so what migration needs to be done since HTD and HCD seem to be self-migrating?  You want to rewrite the .META. tables before startup?  Can I help out w/ migration?&lt;/p&gt;





</comment>
                            <comment id="12609784" author="apurtell" created="Wed, 2 Jul 2008 03:19:13 +0000"  >&lt;p&gt;Thanks for the patch review. I have attached another patch which addresses the comments.&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Use TreeMaps with Bytes.BYTES_COMPARATOR. Thanks for the advice.&lt;/li&gt;
	&lt;li&gt;Fixed outdated Javadoc from a previous attempt.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Regarding HTableDescriptor and HColumnDescriptor migration, HCD has been self-migrating for a while but HTD is not yet. The hbase-62 patch includes changes which make HTD self-versioning, but HTD.readFields is not compatible with what is on disk today. So HTDs for all tables need to be rewritten as part of migration. &lt;/p&gt;</comment>
                            <comment id="12609802" author="stack" created="Wed, 2 Jul 2008 05:58:40 +0000"  >&lt;p&gt;Patch looks good.  One nitpick would be that rather than Map, you&apos;d take SortedMap when being passed Map of key/value pairs in HRI to underline fact that it needs to be a TreeMap type-thingy.. but thats not a biggy.  Can do it on commit.&lt;/p&gt;

&lt;p&gt;Do you think the migration would just be the rewriting of the HTD component of regioninfo in .META.?  I suppose you want to get the migration in as part of this patch?  I can do a sketch of how it&apos;d run if you like.  Just say.&lt;/p&gt;

&lt;p&gt;Good stuff Andrew.&lt;/p&gt;</comment>
                            <comment id="12609879" author="apurtell" created="Wed, 2 Jul 2008 11:01:42 +0000"  >&lt;p&gt;I attached another patch that uses SortedMap instead of Map. &lt;/p&gt;

&lt;p&gt;For migration the proposed HTD.readFields needs an integer (written by .writeInt()) ahead of the rest of the serialized HTD to process the old format. I have tried to make migration easy. All that needs to be done is a simple prepend of a serialized integer to the serialized HTDs in .META., but I don&apos;t know how migration scripts work so maybe that is not simple or a complete rewrite is no problem...&lt;/p&gt;</comment>
                            <comment id="12610376" author="stack" created="Thu, 3 Jul 2008 23:48:18 +0000"  >&lt;p&gt;Thanks for new patch Andrew.&lt;/p&gt;

&lt;p&gt;I&apos;ve been playing around with the migration.  Its that old story where you need the old class around to deserialize but the new class is in the way.  I&apos;ve started up a little package under o.a.h.h.util named migration.v4.   In it, I&apos;ll add classes need to do the v3 to v4 migration.  WIll need to iterate over all .META. regions using new tools I need to add to MetaUtils.  Will get the info:regioninfo column bytes and feed them to a subclass of HRI, one that has a diffferent deserializer.  This new deserializer inserts a subclass of HTD that also has a different deserializer, one that can read v3 HTDs.  It copies the v3 to a v4 HTD.  Then we call the default HRI serializer &amp;#8211; which will invoke the v4 HTD serializer &amp;#8211; and insert back into .META.&lt;/p&gt;

&lt;p&gt;One hiccup is that we might have to do the v4 migration ahead of the v3 migration in tests.&lt;/p&gt;

&lt;p&gt;I&apos;m a little worried that subclassing HRI and HTD in migration is too brittle.  Will think on it over the w/e.&lt;/p&gt;</comment>
                            <comment id="12610389" author="apurtell" created="Fri, 4 Jul 2008 00:38:16 +0000"  >&lt;p&gt;Thanks for the help with migration issues Stack. I&apos;ve attached another patch and cleaned up some of the old ones. This latest one I think is fully baked. I took your suggestion to use ImmutableBytesWritable, because it does seem like the more Hadoop-y thing to do. I&apos;ve also added additional test cases to TestTable (read only tables) and TestHTable (HTD and HCD attributes). All of the tests in the &apos;ant test&apos; suite pass for me including the modified ones except for Migration of course. &lt;/p&gt;</comment>
                            <comment id="12611821" author="stack" created="Tue, 8 Jul 2008 21:57:01 +0000"  >&lt;p&gt;Pulling this into 0.2.  At a minimum, JK needs the HTD to be verisioned for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-696&quot; title=&quot;Make bloomfilter true/false and self-sizing&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-696&quot;&gt;&lt;del&gt;HBASE-696&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12613498" author="stack" created="Tue, 15 Jul 2008 00:29:08 +0000"  >&lt;p&gt;Updated patch so will apply to trunk.&lt;/p&gt;

&lt;p&gt;Still need to do the migration work this issue needs.&lt;/p&gt;</comment>
                            <comment id="12613508" author="apurtell" created="Tue, 15 Jul 2008 01:46:29 +0000"  >&lt;p&gt;Updated patch for latest trunk. Also I made a package o.a.h.h.util.migration.v0_2_0 and put the old HTableDescriptor, HColumnDescriptor, and BloomFilter classes from 0.1 there. Because migration from 0.1.X to 0.2.0 will be explicitly done via these classes, I removed (now unnecessary) backward compatability code from the trunk versions of HTD.readFields and HCD.readFields. &lt;/p&gt;</comment>
                            <comment id="12613802" author="jimk" created="Wed, 16 Jul 2008 00:25:38 +0000"  >&lt;p&gt;Is this patch essential for 0.2.0 or can it be moved to 0.2.1 and 0.3.0 ? I&apos;d like to freeze 0.2.0 as soon as possible so we can make a release candidate.&lt;/p&gt;</comment>
                            <comment id="12613805" author="stack" created="Wed, 16 Jul 2008 00:37:32 +0000"  >&lt;p&gt;I&apos;ve been working on the necessary migration.  Its ugly mixing old and new versions of about ten classes.  Almost done though.&lt;/p&gt;

&lt;p&gt;We could punt bringing in this patch but the migration would still be ugly, just postponed.  Might be uglier even if lots of on-filesystems in 0.3 hbase.&lt;/p&gt;

&lt;p&gt;This (painful) patch opens our easily doing other HTD extensions because it introduces HTD versioning (e.g. moving table schema out of HTD).  Also adds read-only hbase table.  Its kinda sweet.&lt;/p&gt;

&lt;p&gt;Regards migrations, after bringing in this patch, I think we should start over with migrations; they&apos;re complicated enough now involving 5 distinct steps.  It would mean that you could not go from old hbase 0.16.x through to 0.3.  You&apos;d have to install 0.2 to bring you up to 0.2 hbase; then install 0.3 hbase to migrate from 0.2 to 0.3.&lt;/p&gt;</comment>
                            <comment id="12614033" author="jimk" created="Wed, 16 Jul 2008 17:41:12 +0000"  >&lt;p&gt;With recent commits, the latest patch will no longer apply. I&apos;ll work on it so that it will.&lt;/p&gt;</comment>
                            <comment id="12614038" author="apurtell" created="Wed, 16 Jul 2008 17:55:16 +0000"  >&lt;p&gt;Attached new patch that applies cleanly to trunk. &lt;/p&gt;

&lt;p&gt;I left out any migration bits because stack is doing his own thing.&lt;/p&gt;</comment>
                            <comment id="12614192" author="stack" created="Thu, 17 Jul 2008 01:39:53 +0000"  >&lt;p&gt;Committed a simplification of migration against this issue.&lt;/p&gt;

&lt;p&gt;Previously migration was a 5 step process.  Ensuring each individual step had the right set of classes to hand proved too much for my small brain. Complexity was compounded by fact that some classes were self-migrating.  Things got extra messy when test migration did a forward migrate, junked the version file, and then ran a new forward migration top the old.&lt;/p&gt;

&lt;p&gt;To get this patch in, I first stripped migration to a minimum.  Now, the migration script in TRUNK will only migrate between an hbase 0.1.x install and an hbase 0.2.x install. This removed one step.  That leaves the addition of the regionhistorian column family and the bloom filter cleanup.&lt;/p&gt;

&lt;p&gt;Plan is to make the migration one-step doing bloomfilter cleanup and migration of HTD, etc., all in the one step.&lt;/p&gt;

&lt;p&gt;Going forward, we shouldn&apos;t be too bad now the important classes all have versions but if we think we&apos;re going to run into this awkward mix of classes in the future, we should do something like have each step run in its own JVM invocation so we have chance to doctor CLASSPATH per migration step.&lt;/p&gt;</comment>
                            <comment id="12614232" author="stack" created="Thu, 17 Jul 2008 05:58:08 +0000"  >&lt;p&gt;This patch adds a few edits to Andrew&apos;s last patch and then adds migration.&lt;/p&gt;</comment>
                            <comment id="12614235" author="stack" created="Thu, 17 Jul 2008 06:03:14 +0000"  >&lt;p&gt;Here&apos;s a few more notes on the patch.&lt;/p&gt;

&lt;p&gt;The migration is ugly.   Adds new util.migration.v5 package into which I put pre-v5 versions of classes.  Migrating I use these classes to read in the serialized info and then copy fields out of the old versions of the classes into new instances of their replacements.&lt;/p&gt;

&lt;p&gt;I added versioning to HRegionInfo while I was at it in case we need to change its format someday.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
M  src/test/org/apache/hadoop/hbase/TestTable.java
    (testReadOnlyTable): Added.
M  src/test/org/apache/hadoop/hbase/client/TestHTable.java
    Test adding a user attribute.
M  src/java/org/apache/hadoop/hbase/HColumnDescriptor.java
    Up HCD version to 6. Attributes now kept in a map.
    (getValue, setValue): Added.
    Also added a bunch of setters &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; the base attributes:
    maxVersions, TTL, etc.
    isBloomFilterEnabled renamed as isBloomfilter.
M  src/java/org/apache/hadoop/hbase/BloomFilterDescriptor.java
    Added constructor.
M  src/java/org/apache/hadoop/hbase/thrift/ThriftUtilities.java
    isBloomFilterEnabled renamed as isBloomfilter.
M  src/java/org/apache/hadoop/hbase/regionserver/HStore.java
    isBloomFilterEnabled renamed as isBloomfilter.
M  src/java/org/apache/hadoop/hbase/regionserver/HAbstractScanner.java
    Made class &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; so could be used from migration subpackage.
M  src/java/org/apache/hadoop/hbase/regionserver/HRegion.java
    Check &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; table is read-only.
M  src/java/org/apache/hadoop/hbase/&lt;span class=&quot;code-keyword&quot;&gt;rest&lt;/span&gt;/TableHandler.java
    isBloomFilterEnabled renamed as isBloomfilter.
M  src/java/org/apache/hadoop/hbase/HTableDescriptor.java
    Version HTD. New constructor that clones a passed HTD.
    (getValue, setValue, setReadOnly): Added.
    Other accessors and setters &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; old base attributes.
M  src/java/org/apache/hadoop/hbase/HRegionInfo.java
    Version HRI.
    (setTableDesc, getVersion): Added.
M  src/java/org/apache/hadoop/hbase/ipc/HMasterInterface.java
M  src/java/org/apache/hadoop/hbase/master/HMaster.java
    (modifyTableMeta): Added.
A src/java/org/apache/hadoop/hbase/util/migration/v5/HLogEdit.java
A src/java/org/apache/hadoop/hbase/util/migration/v5/HLogKey.java
A src/java/org/apache/hadoop/hbase/util/migration/v5/Memcache.java
A src/java/org/apache/hadoop/hbase/util/migration/v5/RegionHistorian.java
A src/java/org/apache/hadoop/hbase/util/migration/v5/HColumnDescriptor.java
A src/java/org/apache/hadoop/hbase/util/migration/v5/HStore.java
A src/java/org/apache/hadoop/hbase/util/migration/v5/HStoreFile.java
A src/java/org/apache/hadoop/hbase/util/migration/v5/StoreFileScanner.java
A src/java/org/apache/hadoop/hbase/util/migration/v5/HRegionInfo.java
A src/java/org/apache/hadoop/hbase/util/migration/v5/MetaUtils.java
A src/java/org/apache/hadoop/hbase/util/migration/v5/&lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt;.html
A src/java/org/apache/hadoop/hbase/util/migration/v5/HStoreScanner.java
A src/java/org/apache/hadoop/hbase/util/migration/v5/LogRollListener.java
A src/java/org/apache/hadoop/hbase/util/migration/v5/FlushRequester.java
A src/java/org/apache/hadoop/hbase/util/migration/v5/HConstants.java
A src/java/org/apache/hadoop/hbase/util/migration/v5/HLog.java
A src/java/org/apache/hadoop/hbase/util/migration/v5/HRegion.java
  Above are all pre-v5 versions of the above classes.  Most of the classes
  are unchanged except &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; edits to the imports so we imported from &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;
  migration.v5 &lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt; rather than from outside &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt;.  MetaUtils
  is the one exception.  I changed it to use getWritables when instantiating
  HRegionInfos so I could make it instantiate HRIs from &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt; rather
  than use o.a.h.h.HRI.
M  src/java/org/apache/hadoop/hbase/util/Migrate.java
   (migrateToV5, rewriteMetaHRegionInfo, updateHRegionInfo): Added.
   (migrateRegionDir, processRegionSubDirs, scanRootRegion): Removed.
M  src/java/org/apache/hadoop/hbase/client/HTable.java
    (getTableDescriptor): Make the returned HTD unmodifiable.
M src/java/org/apache/hadoop/hbase/client/MetaScanner.java
    make MetaScannerVisitor &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; so can get to it from migration code.
A  src/java/org/apache/hadoop/hbase/client/UnmodifyableHColumnDescriptor.java
M  src/java/org/apache/hadoop/hbase/client/HBaseAdmin.java
    (modifyTableMeta): Added.
M  src/java/org/apache/hadoop/hbase/client/UnmodifyableHTableDescriptor.java
    Added unsupportedoperationexception to setter overrides.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12614237" author="stack" created="Thu, 17 Jul 2008 06:05:09 +0000"  >&lt;p&gt;I reviewed Andrew&apos;s code.  Looks good to me.  Any chance of a quick review of the migration code? All changes under o.a.h.h.util?  Passes all tests on my box.&lt;/p&gt;</comment>
                            <comment id="12614254" author="stack" created="Thu, 17 Jul 2008 07:07:55 +0000"  >&lt;p&gt;Resolving.  Its a bit cheeky checking in this fat patch w/o getting the migration reviewed but then, who wants to look at migration code?  I reran the test suite locally and it passed so in it goes.&lt;/p&gt;

&lt;p&gt;Thanks for the patch Andrew.  Good stuff.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12383959">HBASE-34</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12383958">HBASE-42</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12379225">HBASE-43</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12398664">HBASE-700</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12399795">HBASE-729</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12401847">HBASE-800</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310051">
                    <name>Supercedes</name>
                                                                <inwardlinks description="is superceded by">
                                        <issuelink>
            <issuekey id="12541164">HBASE-5335</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12386024" name="hbase-62-676775.patch" size="53557" author="stack" created="Tue, 15 Jul 2008 00:29:08 +0000"/>
                            <attachment id="12385108" name="hbase-62-r673356.patch" size="48320" author="apurtell" created="Wed, 2 Jul 2008 11:01:57 +0000"/>
                            <attachment id="12385250" name="hbase-62-r673635.patch" size="55630" author="apurtell" created="Fri, 4 Jul 2008 00:38:16 +0000"/>
                            <attachment id="12386031" name="hbase-62-r676786.patch" size="90863" author="apurtell" created="Tue, 15 Jul 2008 01:46:29 +0000"/>
                            <attachment id="12386204" name="hbase-62-r677358.patch" size="57233" author="apurtell" created="Wed, 16 Jul 2008 17:55:16 +0000"/>
                            <attachment id="12386263" name="hbase-62-r677433.patch" size="422071" author="stack" created="Thu, 17 Jul 2008 05:58:08 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 6 Dec 2007 19:46:39 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31659</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            8 years, 23 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0h3yn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>97904</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>