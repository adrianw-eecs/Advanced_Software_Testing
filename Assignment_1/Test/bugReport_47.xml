<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:40:30 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-47/HBASE-47.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-47] option to set TTL for columns in hbase</title>
                <link>https://issues.apache.org/jira/browse/HBASE-47</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;I would like to see the option to have a TTL on the columns in hbase this feature could be helpfully in removing stale data from large datasets with out havening to do a full scan of the dataset and then issuing deletes.&lt;/p&gt;

&lt;p&gt;Example &lt;br/&gt;
Say I am crawling pages and only refreshing pages based on a set score and some pages doe not get updated over X days the old version of the page gets removed from the data set. &lt;/p&gt;

&lt;p&gt;Say I am striping out links form html and storing them say a link is removed from a page then I would need to issue a delete statement to remove that links form the data set with a ttl the link data would remove its self if not updated in x secs. These are just examples based on crawling like nutch but I can foresee many apps using this option. &lt;/p&gt;

&lt;p&gt;This is a feature in bigtables thats is handled when bigtable does garbage-collection.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12382716">HBASE-47</key>
            <summary>option to set TTL for columns in hbase</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="apurtell">Andrew Purtell</assignee>
                                    <reporter username="viper799">Billy Pearson</reporter>
                        <labels>
                    </labels>
                <created>Sat, 17 Nov 2007 17:10:41 +0000</created>
                <updated>Sat, 31 Jul 2010 18:31:04 +0000</updated>
                            <resolved>Wed, 7 May 2008 04:17:34 +0000</resolved>
                                                    <fixVersion>0.2.0</fixVersion>
                                    <component>regionserver</component>
                    <component>util</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12565214" author="bryanduxbury" created="Sun, 3 Feb 2008 20:42:32 +0000"  >&lt;p&gt;There&apos;s two ways I could see this feature working. One way would be that the TTL means time from the timestamp of the cell. The other would be time from the time the cell was stored, regardless of the timestamp. &lt;/p&gt;

&lt;p&gt;The first is really easily done, I think. We&apos;d need to:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Add get and set TTL to HColumnDescriptor&lt;/li&gt;
	&lt;li&gt;Change shell&apos;s CREATE TABLE statement so it takes a TTL parameter for column families&lt;/li&gt;
	&lt;li&gt;Update HStore methods (get, put, etc) to check HStoreKey&apos;s timestamps against TTL value when doing anything&lt;/li&gt;
	&lt;li&gt;Compactor should screen out cells past TTL&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The only thing to keep in mind about the first approach is that it&apos;d be possible to put a cell with a timestamp farther back than the TTL to begin with. In this case, data would pretty much just silently be lost. However, chances are, if you are interested in TTLs your use case doesn&apos;t likely require you to write records in the past.&lt;/p&gt;

&lt;p&gt;The second approach would be much harder. We&apos;d have to start storing extra stored-at timestamps everywhere. As such, I&apos;d say -1 on that one.&lt;/p&gt;</comment>
                            <comment id="12565267" author="viper799" created="Mon, 4 Feb 2008 04:45:11 +0000"  >&lt;p&gt;+1 on the first idea as we store the timestamps now so we do not need to store more data to support this option. TTL would be an option on the create table so if you are using TTL you would likely know to not write old stale data as it will be removed. but basically how you outlined would be idea.&lt;/p&gt;</comment>
                            <comment id="12592670" author="apurtell" created="Sun, 27 Apr 2008 18:44:55 +0000"  >&lt;p&gt;I&apos;ve started implementing the first approach. We&apos;d like to use this feature. I have the following completed already:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Add get and set TTL to HColumnDescriptor&lt;/li&gt;
	&lt;li&gt;Change shell&apos;s CREATE TABLE statement so it takes a TTL parameter for column families (and also ALTER TABLE, etc.), mostly just so all of the current code will compile &amp;#8211; I have heard that HQL is going away...&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;and am working on the remaining:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Update HStore methods (get, put, etc) to check HStoreKey&apos;s timestamps against TTL value when doing anything&lt;/li&gt;
	&lt;li&gt;Compactor should screen out cells past TTL&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I have to juggle this with other things but should have a patch and a unit test in a couple of days. &lt;/p&gt;</comment>
                            <comment id="12592873" author="apurtell" created="Mon, 28 Apr 2008 18:57:34 +0000"  >&lt;p&gt;Please see attached patch &quot;hbase-ttl-0.1.patch&quot;. &lt;/p&gt;

&lt;p&gt;These items were easy:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Add get and set TTL to HColumnDescriptor&lt;/li&gt;
	&lt;li&gt;Change shell&apos;s CREATE TABLE statement so it takes a TTL parameter for column families (and also ALTER TABLE, etc.)&lt;/li&gt;
	&lt;li&gt;Compactor should screen out cells past TTL&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This item was more involved due to memcache:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Update HStore methods (get, put, etc) to check HStoreKey&apos;s timestamps against TTL value when doing anything&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I have done some simple testing and it works for me. I have not written a more involved test case yet because there are two changes I had to make to Memcache which might be not so nice, so maybe this is ok or maybe it needs more work or some rethinking.&lt;/p&gt;

&lt;p&gt;First, in order to enforce TTLs, Memcache has to be aware of them. I noticed that effectively a Memcache is associated with a HStore, so I made the association explicit by converting the Memcache constructor to accept a HStore as the sole parameter. In this way Memcache can pick up TTLs from the HColumnDescriptor associated with its associated HStore. &lt;/p&gt;

&lt;p&gt;Second, I modified Memcache to discard cells with expired TTLs from the map. Otherwise with short TTLs and small values maybe many hundreds or thousands of expired cells may accumulate and need to be repeatedly and unnecessarily iterated through for every getFull, or get, etc. But, due to how the code is structured, currently expired cells may be dropped from both the memcache map and the snapshot map. Possibly removing entries from the snapshot map violates some assumptions made elsewhere. Avoiding this in my estimation would require some refactoring. &lt;/p&gt;</comment>
                            <comment id="12592903" author="bryanduxbury" created="Mon, 28 Apr 2008 21:35:15 +0000"  >&lt;p&gt;For starters let me note that it appears this patch was cut against 0.2, not 0.1. Patch should be relabeled appropriately.&lt;/p&gt;

&lt;p&gt;HColumnDescriptor&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Let&apos;s add a constant to HConstants called &quot;FOREVER&quot; and use that in the code wherever the TTL should be unlimited. Also, can we make it&apos;s value -1 instead of 0?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Memcache&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Why the use of Date class instead of System.currentTimeMillis()? Is there something I&apos;m missing?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;HStore&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;In getFull, you do the filtering for expired cells at the store level instead of when you&apos;re actually iterating. Why not just not add the cells to the results array at all? You&apos;ll use less memory.&lt;/li&gt;
	&lt;li&gt;Same as above in get.&lt;/li&gt;
&lt;/ul&gt;

</comment>
                            <comment id="12592907" author="apurtell" created="Mon, 28 Apr 2008 21:45:56 +0000"  >&lt;p&gt;Thanks for looking at the patch. I&apos;ll address all of the comments and post a new patch shortly. &lt;/p&gt;

&lt;p&gt;Regarding Date() versus System.currentTimeMillis(), I come to Java from a C/C++ background so I haven&apos;t necessarily learned which is the best idiom to use for any particular need. However in this case I have learned one more. &lt;/p&gt;</comment>
                            <comment id="12593451" author="apurtell" created="Wed, 30 Apr 2008 22:36:51 +0000"  >&lt;p&gt;Please find attached another patch. It includes a simple unit test (TestTTL) that completes successfully for me:&lt;/p&gt;

&lt;p&gt;% ant test -Dtestcase=TestTTL&lt;br/&gt;
...&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Tests run:1, Failures: 0, Errors:0, Time elapsed: 71.449 sec.&lt;/p&gt;

&lt;p&gt; I have also performed some limited testing with HQL in a single master / single regionserver environment, e.g. using disable/enable table to force flushes and the like, then select to confirm the expected behavior, in conjunction with DEBUG logging. I&apos;m going to try for some more substantial testing with a multimillion row data set, but it may take me some time to complete that.&lt;/p&gt;</comment>
                            <comment id="12593494" author="bryanduxbury" created="Thu, 1 May 2008 06:07:58 +0000"  >&lt;p&gt;HColumnDescriptor:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Update HColumnDescriptor&apos;s javadoc to reference HConstants.FOREVER instead of the actual raw value.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Memcache:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Instead of having memcache take an HStore, could we just make it take a TTL? A memcache is only ever for a single column family, and TTL is configured at the family level. I just don&apos;t like the &quot;if (store != null)&quot; stuff that it does now. The default constructor can just pass a FOREVER TTL to the other constructor.&lt;/li&gt;
	&lt;li&gt;Instead of doing the math to turn TTL seconds into milleseconds during every call, can we move it into the constructor?&lt;/li&gt;
	&lt;li&gt;Line 314: even though it&apos;s only a debug message, you should wrap the line with &quot;if (LOG.isDebugEnabled() 
{...}
&lt;p&gt;&quot;. Even though the line won&apos;t make it out to the log, the string will still get evaluated, and we&apos;d like to avoid that when we&apos;re not in debug.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;HStore&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Same as above regarding TTL seconds to milleseconds.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Some small items:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;There are tabs in this patch - please replace them with two spaces.&lt;/li&gt;
	&lt;li&gt;I like the test, but I&apos;m loath to include another 70 seconds in the test suite. Can you put the values in the past and see if they are immediately screened out? That would make it a very fast test.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Overall I really like this patch. This is an impressive feature to take on and it&apos;s been done admirably. Thanks Andrew!&lt;/p&gt;
</comment>
                            <comment id="12593497" author="bryanduxbury" created="Thu, 1 May 2008 06:31:07 +0000"  >&lt;p&gt;I applied the patch and ran the test suite. I had failures in TestToString, client.TestTimestamp, and regionserver.TestTimestamp. Everything else passed.&lt;/p&gt;</comment>
                            <comment id="12593576" author="apurtell" created="Thu, 1 May 2008 16:41:31 +0000"  >&lt;p&gt;Thanks for the patch review. I&apos;ll address all of the comments and should have another patch ready shortly. Also, I&apos;ll look into the test failures observed.&lt;/p&gt;</comment>
                            <comment id="12593695" author="apurtell" created="Fri, 2 May 2008 01:40:56 +0000"  >&lt;p&gt;Attached please find the latest patch &quot;hbase-ttl-0.2-r652725.patch&quot;.  This patch passes all tests for me. &lt;/p&gt;

&lt;p&gt;I modified the TTL test case to use timestamps in the past to test memcache expiration without requiring any sleep. The test now uses only a 10 second pause to also check the store file scanner modifications.  For me the total running time is approximately 20 seconds. I hope that is acceptable. &lt;/p&gt;</comment>
                            <comment id="12593899" author="apurtell" created="Fri, 2 May 2008 21:37:24 +0000"  >&lt;p&gt;Attached as &quot;hbase-ttl-0.2-r652919.patch&quot; is the latest patch. It passes all tests and also cures an NPE in the Master&apos;s IPC server processing a region open message where the serialized HColumnDescriptor objects were a version earlier than my latest. This is not a problem specific to my changes. See also &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-612&quot; title=&quot;HColumnDescriptor&amp;#39;s readFields() method is version aware but its write() method is not&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-612&quot;&gt;&lt;del&gt;HBASE-612&lt;/del&gt;&lt;/a&gt;. &lt;/p&gt;</comment>
                            <comment id="12594696" author="bryanduxbury" created="Tue, 6 May 2008 20:27:11 +0000"  >&lt;p&gt;This newest patch applies cleanly and tests all pass. Personally, I&apos;m +1 to commit. I&apos;d like for Stack or Jim to take a look at it before we commit it. &lt;/p&gt;

&lt;p&gt;Thanks again for this really great patch, Andrew. You&apos;ve knocked out a really ambitious bit of work here.&lt;/p&gt;</comment>
                            <comment id="12594697" author="apurtell" created="Tue, 6 May 2008 20:36:13 +0000"  >&lt;p&gt;Great!&lt;/p&gt;

&lt;p&gt;Please note that if &quot;hbase-ttl-0.2-r652919.patch&quot; is applied, there would be no need to apply the patch submitted for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-612&quot; title=&quot;HColumnDescriptor&amp;#39;s readFields() method is version aware but its write() method is not&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-612&quot;&gt;&lt;del&gt;HBASE-612&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12594700" author="bryanduxbury" created="Tue, 6 May 2008 20:44:52 +0000"  >&lt;p&gt;OK - then we&apos;ll resolve 612 when we commit this issue.&lt;/p&gt;</comment>
                            <comment id="12594769" author="stack" created="Wed, 7 May 2008 04:17:34 +0000"  >&lt;p&gt;Reviewed patch.  Tested it locally.  Committed.  Thanks for the patch Andrew.  Good stuff.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12395224">HBASE-612</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12470574">HBASE-2893</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12381221" name="hbase-ttl-0.2-r652401.patch" size="85077" author="apurtell" created="Wed, 30 Apr 2008 22:37:05 +0000"/>
                            <attachment id="12381293" name="hbase-ttl-0.2-r652725.patch" size="86462" author="apurtell" created="Fri, 2 May 2008 01:41:47 +0000"/>
                            <attachment id="12381347" name="hbase-ttl-0.2-r652919.patch" size="86629" author="apurtell" created="Fri, 2 May 2008 21:37:37 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 3 Feb 2008 20:42:32 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31647</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            8 years, 33 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0h3sf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>97876</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>